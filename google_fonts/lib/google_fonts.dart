// GENERATED CODE - DO NOT EDIT

// Copyright 2019 The Flutter team. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// WARNING: This package is experimental and should not be used in production.

import 'package:flutter/material.dart';
import 'src/google_fonts_base.dart';
import 'src/google_fonts_variant.dart';

class GoogleFonts {
  static TextStyle aBeeZeeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/abeezee/v13/esDR31xSG-6AGleN6tKukbcHCpE.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/abeezee/v13/esDT31xSG-6AGleN2tCklZUCGpG-GQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ABeeZee',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aBeeZeeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aBeeZeeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle abelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/abel/v10/MwQ5bhbm2POE6VhLPJp6qGI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Abel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme abelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.abelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.abelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.abelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.abelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.abelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.abelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.abelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.abelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.abelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.abelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.abelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.abelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.abelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle abhayaLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/abhayalibre/v5/e3tmeuGtX-Co5MNzeAOqinEge0PWovdU4w.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/abhayalibre/v5/e3t5euGtX-Co5MNzeAOqinEYj2ryqtxI6oYtBA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/abhayalibre/v5/e3t5euGtX-Co5MNzeAOqinEYo23yqtxI6oYtBA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/abhayalibre/v5/e3t5euGtX-Co5MNzeAOqinEYx2zyqtxI6oYtBA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/abhayalibre/v5/e3t5euGtX-Co5MNzeAOqinEY22_yqtxI6oYtBA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AbhayaLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme abhayaLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.abhayaLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle abrilFatfaceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/abrilfatface/v11/zOL64pLDlL1D99S8g8PtiKchm-BsjOLhZBY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AbrilFatface',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme abrilFatfaceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.abrilFatfaceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aclonicaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aclonica/v10/K2FyfZJVlfNNSEBXGb7TCI6oBjLz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Aclonica',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aclonicaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aclonicaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle acmeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/acme/v9/RrQfboBx-C5_bx3Lb23lzLk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Acme',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme acmeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.acmeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.acmeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.acmeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.acmeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.acmeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.acmeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.acmeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.acmeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.acmeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.acmeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.acmeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.acmeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.acmeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle actorTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/actor/v9/wEOzEBbCkc5cO3ekXygtUMIO.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Actor',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme actorTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.actorTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.actorTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.actorTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.actorTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.actorTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.actorTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.actorTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.actorTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.actorTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.actorTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.actorTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.actorTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.actorTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle adaminaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/adamina/v13/j8_r6-DH1bjoc-dwu-reETl4Bno.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Adamina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme adaminaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.adaminaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle adventProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mCoQfxVT4Dvddr_yOwjVmtLZxcBtItFw.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mDoQfxVT4Dvddr_yOwjfWMDbZyCts0DqQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mDoQfxVT4Dvddr_yOwjZGPDbZyCts0DqQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mAoQfxVT4Dvddr_yOwtT2nKb5ZFtI.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mDoQfxVT4Dvddr_yOwjcmODbZyCts0DqQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mDoQfxVT4Dvddr_yOwjeWJDbZyCts0DqQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/adventpro/v10/V8mDoQfxVT4Dvddr_yOwjYGIDbZyCts0DqQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AdventPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme adventProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.adventProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.adventProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.adventProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.adventProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.adventProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.adventProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.adventProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.adventProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.adventProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.adventProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.adventProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.adventProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.adventProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aguafinaScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aguafinascript/v8/If2QXTv_ZzSxGIO30LemWEOmt1bHqs4pgicOrg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AguafinaScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aguafinaScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aguafinaScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle akronimTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/akronim/v9/fdN-9sqWtWZZlHRp-gBxkFYN-a8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Akronim',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme akronimTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.akronimTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.akronimTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.akronimTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.akronimTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.akronimTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.akronimTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.akronimTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.akronimTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.akronimTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.akronimTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.akronimTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.akronimTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.akronimTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aladinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aladin/v8/ZgNSjPJFPrvJV5f16Sf4pGT2Ng.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Aladin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aladinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aladinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aladinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aladinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aladinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aladinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aladinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aladinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aladinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aladinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aladinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aladinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aladinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aladinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aldrichTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aldrich/v10/MCoTzAn-1s3IGyJMZaAS3pP5H_E.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Aldrich',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aldrichTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aldrichTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alefTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alef/v11/FeVfS0NQpLYgrjJbC5FxxbU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/alef/v11/FeVQS0NQpLYglo50L5la2bxii28.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Alef',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alefTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alefTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alefTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alefTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alefTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alefTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alefTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alefTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alefTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alefTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alefTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alefTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alefTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alefTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alegreyaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaBrEBBsBhlBjvfkRLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaHrEBBsBhlBjvfkSLkx63j5pN1MwI.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaGrEBBsBhlBjvfkSoS5I3JyJ98KhtH.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaErEBBsBhlBjvfkSLk_1nKwpteLwtHJlc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaGrEBBsBhlBjvfkSpa4o3JyJ98KhtH.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaErEBBsBhlBjvfkSLk_xHMwpteLwtHJlc.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaGrEBBsBhlBjvfkSpG4Y3JyJ98KhtH.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaErEBBsBhlBjvfkSLk_w3PwpteLwtHJlc.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaGrEBBsBhlBjvfkSpi4I3JyJ98KhtH.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/alegreya/v13/4UaErEBBsBhlBjvfkSLk_ynOwpteLwtHJlc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Alegreya',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alegreyaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alegreyaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alegreyaSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiOGmRtCJ62-O0HhNEa-a6o05E5abe_.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiMGmRtCJ62-O0HhNEa-Z6q2ZUbbKe_DGs.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiTGmRtCJ62-O0HhNEa-ZZc-rUxQqu2FXKD.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiRGmRtCJ62-O0HhNEa-Z6q4WEySK-UEGKDBz4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiTGmRtCJ62-O0HhNEa-ZYU_LUxQqu2FXKD.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiRGmRtCJ62-O0HhNEa-Z6q4Sk0SK-UEGKDBz4.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiTGmRtCJ62-O0HhNEa-ZYI_7UxQqu2FXKD.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiRGmRtCJ62-O0HhNEa-Z6q4TU3SK-UEGKDBz4.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiTGmRtCJ62-O0HhNEa-ZYs_rUxQqu2FXKD.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/alegreyasc/v11/taiRGmRtCJ62-O0HhNEa-Z6q4RE2SK-UEGKDBz4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlegreyaSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alegreyaSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alegreyaSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alegreyaSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUt9_-1phKLFgshYDvh6Vwt5TltuGdShm5bsg.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUv9_-1phKLFgshYDvh6Vwt7V9V3G1WpGtLsgu7.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUu9_-1phKLFgshYDvh6Vwt5fFPmE18imdCqxI.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUo9_-1phKLFgshYDvh6Vwt7V9VFE92jkVHuxKiBA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUz9_-1phKLFgshYDvh6Vwt3V1nvEVXlm4.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUt9_-1phKLFgshYDvh6Vwt7V9tuGdShm5bsg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUu9_-1phKLFgshYDvh6Vwt5alOmE18imdCqxI.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUo9_-1phKLFgshYDvh6Vwt7V9VTE52jkVHuxKiBA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUu9_-1phKLFgshYDvh6Vwt5eFImE18imdCqxI.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUo9_-1phKLFgshYDvh6Vwt7V9VBEh2jkVHuxKiBA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUu9_-1phKLFgshYDvh6Vwt5f1LmE18imdCqxI.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUo9_-1phKLFgshYDvh6Vwt7V9VGEt2jkVHuxKiBA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUu9_-1phKLFgshYDvh6Vwt5dlKmE18imdCqxI.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/alegreyasans/v10/5aUo9_-1phKLFgshYDvh6Vwt7V9VPEp2jkVHuxKiBA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlegreyaSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alegreyaSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alegreyaSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alegreyaSansSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGn4-RGJqfMvt7P8FUr0Q1j-Hf1Dipl8g5FPYtmMg.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGl4-RGJqfMvt7P8FUr0Q1j-Hf1BkxdlgRBH452Mvds.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGm4-RGJqfMvt7P8FUr0Q1j-Hf1DuJH0iRrMYJ_K-4.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGk4-RGJqfMvt7P8FUr0Q1j-Hf1BkxdXiZhNaB6O-51OA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGh4-RGJqfMvt7P8FUr0Q1j-Hf1Nk5v9ixALYs.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGn4-RGJqfMvt7P8FUr0Q1j-Hf1Bkxl8g5FPYtmMg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGm4-RGJqfMvt7P8FUr0Q1j-Hf1DrpG0iRrMYJ_K-4.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGk4-RGJqfMvt7P8FUr0Q1j-Hf1BkxdBidhNaB6O-51OA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGm4-RGJqfMvt7P8FUr0Q1j-Hf1DvJA0iRrMYJ_K-4.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGk4-RGJqfMvt7P8FUr0Q1j-Hf1BkxdTiFhNaB6O-51OA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGm4-RGJqfMvt7P8FUr0Q1j-Hf1Du5D0iRrMYJ_K-4.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGk4-RGJqfMvt7P8FUr0Q1j-Hf1BkxdUiJhNaB6O-51OA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGm4-RGJqfMvt7P8FUr0Q1j-Hf1DspC0iRrMYJ_K-4.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/alegreyasanssc/v9/mtGk4-RGJqfMvt7P8FUr0Q1j-Hf1BkxddiNhNaB6O-51OA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlegreyaSansSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alegreyaSansSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alegreyaSansSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aleoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/aleo/v3/c4mg1nF8G8_syKbr9DVDno985KM.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/aleo/v3/c4mi1nF8G8_swAjxeDdJmq159KOnWA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aleo/v3/c4mv1nF8G8_s8ArD0D1ogoY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/aleo/v3/c4mh1nF8G8_swAjJ1B9tkoZl_Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/aleo/v3/c4mg1nF8G8_syLbs9DVDno985KM.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/aleo/v3/c4mi1nF8G8_swAjxaDBJmq159KOnWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Aleo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aleoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aleoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aleoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aleoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aleoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aleoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aleoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aleoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aleoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aleoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aleoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aleoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aleoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aleoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alexBrushTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alexbrush/v11/SZc83FzrJKuqFbwMKk6EtUL57DtOmCc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlexBrush',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alexBrushTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alexBrushTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alfaSlabOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alfaslabone/v9/6NUQ8FmMKwSEKjnm5-4v-4Jh6dVretWvYmE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlfaSlabOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alfaSlabOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alfaSlabOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aliceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alice/v11/OpNCnoEEmtHa6FcJpA_chzJ0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Alice',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aliceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aliceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aliceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aliceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aliceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aliceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aliceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aliceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aliceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aliceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aliceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aliceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aliceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aliceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alikeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alike/v12/HI_EiYEYI6BIoEjBSZXAQ4-d.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Alike',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alikeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alikeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alikeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alikeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alikeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alikeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alikeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alikeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alikeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alikeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alikeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alikeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alikeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alikeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alikeAngularTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/alikeangular/v10/3qTrojWunjGQtEBlIcwMbSoI3kM6bB7FKjE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlikeAngular',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alikeAngularTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alikeAngularTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle allanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/allan/v12/ea8XadU7WuTxEtb2P9SF8nZE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/allan/v12/ea8aadU7WuTxEu5KEPCN2WpNgEKU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Allan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme allanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.allanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.allanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.allanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.allanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.allanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.allanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.allanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.allanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.allanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.allanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.allanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.allanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.allanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle allertaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/allerta/v10/TwMO-IAHRlkbx940UnEdSQqO5uY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Allerta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme allertaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.allertaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.allertaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.allertaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.allertaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.allertaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.allertaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.allertaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.allertaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.allertaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.allertaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.allertaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.allertaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.allertaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle allertaStencilTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/allertastencil/v10/HTx0L209KT-LmIE9N7OR6eiycOeF-zz313DuvQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AllertaStencil',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme allertaStencilTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.allertaStencilTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle alluraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/allura/v8/9oRPNYsQpS4zjuAPjAIXPtrrGA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Allura',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme alluraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.alluraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.alluraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.alluraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.alluraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.alluraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.alluraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.alluraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.alluraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.alluraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.alluraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.alluraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.alluraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.alluraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle almaraiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/almarai/v2/tssoApxBaigK_hnnS_anhnicoq72sXg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/almarai/v2/tsstApxBaigK_hnnc1qPonC3vqc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/almarai/v2/tssoApxBaigK_hnnS-aghnicoq72sXg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/almarai/v2/tssoApxBaigK_hnnS_qjhnicoq72sXg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Almarai',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme almaraiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.almaraiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle almendraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/almendra/v12/H4ckBXKAlMnTn0CskyY6wr-wg763.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/almendra/v12/H4ciBXKAlMnTn0CskxY4yLuShq63czE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/almendra/v12/H4cjBXKAlMnTn0Cskx6G7Zu4qKK-aihq.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/almendra/v12/H4chBXKAlMnTn0CskxY48Ae9oqacbzhqDtg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Almendra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme almendraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.almendraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.almendraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.almendraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.almendraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.almendraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.almendraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.almendraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.almendraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.almendraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.almendraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.almendraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.almendraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.almendraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle almendraDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/almendradisplay/v10/0FlPVOGWl1Sb4O3tETtADHRRlZhzXS_eTyer338.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlmendraDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme almendraDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.almendraDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle almendraSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/almendrasc/v10/Iure6Yx284eebowr7hbyTZZJprVA4XQ0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AlmendraSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme almendraSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.almendraSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amaranteTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amarante/v7/xMQXuF1KTa6EvGx9bq-3C3rAmD-b.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amarante',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amaranteTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amaranteTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amaranthTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amaranth/v10/KtkuALODe433f0j1zPnCF9GqwnzW.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/amaranth/v10/KtkoALODe433f0j1zMnAHdWIx2zWD4I.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/amaranth/v10/KtkpALODe433f0j1zMF-OPWi6WDfFpuc.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/amaranth/v10/KtkrALODe433f0j1zMnAJWmn42T9E4ucRY8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amaranth',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amaranthTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amaranthTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amaticSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amaticsc/v13/TUZyzwprpvBS1izr_vO0De6ecZQf1A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/amaticsc/v13/TUZ3zwprpvBS1izr_vOMscG6eb8D3WTy-A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AmaticSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amaticSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amaticSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amethystaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amethysta/v8/rP2Fp2K15kgb_F3ibfWIGDWCBl0O8Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amethysta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amethystaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amethystaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amikoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amiko/v4/WwkQxPq1DFK04tqlc17MMZgJ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/amiko/v4/WwkdxPq1DFK04uJ9XXrEGoQAUco5.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/amiko/v4/WwkdxPq1DFK04uIZXHrEGoQAUco5.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amiko',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amikoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amikoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amikoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amikoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amikoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amikoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amikoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amikoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amikoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amikoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amikoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amikoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amikoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amikoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amiriTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amiri/v13/J7aRnpd8CGxBHqUpvrIw74NL.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/amiri/v13/J7afnpd8CGxBHpUrtLYS6pNLAjk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/amiri/v13/J7acnpd8CGxBHp2VkZY4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/amiri/v13/J7aanpd8CGxBHpUrjAo9zptgHjAavCA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amiri',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amiriTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amiriTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amiriTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amiriTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amiriTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amiriTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amiriTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amiriTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amiriTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amiriTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amiriTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amiriTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amiriTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amiriTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle amitaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/amita/v5/HhyaU5si9Om7PQlvAfSKEZZL.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/amita/v5/HhyXU5si9Om7PTHTLtCCOopCTKkI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Amita',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme amitaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.amitaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.amitaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.amitaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.amitaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.amitaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.amitaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.amitaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.amitaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.amitaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.amitaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.amitaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.amitaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.amitaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle anaheimTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/anaheim/v7/8vII7w042Wp87g4G0UTUEE5eK_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Anaheim',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme anaheimTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.anaheimTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle andadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/andada/v11/uK_y4riWaego3w9RCh0TMv6EXw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Andada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme andadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.andadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.andadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.andadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.andadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.andadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.andadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.andadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.andadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.andadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.andadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.andadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.andadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.andadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle andikaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/andika/v11/mem_Ya6iyW-LwqgAbbwRWrwGVA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Andika',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme andikaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.andikaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.andikaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.andikaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.andikaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.andikaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.andikaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.andikaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.andikaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.andikaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.andikaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.andikaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.andikaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.andikaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle angkorTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/angkor/v12/H4cmBXyAlsPdnlb-8iw-4Lqggw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Angkor',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme angkorTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.angkorTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.angkorTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.angkorTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.angkorTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.angkorTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.angkorTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.angkorTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.angkorTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.angkorTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.angkorTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.angkorTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.angkorTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.angkorTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle annieUseYourTelescopeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/annieuseyourtelescope/v10/daaLSS4tI2qYYl3Jq9s_Hu74xwktnlKxH6osGVGjlDfB3UUVZA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AnnieUseYourTelescope',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme annieUseYourTelescopeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.annieUseYourTelescopeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle anonymousProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/anonymouspro/v13/rP2Bp2a15UIB7Un-bOeISG3pLlw89CH98Ko.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/anonymouspro/v13/rP2fp2a15UIB7Un-bOeISG3pHl428AP44Kqr2Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/anonymouspro/v13/rP2cp2a15UIB7Un-bOeISG3pFuAT0CnW7KOywKo.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/anonymouspro/v13/rP2ap2a15UIB7Un-bOeISG3pHl4OTCzc6IG30KqB9Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AnonymousPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme anonymousProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.anonymousProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle anticTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/antic/v11/TuGfUVB8XY5DRaZLodgzydtk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Antic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme anticTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.anticTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.anticTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.anticTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.anticTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.anticTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.anticTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.anticTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.anticTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.anticTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.anticTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.anticTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.anticTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.anticTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle anticDidoneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/anticdidone/v8/RWmPoKKX6u8sp8fIWdnDKqDiqYsGBGBzCw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AnticDidone',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme anticDidoneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.anticDidoneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle anticSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/anticslab/v8/bWt97fPFfRzkCa9Jlp6IWcJWXW5p5Qo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AnticSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme anticSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.anticSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle antonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/anton/v11/1Ptgg87LROyAm0K08i4gS7lu.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Anton',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme antonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.antonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.antonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.antonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.antonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.antonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.antonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.antonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.antonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.antonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.antonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.antonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.antonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.antonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arapeyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arapey/v8/-W__XJn-UDDA2RC6Z9AcZkIzeg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/arapey/v8/-W_9XJn-UDDA2RCKZdoYREcjeo0k.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arapey',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arapeyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arapeyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arbutusTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arbutus/v9/NaPYcZ7dG_5J3poob9JtryO8fMU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arbutus',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arbutusTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arbutusTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arbutusSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arbutusslab/v8/oY1Z8e7OuLXkJGbXtr5ba7ZVa68dJlaFAQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArbutusSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arbutusSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arbutusSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle architectsDaughterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/architectsdaughter/v10/KtkxAKiDZI_td1Lkx62xHZHDtgO_Y-bvfY5q4szgE-Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArchitectsDaughter',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme architectsDaughterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.architectsDaughterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle archivoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/archivo/v6/k3kQo8UDI-1M0wlSTd7iL0nAMaM.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/archivo/v6/k3kSo8UDI-1M0wlSfdzoK2vFIaOV8A.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/archivo/v6/k3kVo8UDI-1M0wlSdSrLC0HrLaqM6Q4.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/archivo/v6/k3kXo8UDI-1M0wlSfdzQ30LhKYiJ-Q7m8w.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/archivo/v6/k3kVo8UDI-1M0wlSdQbMC0HrLaqM6Q4.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/archivo/v6/k3kXo8UDI-1M0wlSfdzQ80XhKYiJ-Q7m8w.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/archivo/v6/k3kVo8UDI-1M0wlSdWLNC0HrLaqM6Q4.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/archivo/v6/k3kXo8UDI-1M0wlSfdzQl0ThKYiJ-Q7m8w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Archivo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme archivoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.archivoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.archivoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.archivoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.archivoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.archivoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.archivoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.archivoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.archivoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.archivoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.archivoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.archivoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.archivoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.archivoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle archivoBlackTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/archivoblack/v9/HTxqL289NzCGg4MzN6KJ7eW6OYuP_x7yx3A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArchivoBlack',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme archivoBlackTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.archivoBlackTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle archivoNarrowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tss0ApVBdCYD5Q7hcxTE1ArZ0Yb3g31S2s8p.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tss2ApVBdCYD5Q7hcxTE1ArZ0bb1iXlw398pJxk.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tss3ApVBdCYD5Q7hcxTE1ArZ0b4Dqlla8dMgPgBu.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tssxApVBdCYD5Q7hcxTE1ArZ0bb1sY1Z-9cCOxBu_BM.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tss3ApVBdCYD5Q7hcxTE1ArZ0b4vrVla8dMgPgBu.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tssxApVBdCYD5Q7hcxTE1ArZ0bb1saFe-9cCOxBu_BM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tss3ApVBdCYD5Q7hcxTE1ArZ0b5LrFla8dMgPgBu.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/archivonarrow/v11/tssxApVBdCYD5Q7hcxTE1ArZ0bb1scVf-9cCOxBu_BM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArchivoNarrow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme archivoNarrowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.archivoNarrowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arefRuqaaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arefruqaa/v8/WwkbxPW1E165rajQKDulEIAiVNo5xNY.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arefruqaa/v8/WwkYxPW1E165rajQKDulKDwNcNIS2N_7Bdk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArefRuqaa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arefRuqaaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arefRuqaaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arimaMaduraiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t4IRoeKYORG0WNMgnC3seB1V3PqrGCch4Drg.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1fHuipusfhcat2c.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1ZXtipusfhcat2c.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5tmIRoeKYORG0WNMgnC3seB7TnFrpOHYh4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1c3sipusfhcat2c.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1YXqipusfhcat2c.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1Znpipusfhcat2c.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/arimamadurai/v5/t5t7IRoeKYORG0WNMgnC3seB1b3oipusfhcat2c.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ArimaMadurai',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arimaMaduraiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arimaMaduraiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arimoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arimo/v13/P5sMzZCDf9_T_20eziBMjI-u.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/arimo/v13/P5sCzZCDf9_T_10cxCRuiZ-uydg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arimo/v13/P5sBzZCDf9_T_1Wi4QREp5On0ME2.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/arimo/v13/P5sHzZCDf9_T_10c_JhBrZeF1dE2PY4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arimo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arimoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arimoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arimoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arimoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arimoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arimoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arimoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arimoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arimoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arimoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arimoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arimoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arimoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arimoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arizoniaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arizonia/v10/neIIzCemt4A5qa7mv6WGHK06UY30.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arizonia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arizoniaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arizoniaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle armataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/armata/v11/gokvH63_HV5jQ-E9lD53Q2u_mQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Armata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme armataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.armataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.armataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.armataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.armataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.armataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.armataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.armataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.armataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.armataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.armataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.armataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.armataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.armataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arsenalTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arsenal/v4/wXKrE3kQtZQ4pF3D11_WAewrhXY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/arsenal/v4/wXKpE3kQtZQ4pF3D513cBc4ulXYrtA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arsenal/v4/wXKuE3kQtZQ4pF3D7-P5JeQAmX8yrdk.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/arsenal/v4/wXKsE3kQtZQ4pF3D513kueEKnV03vdnKjw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arsenal',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arsenalTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arsenalTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle artifikaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/artifika/v10/VEMyRoxzronptCuxu6Wt5jDtreOL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Artifika',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme artifikaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.artifikaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle arvoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arvo/v13/tDbD2oWUg0MKmSAa7Lzr7vs.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/arvo/v13/tDbN2oWUg0MKqSIQ6J7u_vvijQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arvo/v13/tDbM2oWUg0MKoZw1yLTA8vL7lAE.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/arvo/v13/tDbO2oWUg0MKqSIoVLHK9tD-hAHkGg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arvo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme arvoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.arvoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.arvoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.arvoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.arvoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.arvoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.arvoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.arvoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.arvoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.arvoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.arvoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.arvoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.arvoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.arvoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aryaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/arya/v5/ga6CawNG-HJd9Ub1-beqdFE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/arya/v5/ga6NawNG-HJdzfra3b-BaFg3dRE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Arya',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aryaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aryaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aryaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aryaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aryaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aryaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aryaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aryaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aryaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aryaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aryaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aryaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aryaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aryaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle asapTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/asap/v11/KFOoCniXp96a-zwU4UROGzY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/asap/v11/KFOmCniXp96ayz4e5WZLCzYlKw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/asap/v11/KFOnCniXp96aw8g9xUxlBz88MsA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/asap/v11/KFOlCniXp96ayz4mEU9vAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/asap/v11/KFOnCniXp96aw-Q6xUxlBz88MsA.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/asap/v11/KFOlCniXp96ayz4mPUhvAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/asap/v11/KFOnCniXp96aw4A7xUxlBz88MsA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/asap/v11/KFOlCniXp96ayz4mWUlvAx05IsDqlA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Asap',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme asapTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.asapTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.asapTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.asapTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.asapTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.asapTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.asapTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.asapTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.asapTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.asapTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.asapTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.asapTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.asapTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.asapTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle asapCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxidypY1o9NHyXh3WvSbGSggdNeLYk1Mq3ap.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxifypY1o9NHyXh3WvSbGSggdOeJaElurmapvvM.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxieypY1o9NHyXh3WvSbGSggdO9_S2lEgGqgp-pO.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxiYypY1o9NHyXh3WvSbGSggdOeJUL1Him6CovpOkXA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxieypY1o9NHyXh3WvSbGSggdO9TTGlEgGqgp-pO.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxiYypY1o9NHyXh3WvSbGSggdOeJUJFAim6CovpOkXA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxieypY1o9NHyXh3WvSbGSggdO83TWlEgGqgp-pO.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/asapcondensed/v5/pxiYypY1o9NHyXh3WvSbGSggdOeJUPVBim6CovpOkXA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AsapCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme asapCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.asapCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle asarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/asar/v7/sZlLdRyI6TBIXkYQDLlTW6E.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Asar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme asarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.asarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.asarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.asarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.asarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.asarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.asarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.asarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.asarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.asarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.asarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.asarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.asarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.asarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle assetTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/asset/v10/SLXGc1na-mM4cWImRJqExst1.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Asset',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme assetTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.assetTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.assetTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.assetTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.assetTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.assetTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.assetTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.assetTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.assetTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.assetTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.assetTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.assetTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.assetTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.assetTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle assistantTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/assistant/v4/2sDZZGJYnIjSi6H75xk7p0ScA5cZbCjItw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/assistant/v4/2sDZZGJYnIjSi6H75xk7w0ecA5cZbCjItw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/assistant/v4/2sDcZGJYnIjSi6H75xkDb2-4C7wFZQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/assistant/v4/2sDZZGJYnIjSi6H75xk7t0GcA5cZbCjItw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/assistant/v4/2sDZZGJYnIjSi6H75xk700CcA5cZbCjItw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/assistant/v4/2sDZZGJYnIjSi6H75xk7z0OcA5cZbCjItw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Assistant',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme assistantTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.assistantTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.assistantTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.assistantTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.assistantTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.assistantTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.assistantTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.assistantTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.assistantTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.assistantTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.assistantTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.assistantTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.assistantTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.assistantTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle astlochTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/astloch/v11/TuGRUVJ8QI5GSeUjq9wRzMtkH1Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/astloch/v11/TuGUUVJ8QI5GSeUjk2A-6MNPA10xLMQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Astloch',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme astlochTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.astlochTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.astlochTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.astlochTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.astlochTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.astlochTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.astlochTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.astlochTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.astlochTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.astlochTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.astlochTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.astlochTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.astlochTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.astlochTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle asulTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/asul/v9/VuJ-dNjKxYr46fMFXK78JIg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/asul/v9/VuJxdNjKxYr40U8qeKbXOIFneRo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Asul',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme asulTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.asulTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.asulTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.asulTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.asulTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.asulTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.asulTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.asulTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.asulTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.asulTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.asulTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.asulTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.asulTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.asulTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle athitiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/athiti/v4/pe0sMISdLIZIv1wAxDNyAv2-C99ycg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/athiti/v4/pe0sMISdLIZIv1wAoDByAv2-C99ycg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/athiti/v4/pe0vMISdLIZIv1w4DBhWCtaiAg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/athiti/v4/pe0sMISdLIZIv1wA-DFyAv2-C99ycg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/athiti/v4/pe0sMISdLIZIv1wA1DZyAv2-C99ycg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/athiti/v4/pe0sMISdLIZIv1wAsDdyAv2-C99ycg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Athiti',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme athitiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.athitiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.athitiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.athitiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.athitiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.athitiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.athitiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.athitiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.athitiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.athitiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.athitiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.athitiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.athitiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.athitiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle atmaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/atma/v5/uK_z4rqWc-Eoo8JzKjc9PvedRkM.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/atma/v5/uK_84rqWc-Eom25bDj8WIv4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/atma/v5/uK_z4rqWc-Eoo5pyKjc9PvedRkM.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/atma/v5/uK_z4rqWc-Eoo7Z1Kjc9PvedRkM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/atma/v5/uK_z4rqWc-Eoo9J0Kjc9PvedRkM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Atma',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme atmaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.atmaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.atmaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.atmaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.atmaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.atmaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.atmaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.atmaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.atmaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.atmaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.atmaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.atmaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.atmaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.atmaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle atomicAgeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/atomicage/v12/f0Xz0eug6sdmRFkYZZGL58Ht9a8GYeA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AtomicAge',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme atomicAgeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.atomicAgeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle aubreyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/aubrey/v12/q5uGsou7NPBw-p7vugNsCxVEgA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Aubrey',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme aubreyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.aubreyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle audiowideTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/audiowide/v8/l7gdbjpo0cum0ckerWCtkQXPExpQBw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Audiowide',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme audiowideTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.audiowideTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle autourOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/autourone/v9/UqyVK80cP25l3fJgbdfbk5lWVscxdKE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AutourOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme autourOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.autourOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averageTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/average/v8/fC1hPYBHe23MxA7rIeJwVWytTyk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Average',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averageTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averageTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averageTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averageTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averageTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averageTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averageTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averageTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averageTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averageTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averageTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averageTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averageTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averageTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averageSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/averagesans/v8/1Ptpg8fLXP2dlAXR-HlJJNJPBdqazVoK4A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AverageSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averageSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averageSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averiaGruesaLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/averiagruesalibre/v8/NGSov4nEGEktOaDRKsY-1dhh8eEtIx3ZUmmJw0SLRA8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AveriaGruesaLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averiaGruesaLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averiaGruesaLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averiaLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0FKIcMGZEnV6xygz7eNjEarovtb07t-pQgTw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0HKIcMGZEnV6xygz7eNjESAJFhbUTp2JEwT4Sk.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0aKIcMGZEnV6xygz7eNjEiAqPJZ2Xx8w.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0EKIcMGZEnV6xygz7eNjESAKnNRWDh8405.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0FKIcMGZEnV6xygz7eNjEavoztb07t-pQgTw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/averialibre/v8/2V0HKIcMGZEnV6xygz7eNjESAJFxakTp2JEwT4Sk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AveriaLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averiaLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averiaLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averiaSansLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6SaxZG_G5OvCf_rt7FH3B6BHLMEd3lMKcQJZP1LmD9.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6caxZG_G5OvCf_rt7FH3B6BHLMEdVLKisSL5fXK3D9qtg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6XaxZG_G5OvCf_rt7FH3B6BHLMEeVJGIMYDo_8.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6RaxZG_G5OvCf_rt7FH3B6BHLMEdVLEoc6C5_8N3k.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6SaxZG_G5OvCf_rt7FH3B6BHLMEd31N6cQJZP1LmD9.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/averiasanslibre/v8/ga6caxZG_G5OvCf_rt7FH3B6BHLMEdVLKjsVL5fXK3D9qtg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AveriaSansLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averiaSansLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averiaSansLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle averiaSerifLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIVzD2ms4wxr6GvjeD0X88SHPyX2xYGCSmqwacqdrKvbQ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIbzD2ms4wxr6GvjeD0X88SHPyX2xYOpzMmw60uVLe_bXHq.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIWzD2ms4wxr6GvjeD0X88SHPyX2xY-pQGOyYw2fw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIUzD2ms4wxr6GvjeD0X88SHPyX2xYOpwuK64kmf6u2.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIVzD2ms4wxr6GvjeD0X88SHPyX2xYGGS6qwacqdrKvbQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/averiaseriflibre/v9/neIbzD2ms4wxr6GvjeD0X88SHPyX2xYOpzM2xK0uVLe_bXHq.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'AveriaSerifLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme averiaSerifLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.averiaSerifLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle b612TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/b612/v4/3JnySDDxiSz32jm4GDigUXw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/b612/v4/3Jn8SDDxiSz36juyHBqlQXwdVw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/b612/v4/3Jn9SDDxiSz34oWXPDCLTXUETuE.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/b612/v4/3Jn_SDDxiSz36juKoDWBSVcBXuFb0Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'B612',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme b612TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.b612TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.b612TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.b612TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.b612TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.b612TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.b612TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.b612TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.b612TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.b612TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.b612TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.b612TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.b612TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.b612TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle b612MonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/b612mono/v4/kmK_Zq85QVWbN1eW6lJl1wTcquRTtg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/b612mono/v4/kmK5Zq85QVWbN1eW6lJV1Q7YiOFDtqtf.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/b612mono/v4/kmK6Zq85QVWbN1eW6lJdayv4os9Pv7JGSg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/b612mono/v4/kmKkZq85QVWbN1eW6lJV1TZkp8VLnbdWSg4x.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'B612Mono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme b612MonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.b612MonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle badScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/badscript/v8/6NUT8F6PJgbFWQn47_x7lOwuzd1AZtw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BadScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme badScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.badScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bahianaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bahiana/v4/uU9PCBUV4YenPWJU7xPb3vyHmlI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bahiana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bahianaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bahianaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bahianitaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bahianita/v2/yYLr0hTb3vuqqsBUgxWtxTvV2NJPcA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bahianita',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bahianitaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bahianitaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle baiJamjureeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIqapSCOBt_aeQQ7ftydoa0kePuk5A1-yiSgA.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIoapSCOBt_aeQQ7ftydoa8W_oGkpox2S2CgOva.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIqapSCOBt_aeQQ7ftydoa09eDuk5A1-yiSgA.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIoapSCOBt_aeQQ7ftydoa8W_pikZox2S2CgOva.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDI1apSCOBt_aeQQ7ftydoaMWcjKm7sp8g.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIrapSCOBt_aeQQ7ftydoa8W8LOub458jGL.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIqapSCOBt_aeQQ7ftydoa0reHuk5A1-yiSgA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIoapSCOBt_aeQQ7ftydoa8W_o6kJox2S2CgOva.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIqapSCOBt_aeQQ7ftydoa0gebuk5A1-yiSgA.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIoapSCOBt_aeQQ7ftydoa8W_oWl5ox2S2CgOva.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIqapSCOBt_aeQQ7ftydoa05efuk5A1-yiSgA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/baijamjuree/v3/LDIoapSCOBt_aeQQ7ftydoa8W_pylpox2S2CgOva.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BaiJamjuree',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme baiJamjureeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.baiJamjureeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloo/v5/6xKhdSpJJ92I9PWIAG_5LWwJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Baloo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooBhaiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloobhai/v5/ZgNWjP5GM7bCUdmXgWyVjGXEM4COoE4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooBhai',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooBhaiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooBhaiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooBhaijaanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloobhaijaan/v6/RWmRoKCU5fcqq8fOWNzFLqSjx4ECJmVjC0-V.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooBhaijaan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooBhaijaanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooBhaijaanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooBhainaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloobhaina/v5/Noa16Uzzzp2FIkfhq5vm9thxPAR9mhHobg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooBhaina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooBhainaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooBhainaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooChettanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloochettan/v5/0QImMXRN8o2gTC2YTr4665DA07z8_ApHqqk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooChettan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooChettanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooChettanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooDaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/balooda/v5/LhWmMVnXOfIZO795FXkfSvtVM8mZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooDa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooDaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooDaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooPaajiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloopaaji/v6/8AttGsyxM5KQQU-Y4MTwVZnToxvQBiot.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooPaaji',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooPaajiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooPaajiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooTammaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/balootamma/v6/JTUTjIk68Cy27gWhOWIghE5B5Arr-s50.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooTamma',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooTammaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooTammaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooTammuduTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/balootammudu/v6/mFT3Wb8Qza7c_Z5HTsC_5nxW8EpQl9RWxD8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooTammudu',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooTammuduTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooTammuduTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balooThambiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baloothambi/v5/va9B4kXJzNhTFoA7CYcS8sHuQR37fF3Wlg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BalooThambi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balooThambiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balooThambiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle balthazarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/balthazar/v9/d6lKkaajS8Gm4CVQjFEvyRTo39l8hw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Balthazar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme balthazarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.balthazarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bangersTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bangers/v12/FeVQS0BTqb0h60ACL5la2bxii28.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bangers',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bangersTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bangersTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bangersTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bangersTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bangersTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bangersTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bangersTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bangersTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bangersTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bangersTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bangersTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bangersTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bangersTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bangersTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle barlowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/barlow/v4/7cHrv4kjgoGqM7E3b8s8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHtv4kjgoGqM7E_CfNYwHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3w-oc4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfP04Voptzsrd6m9.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3p-kc4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfOQ4loptzsrd6m9.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/barlow/v4/7cHpv4kjgoGqM7EPC8E46HsxnA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHrv4kjgoGqM7E_Ccs8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3_-gc4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfPI41optzsrd6m9.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E30-8c4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfPk5Foptzsrd6m9.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3t-4c4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfOA5Voptzsrd6m9.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3q-0c4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfOc5loptzsrd6m9.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/barlow/v4/7cHqv4kjgoGqM7E3j-wc4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/barlow/v4/7cHsv4kjgoGqM7E_CfO451optzsrd6m9.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Barlow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme barlowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.barlowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.barlowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.barlowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.barlowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.barlowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.barlowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.barlowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.barlowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.barlowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.barlowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.barlowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.barlowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.barlowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle barlowCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxxL3I-JCGChYJ8VI-L6OO_au7B43LT31vytKgbaw.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxzL3I-JCGChYJ8VI-L6OO_au7B6xTru1H2lq0La6JN.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B497y_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrF3DWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B47rx_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrc3PWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTx3L3I-JCGChYJ8VI-L6OO_au7B2xbZ23n3pKg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxxL3I-JCGChYJ8VI-L6OO_au7B6xTT31vytKgbaw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B4-Lw_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrK3LWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B4873_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrB3XWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B46r2_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrY3TWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B47b1_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrf3fWvIMHYrtUxg.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxwL3I-JCGChYJ8VI-L6OO_au7B45L0_3HcuKECcrs.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/barlowcondensed/v4/HTxyL3I-JCGChYJ8VI-L6OO_au7B6xTrW3bWvIMHYrtUxg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BarlowCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme barlowCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.barlowCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle barlowSemiCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlphgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRfG4qvKk8ogoSP.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpjgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbLLIEsKh5SPZWs.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRft6uPAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbJnAWsgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRf06iPAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbIDAmsgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpvgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRnf4CrCEo4gg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlphgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfYqvKk8ogoSP.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRfi6mPAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbJbA2sgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRfp66PAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbJ3BGsgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRfw6-PAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbITBWsgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRf36yPAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbIPBmsgqZiGfHK5.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpigxjLBV1hqnzfr-F8sEYMB0Yybp0mudRf-62PAGEki52WfA.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/barlowsemicondensed/v5/wlpkgxjLBV1hqnzfr-F8sEYMB0Yybp0mudRXfbIrB2sgqZiGfHK5.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BarlowSemiCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme barlowSemiCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.barlowSemiCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle barriecitoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/barriecito/v2/WWXXlj-CbBOSLY2QTuY_KdUiYwTO0MU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Barriecito',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme barriecitoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.barriecitoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle barrioTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/barrio/v4/wEO8EBXBk8hBIDiEdQYhWdsX1Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Barrio',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme barrioTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.barrioTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.barrioTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.barrioTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.barrioTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.barrioTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.barrioTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.barrioTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.barrioTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.barrioTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.barrioTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.barrioTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.barrioTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.barrioTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle basicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/basic/v9/xfu_0WLxV2_XKQN34lDVyR7D.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Basic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme basicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.basicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.basicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.basicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.basicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.basicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.basicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.basicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.basicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.basicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.basicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.basicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.basicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.basicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle battambangTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/battambang/v13/uk-mEGe7raEw-HjkzZabDnWj4yxx7o8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/battambang/v13/uk-lEGe7raEw-HjkzZabNsmMxyRa8oZK9I0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Battambang',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme battambangTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.battambangTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.battambangTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.battambangTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.battambangTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.battambangTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.battambangTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.battambangTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.battambangTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.battambangTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.battambangTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.battambangTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.battambangTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.battambangTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle baumansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/baumans/v9/-W_-XJj9QyTd3QfpR_oyaksqY5Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Baumans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme baumansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.baumansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.baumansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.baumansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.baumansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.baumansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.baumansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.baumansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.baumansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.baumansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.baumansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.baumansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.baumansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.baumansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bayonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bayon/v13/9XUrlJNmn0LPFl-pOhYEd2NJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bayon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bayonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bayonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bayonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bayonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bayonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bayonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bayonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bayonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bayonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bayonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bayonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bayonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bayonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bayonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle beVietnamTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVxdDflz-iPfoPuIC2iKsUn7W1hK2czPg.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVvdDflz-iPfoPuIC2iIqMfiWdlCWIjPi5p.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVwdDflz-iPfoPuIC2iKg0FzUdPJ24qJzc.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVudDflz-iPfoPuIC2iIqMfQUVFI0wvNzdwXQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVzdDflz-iPfoPuIC2iEqEt6U9kO2c.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVxdDflz-iPfoPuIC2iIqMn7W1hK2czPg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVwdDflz-iPfoPuIC2iKlUEzUdPJ24qJzc.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVudDflz-iPfoPuIC2iIqMfGURFI0wvNzdwXQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVwdDflz-iPfoPuIC2iKnkDzUdPJ24qJzc.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVudDflz-iPfoPuIC2iIqMfNUNFI0wvNzdwXQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVwdDflz-iPfoPuIC2iKh0CzUdPJ24qJzc.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVudDflz-iPfoPuIC2iIqMfUUJFI0wvNzdwXQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVwdDflz-iPfoPuIC2iKgEBzUdPJ24qJzc.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/bevietnam/v1/FBVudDflz-iPfoPuIC2iIqMfTUFFI0wvNzdwXQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BeVietnam',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme beVietnamTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.beVietnamTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle belgranoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/belgrano/v10/55xvey5tM9rwKWrJZcMFirl08KDJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Belgrano',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme belgranoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.belgranoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bellefairTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bellefair/v5/kJExBuYY6AAuhiXUxG19__A2pOdvDA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bellefair',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bellefairTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bellefairTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bellezaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/belleza/v8/0nkoC9_pNeMfhX4BtcbyawzruP8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Belleza',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bellezaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bellezaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle benchNineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/benchnine/v8/ahcev8612zF4jxrwMosT--tRhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/benchnine/v8/ahcbv8612zF4jxrwMosrV8N1jU2gog.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/benchnine/v8/ahcev8612zF4jxrwMosT6-xRhWa8q0v8ag.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BenchNine',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme benchNineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.benchNineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle benthamTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bentham/v10/VdGeAZQPEpYfmHglKWw7CJaK_y4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bentham',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme benthamTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.benthamTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.benthamTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.benthamTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.benthamTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.benthamTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.benthamTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.benthamTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.benthamTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.benthamTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.benthamTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.benthamTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.benthamTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.benthamTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle berkshireSwashTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/berkshireswash/v8/ptRRTi-cavZOGqCvnNJDl5m5XmNPrcQybX4pQA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BerkshireSwash',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme berkshireSwashTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.berkshireSwashTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bethEllenTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bethellen/v1/WwkbxPW2BE-3rb_JNT-qEIAiVNo5xNY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BethEllen',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bethEllenTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bethEllenTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bevanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bevan/v11/4iCj6KZ0a9NXjF8aUir7tlSJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bevan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bevanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bevanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bevanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bevanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bevanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bevanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bevanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bevanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bevanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bevanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bevanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bevanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bevanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bevanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bigShouldersDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1xPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1Ur9DrDJYM2lAZ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1UZ_LLJrgA00kAdA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1_PZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1sy9rvLpMc2g.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1UP_PLJrgA00kAdA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1UE_TLJrgA00kAdA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1Ud_XLJrgA00kAdA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1Ua_bLJrgA00kAdA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/bigshouldersdisplay/v1/fC1yPZJEZG-e9gHhdI4-NBbfd2ys3SjJCx1UT_fLJrgA00kAdA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BigShouldersDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bigShouldersDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bigShouldersDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bigShouldersTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xzezRtP9G3CGPIf49hxc8P0eytUxBU-IZ_YscCdXQB.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBUMKRfSOkOfG0Y3A.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xxezRtP9G3CGPIf49hxc8P0eytUxBsnIx7QMISdQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBUaKVfSOkOfG0Y3A.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBURKJfSOkOfG0Y3A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBUIKNfSOkOfG0Y3A.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBUPKBfSOkOfG0Y3A.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/bigshoulderstext/v1/55xyezRtP9G3CGPIf49hxc8P0eytUxBUGKFfSOkOfG0Y3A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BigShouldersText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bigShouldersTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bigShouldersTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bigelowRulesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bigelowrules/v8/RrQWboly8iR_I3KWSzeRuN0zT4cCH8WAJVk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BigelowRules',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bigelowRulesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bigelowRulesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bigshotOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bigshotone/v10/u-470qukhRkkO6BD_7cM_gxuUQJBXv_-.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BigshotOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bigshotOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bigshotOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bilboTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bilbo/v9/o-0EIpgpwWwZ210hpIRz4wxE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bilbo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bilboTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bilboTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bilboTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bilboTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bilboTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bilboTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bilboTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bilboTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bilboTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bilboTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bilboTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bilboTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bilboTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bilboTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bilboSwashCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bilboswashcaps/v12/zrf-0GXbz-H3Wb4XBsGrTgq2PVmdqAPopiRfKp8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BilboSwashCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bilboSwashCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bilboSwashCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bioRhymeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/biorhyme/v4/1cX3aULHBpDMsHYW_ESOjnGAq8Sk1PoH.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/biorhyme/v4/1cX3aULHBpDMsHYW_ETqjXGAq8Sk1PoH.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/biorhyme/v4/1cXwaULHBpDMsHYW_HxGpVWIgNit.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/biorhyme/v4/1cX3aULHBpDMsHYW_ET6inGAq8Sk1PoH.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/biorhyme/v4/1cX3aULHBpDMsHYW_ETmiXGAq8Sk1PoH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BioRhyme',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bioRhymeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bioRhymeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bioRhymeExpandedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/biorhymeexpanded/v5/i7dVIE1zZzytGswgU577CDY9LjbffxxcblSHSdTXrb_z.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/biorhymeexpanded/v5/i7dVIE1zZzytGswgU577CDY9Ljbffxw4bVSHSdTXrb_z.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/biorhymeexpanded/v5/i7dQIE1zZzytGswgU577CDY9LjbffySURXCPYsje.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/biorhymeexpanded/v5/i7dVIE1zZzytGswgU577CDY9LjbffxwoalSHSdTXrb_z.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/biorhymeexpanded/v5/i7dVIE1zZzytGswgU577CDY9Ljbffxw0aVSHSdTXrb_z.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BioRhymeExpanded',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bioRhymeExpandedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bioRhymeExpandedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle biryaniTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84YddYQyGTBSU-J-RxQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84YddeAxGTBSU-J-RxQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/biryani/v5/hv-WlzNxIFoO84YdTUwZPTh5T-s.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84YddZQ3GTBSU-J-RxQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84YddfA2GTBSU-J-RxQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84Yddew1GTBSU-J-RxQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/biryani/v5/hv-TlzNxIFoO84Yddcg0GTBSU-J-RxQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Biryani',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme biryaniTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.biryaniTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bitterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bitter/v15/rax8HiqOu8IVPmnLeIZoDDlCmg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/bitter/v15/rax-HiqOu8IVPmn7eoxsLjxSmlLZ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/bitter/v15/rax_HiqOu8IVPmnzxKlMBBJek0vA8A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bitter',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bitterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bitterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bitterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bitterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bitterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bitterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bitterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bitterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bitterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bitterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bitterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bitterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bitterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bitterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle blackAndWhitePictureTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/blackandwhitepicture/v8/TwMe-JAERlQd3ooUHBUXGmrmioKjjnRSFO-NqI5HbcMi-yWY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BlackAndWhitePicture',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme blackAndWhitePictureTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.blackAndWhitePictureTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle blackHanSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/blackhansans/v8/ea8Aad44WunzF9a-dL6toA8r8nqVIXSkH-Hc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BlackHanSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme blackHanSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.blackHanSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle blackOpsOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/blackopsone/v11/qWcsB6-ypo7xBdr6Xshe96H3WDzRtjkho4M.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BlackOpsOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme blackOpsOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.blackOpsOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle blinkerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/blinker/v2/cIf_MaFatEE-VTaP_E2hZEsCkIt9QQ.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_OGARGEsnIJkWL4.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_IWDRGEsnIJkWL4.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/blinker/v2/cIf9MaFatEE-VTaPxCmrYGkHgIs.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_PGFRGEsnIJkWL4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_JWERGEsnIJkWL4.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_ImHRGEsnIJkWL4.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/blinker/v2/cIf4MaFatEE-VTaP_K2GRGEsnIJkWL4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Blinker',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme blinkerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.blinkerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bokorTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bokor/v12/m8JcjfpeeaqTiR2WdInbcaxE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bokor',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bokorTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bokorTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bokorTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bokorTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bokorTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bokorTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bokorTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bokorTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bokorTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bokorTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bokorTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bokorTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bokorTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bokorTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bonbonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bonbon/v11/0FlVVPeVlFec4ee_cDEAbQY5-A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bonbon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bonbonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bonbonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle boogalooTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/boogaloo/v11/kmK-Zq45GAvOdnaW6x1F_SrQo_1K.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Boogaloo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme boogalooTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.boogalooTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bowlbyOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bowlbyone/v11/taiPGmVuC4y96PFeqp8smo6C_Z0wcK4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BowlbyOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bowlbyOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bowlbyOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bowlbyOneSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bowlbyonesc/v11/DtVlJxerQqQm37tzN3wMug9Pzgj8owhNjuE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BowlbyOneSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bowlbyOneSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bowlbyOneSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle brawlerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/brawler/v10/xn7gYHE3xXewAscGsgC7S9XdZN8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Brawler',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme brawlerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.brawlerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle breeSerifTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/breeserif/v9/4UaHrEJCrhhnVA3DgluAx63j5pN1MwI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BreeSerif',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme breeSerifTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.breeSerifTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bubblegumSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bubblegumsans/v8/AYCSpXb_Z9EORv1M5QTjEzMEtdaHzoPPb7R4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BubblegumSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bubblegumSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bubblegumSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bubblerOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bubblerone/v8/f0Xy0eqj68ppQV9KBLmAouHH26MPePkt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BubblerOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bubblerOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bubblerOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle budaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/buda/v10/GFDqWAN8mnyIJSSrG7UBr7pZKA0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Buda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme budaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.budaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.budaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.budaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.budaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.budaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.budaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.budaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.budaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.budaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.budaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.budaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.budaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.budaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle buenardTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/buenard/v11/OD5DuM6Cyma8FnnsPzf9qGi9HL4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/buenard/v11/OD5GuM6Cyma8FnnsB4vSjGCWALepwss.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Buenard',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme buenardTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.buenardTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.buenardTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.buenardTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.buenardTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.buenardTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.buenardTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.buenardTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.buenardTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.buenardTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.buenardTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.buenardTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.buenardTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.buenardTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bungeeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bungee/v5/N0bU2SZBIuF2PU_ECn50Kd_PmA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Bungee',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bungeeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bungeeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bungeeHairlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bungeehairline/v5/snfys0G548t04270a_ljTLUVrv-7YB2dQ5ZPqQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BungeeHairline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bungeeHairlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bungeeHairlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bungeeInlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bungeeinline/v5/Gg8zN58UcgnlCweMrih332VuDGJ1-FEglsc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BungeeInline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bungeeInlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bungeeInlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bungeeOutlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bungeeoutline/v5/_6_mEDvmVP24UvU2MyiGDslL3Qg3YhJqPXxo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BungeeOutline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bungeeOutlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bungeeOutlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle bungeeShadeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/bungeeshade/v5/DtVkJxarWL0t2KdzK3oI_jks7iLSrwFUlw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'BungeeShade',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme bungeeShadeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.bungeeShadeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle butchermanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/butcherman/v11/2EbiL-thF0loflXUBOdb1zWzq_5uT84.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Butcherman',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme butchermanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.butchermanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle butterflyKidsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/butterflykids/v8/ll8lK2CWTjuqAsXDqlnIbMNs5S4arxFrAX1D.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ButterflyKids',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme butterflyKidsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.butterflyKidsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cabinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cabin/v14/u-4x0qWljRw-Pe839fxqmjRv.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cabin/v14/u-4_0qWljRw-Pd81__hInyRvYwc.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cabin/v14/u-480qWljRw-PdfD3NhisShmeh5I.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/cabin/v14/u-460qWljRw-Pd81xwxhuyxEfw5IR-Y.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cabin/v14/u-480qWljRw-Pdfv29hisShmeh5I.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/cabin/v14/u-460qWljRw-Pd81xyBmuyxEfw5IR-Y.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cabin/v14/u-480qWljRw-PdeL2thisShmeh5I.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cabin/v14/u-460qWljRw-Pd81x0RnuyxEfw5IR-Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cabin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cabinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cabinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cabinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cabinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cabinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cabinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cabinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cabinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cabinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cabinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cabinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cabinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cabinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cabinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cabinCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cabincondensed/v13/nwpMtK6mNhBK2err_hqkYhHRqmwaYOjZ5HZl8Q.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cabincondensed/v13/nwpJtK6mNhBK2err_hqkYhHRqmwilMH97F15-K1oqQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cabincondensed/v13/nwpJtK6mNhBK2err_hqkYhHRqmwiuMb97F15-K1oqQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cabincondensed/v13/nwpJtK6mNhBK2err_hqkYhHRqmwi3Mf97F15-K1oqQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CabinCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cabinCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cabinCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cabinSketchTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cabinsketch/v13/QGYpz_kZZAGCONcK2A4bGOjMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cabinsketch/v13/QGY2z_kZZAGCONcK2A4bGOj0I_1o4dLyI4CMFw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CabinSketch',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cabinSketchTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cabinSketchTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle caesarDressingTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/caesardressing/v8/yYLx0hLa3vawqtwdswbotmK4vrR3cbb6LZttyg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CaesarDressing',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme caesarDressingTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.caesarDressingTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cagliostroTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cagliostro/v8/ZgNWjP5HM73BV5amnX-TjGXEM4COoE4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cagliostro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cagliostroTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cagliostroTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cairoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/cairo/v6/SLXLc1nY6Hkvalrub76M7dd8aGZk.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cairo/v6/SLXLc1nY6HkvalqKbL6M7dd8aGZk.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cairo/v6/SLXGc1nY6HkvamImRJqExst1.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cairo/v6/SLXLc1nY6Hkvalr-ar6M7dd8aGZk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cairo/v6/SLXLc1nY6Hkvalqaa76M7dd8aGZk.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/cairo/v6/SLXLc1nY6Hkvalqiab6M7dd8aGZk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cairo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cairoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cairoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cairoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cairoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cairoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cairoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cairoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cairoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cairoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cairoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cairoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cairoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cairoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cairoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle calligraffittiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/calligraffitti/v11/46k2lbT3XjDVqJw3DCmCFjE0vnFZM5ZBpYN-.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Calligraffitti',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme calligraffittiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.calligraffittiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cambayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cambay/v6/SLXJc1rY6H0_ZDsGbrSIz9JsaA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cambay/v6/SLXLc1rY6H0_ZDs2bL6M7dd8aGZk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cambay/v6/SLXKc1rY6H0_ZDs-0pusx_lwYX99kA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cambay/v6/SLXMc1rY6H0_ZDs2bIYwwvN0Q3ptkDMN.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cambay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cambayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cambayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cambayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cambayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cambayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cambayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cambayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cambayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cambayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cambayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cambayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cambayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cambayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cambayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle camboTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cambo/v8/IFSqHeNEk8FJk416ok7xkPm8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cambo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme camboTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.camboTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.camboTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.camboTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.camboTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.camboTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.camboTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.camboTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.camboTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.camboTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.camboTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.camboTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.camboTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.camboTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle candalTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/candal/v9/XoHn2YH6T7-t_8cNAR4Jt9Yxlw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Candal',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme candalTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.candalTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.candalTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.candalTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.candalTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.candalTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.candalTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.candalTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.candalTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.candalTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.candalTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.candalTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.candalTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.candalTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cantarellTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cantarell/v9/B50NF7ZDq37KMUvlO01Ji6hqHK-CLA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cantarell/v9/B50LF7ZDq37KMUvlO015iaJuPqqSLJYf.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cantarell/v9/B50IF7ZDq37KMUvlO01xN4dOFISeJY8GgQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cantarell/v9/B50WF7ZDq37KMUvlO015iZrSEY6aB4oWgWHB.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cantarell',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cantarellTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cantarellTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cantataOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cantataone/v9/PlI5Fl60Nb5obNzNe2jslVxEt8CwfGaD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CantataOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cantataOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cantataOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cantoraOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cantoraone/v9/gyB4hws1JdgnKy56GB_JX6zdZ4vZVbgZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CantoraOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cantoraOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cantoraOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle capriolaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/capriola/v7/wXKoE3YSppcvo1PDln_8L-AinG8y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Capriola',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme capriolaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.capriolaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cardoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cardo/v11/wlp_gwjKBV1pqiv_1oAZ2H5O.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cardo/v11/wlpxgwjKBV1pqhv93IQ73W5OcCk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cardo/v11/wlpygwjKBV1pqhND-aQR82JHaTBX.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cardo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cardoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cardoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cardoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cardoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cardoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cardoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cardoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cardoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cardoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cardoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cardoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cardoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cardoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cardoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle carmeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/carme/v10/ptRHTiWdbvZIDOjGxLNrxfbZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Carme',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme carmeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.carmeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.carmeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.carmeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.carmeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.carmeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.carmeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.carmeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.carmeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.carmeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.carmeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.carmeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.carmeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.carmeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle carroisGothicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/carroisgothic/v10/Z9XPDmFATg-N1PLtLOOxvIHl9ZmD3i7ajcJ-.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CarroisGothic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme carroisGothicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.carroisGothicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle carroisGothicSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/carroisgothicsc/v9/ZgNJjOVHM6jfUZCmyUqT2A2HVKjc-28nNHabY4dN.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CarroisGothicSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme carroisGothicSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.carroisGothicSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle carterOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/carterone/v11/q5uCsoe5IOB2-pXv9UcNIxR2hYxREMs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CarterOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme carterOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.carterOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle catamaranTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0OIpQoyXQa2RxT7-5jhjRFSfiM7HBj.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jKhVlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jThZlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0IIpQoyXQa2RxT7-5b4j5Ba_2c7A.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jFhdlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jOhBlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jXhFlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jQhJlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/catamaran/v6/o-0NIpQoyXQa2RxT7-5jZhNlY9aA5Wl6PQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Catamaran',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme catamaranTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.catamaranTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle caudexTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/caudex/v9/esDQ311QOP6BJUrIyviAnb4eEw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/caudex/v9/esDS311QOP6BJUr4yPKEv7sOE4in.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/caudex/v9/esDT311QOP6BJUrwdteklZUCGpG-GQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/caudex/v9/esDV311QOP6BJUr4yMo4kJ8GOJSuGdLB.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Caudex',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme caudexTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.caudexTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.caudexTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.caudexTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.caudexTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.caudexTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.caudexTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.caudexTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.caudexTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.caudexTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.caudexTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.caudexTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.caudexTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.caudexTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle caveatTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/caveat/v7/Wnz6HAc5bAfYB2QLYTwZqg_MPQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/caveat/v7/Wnz5HAc5bAfYB2Qz3RM9oiTQNAuxjA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Caveat',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme caveatTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.caveatTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.caveatTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.caveatTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.caveatTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.caveatTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.caveatTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.caveatTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.caveatTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.caveatTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.caveatTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.caveatTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.caveatTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.caveatTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle caveatBrushTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/caveatbrush/v5/EYq0maZfwr9S9-ETZc3fKXtMW7mT03pdQw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CaveatBrush',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme caveatBrushTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.caveatBrushTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cedarvilleCursiveTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cedarvillecursive/v11/yYL00g_a2veiudhUmxjo5VKkoqA-B_neJbBxw8BeTg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CedarvilleCursive',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cedarvilleCursiveTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cedarvilleCursiveTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cevicheOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cevicheone/v10/gyB4hws1IcA6JzR-GB_JX6zdZ4vZVbgZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CevicheOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cevicheOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cevicheOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chakraPetchTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIflMapbsEk7TDLdtEz1BwkeNIhFQJXE3AY00g.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIfnMapbsEk7TDLdtEz1BwkWmpLJQp_A_gMk0izH.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIf6MapbsEk7TDLdtEz1BwkmmKBhSL7Y1Q.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIfkMapbsEk7TDLdtEz1BwkWmqplarvI1R8t.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIflMapbsEk7TDLdtEz1BwkebIlFQJXE3AY00g.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIfnMapbsEk7TDLdtEz1BwkWmpKRQ5_A_gMk0izH.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIflMapbsEk7TDLdtEz1BwkeQI5FQJXE3AY00g.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIfnMapbsEk7TDLdtEz1BwkWmpK9RJ_A_gMk0izH.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIflMapbsEk7TDLdtEz1BwkeJI9FQJXE3AY00g.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/chakrapetch/v3/cIfnMapbsEk7TDLdtEz1BwkWmpLZRZ_A_gMk0izH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ChakraPetch',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chakraPetchTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chakraPetchTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle changaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcsqb2bUsT5rZhaZg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcszb6bUsT5rZhaZg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/changa/v7/2-cm9JNi2YuVOUcUYZa_Wu_lpA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcslb-bUsT5rZhaZg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcsubibUsT5rZhaZg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcs3bmbUsT5rZhaZg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/changa/v7/2-cl9JNi2YuVOUcswbqbUsT5rZhaZg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Changa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme changaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.changaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.changaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.changaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.changaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.changaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.changaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.changaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.changaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.changaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.changaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.changaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.changaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.changaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle changaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/changaone/v12/xfu00W3wXn3QLUJXhzq46AbouLfbK64.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/changaone/v12/xfu20W3wXn3QLUJXhzq42ATivJXeO67ISw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ChangaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme changaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.changaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle changoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chango/v8/2V0cKI0OB5U7WaJyz324TFUaAw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chango',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme changoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.changoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.changoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.changoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.changoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.changoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.changoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.changoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.changoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.changoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.changoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.changoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.changoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.changoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle charmTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/charm/v4/7cHmv4oii5K0MeYvIe804WIo.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/charm/v4/7cHrv4oii5K0Md6TDss8yn4hnCci.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Charm',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme charmTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.charmTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.charmTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.charmTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.charmTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.charmTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.charmTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.charmTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.charmTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.charmTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.charmTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.charmTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.charmTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.charmTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle charmonmanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/charmonman/v3/MjQDmiR3vP_nuxDv47jiWJGovLdh6OE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/charmonman/v3/MjQAmiR3vP_nuxDv47jiYC2HmL9K9OhmGnY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Charmonman',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme charmonmanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.charmonmanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chathuraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/chathura/v5/_gP91R7-rzUuVjim42dEq0SbTvZyuDo.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/chathura/v5/_gP81R7-rzUuVjim42eMiWSxYPp7oSNy.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chathura/v5/_gP71R7-rzUuVjim418goUC5S-Zy.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/chathura/v5/_gP81R7-rzUuVjim42ecjmSxYPp7oSNy.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/chathura/v5/_gP81R7-rzUuVjim42eAjWSxYPp7oSNy.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chathura',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chathuraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chathuraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chauPhilomeneOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chauphilomeneone/v9/55xxezRsPtfie1vPY49qzdgSlJiHRQFsnIx7QMISdQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/chauphilomeneone/v9/55xzezRsPtfie1vPY49qzdgSlJiHRQFcnoZ_YscCdXQB.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ChauPhilomeneOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chauPhilomeneOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chauPhilomeneOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chelaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chelaone/v8/6ae-4KC7Uqgdz_JZdPIy31vWNTMwoQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ChelaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chelaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chelaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chelseaMarketTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chelseamarket/v7/BCawqZsHqfr89WNP_IApC8tzKBhlLA4uKkWk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ChelseaMarket',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chelseaMarketTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chelseaMarketTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chenlaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chenla/v12/SZc43FDpIKu8WZ9eXxfonUPL6Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chenla',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chenlaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chenlaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cherryCreamSodaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cherrycreamsoda/v10/UMBIrOxBrW6w2FFyi9paG0fdVdRciTd6Cd47DJ7G.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CherryCreamSoda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cherryCreamSodaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cherryCreamSodaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cherrySwashTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cherryswash/v8/i7dNIFByZjaNAMxtZcnfAy58QHi-EwWMbg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cherryswash/v8/i7dSIFByZjaNAMxtZcnfAy5E_FeaGy6QZ3WfYg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CherrySwash',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cherrySwashTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cherrySwashTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chewyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chewy/v11/uK_94ruUb-k-wk5xIDMfO-ed.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chewy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chewyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chewyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chewyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chewyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chewyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chewyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chewyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chewyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chewyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chewyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chewyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chewyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chewyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chewyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chicleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chicle/v8/lJwG-pw9i2dqU-BDyWKuobYSxw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chicle',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chicleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chicleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chicleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chicleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chicleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chicleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chicleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chicleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chicleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chicleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chicleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chicleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chicleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chicleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chilankaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chilanka/v5/WWXRlj2DZQiMJYaYRrJQI9EAZhTO.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chilanka',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chilankaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chilankaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chivoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/chivo/v11/va9F4kzIxd1KFrjDY8Z_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/chivo/v11/va9D4kzIxd1KFrBteUp9sKjkRT_-bF0.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chivo/v11/va9I4kzIxd1KFoBvS-J3kbDP.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/chivo/v11/va9G4kzIxd1KFrBtQeZVlKDPWTY.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/chivo/v11/va9F4kzIxd1KFrjTZMZ_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/chivo/v11/va9D4kzIxd1KFrBteVp6sKjkRT_-bF0.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/chivo/v11/va9F4kzIxd1KFrjrZsZ_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/chivo/v11/va9D4kzIxd1KFrBteWJ4sKjkRT_-bF0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chivo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chivoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chivoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chivoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chivoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chivoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chivoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chivoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chivoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chivoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chivoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chivoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chivoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chivoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chivoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle chonburiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/chonburi/v4/8AtqGs-wOpGRTBq66IWaFr3biAfZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Chonburi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme chonburiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.chonburiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cinzelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cinzel/v9/8vIJ7ww63mVu7gtL8W76HEdHMg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cinzel/v9/8vIK7ww63mVu7gtzTUHeFGxbO_zo-w.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/cinzel/v9/8vIK7ww63mVu7gtzdUPeFGxbO_zo-w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cinzel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cinzelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cinzelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cinzelDecorativeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cinzeldecorative/v8/daaCSScvJGqLYhG8nNt8KPPswUAPnh7URs1LaCyC.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cinzeldecorative/v8/daaHSScvJGqLYhG8nNt8KPPswUAPniZoaelDQzCLlQXE.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/cinzeldecorative/v8/daaHSScvJGqLYhG8nNt8KPPswUAPniZQa-lDQzCLlQXE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CinzelDecorative',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cinzelDecorativeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cinzelDecorativeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle clickerScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/clickerscript/v7/raxkHiKPvt8CMH6ZWP8PdlEq72rY2zqUKafv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ClickerScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme clickerScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.clickerScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle codaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/coda/v15/SLXHc1jY5nQ8JUIMapaN39I.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/coda/v15/SLXIc1jY5nQ8HeIgTp6mw9t1cX8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Coda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme codaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.codaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.codaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.codaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.codaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.codaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.codaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.codaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.codaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.codaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.codaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.codaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.codaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.codaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle codaCaptionTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/codacaption/v13/ieVm2YRII2GMY7SyXSoDRiQGqcx6x_-fACIgaw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CodaCaption',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme codaCaptionTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.codaCaptionTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle codystarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/codystar/v7/FwZf7-Q1xVk-40qxOuYsyuyrj0e29bfC.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/codystar/v7/FwZY7-Q1xVk-40qxOt6A4sijpFu_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Codystar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme codystarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.codystarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.codystarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.codystarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.codystarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.codystarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.codystarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.codystarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.codystarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.codystarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.codystarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.codystarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.codystarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.codystarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle coinyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/coiny/v5/gyByhwU1K989PXwbElSvO5Tc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Coiny',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme coinyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.coinyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.coinyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.coinyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.coinyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.coinyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.coinyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.coinyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.coinyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.coinyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.coinyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.coinyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.coinyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.coinyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle comboTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/combo/v8/BXRlvF3Jh_fIhg0iBu9y8Hf0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Combo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme comboTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.comboTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.comboTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.comboTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.comboTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.comboTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.comboTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.comboTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.comboTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.comboTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.comboTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.comboTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.comboTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.comboTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle comfortaaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/comfortaa/v27/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4TbMPrQVIT9c2c8.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/comfortaa/v27/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4WjMPrQVIT9c2c8.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/comfortaa/v27/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4VrMPrQVIT9c2c8.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/comfortaa/v27/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4bbLPrQVIT9c2c8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/comfortaa/v27/1Pt_g8LJRfWJmhDAuUsSQamb1W0lwk4S4Y_LPrQVIT9c2c8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Comfortaa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme comfortaaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.comfortaaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle comingSoonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/comingsoon/v11/qWcuB6mzpYL7AJ2VfdQR1u-SUjjzsykh.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ComingSoon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme comingSoonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.comingSoonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle concertOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/concertone/v10/VEM1Ro9xs5PjtzCu-srDqRTlhv-CuVAQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ConcertOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme concertOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.concertOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle condimentTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/condiment/v7/pONk1hggFNmwvXALyH6Sq4n4o1vyCQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Condiment',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme condimentTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.condimentTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.condimentTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.condimentTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.condimentTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.condimentTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.condimentTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.condimentTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.condimentTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.condimentTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.condimentTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.condimentTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.condimentTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.condimentTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle contentTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/content/v12/zrfl0HLayePhU_AwUaDyIiL0RCg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/content/v12/zrfg0HLayePhU_AwaRzdBirfWCHvkAI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Content',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme contentTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.contentTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.contentTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.contentTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.contentTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.contentTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.contentTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.contentTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.contentTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.contentTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.contentTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.contentTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.contentTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.contentTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle contrailOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/contrailone/v9/eLGbP-j_JA-kG0_Zo51noafdZUvt_c092w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ContrailOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme contrailOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.contrailOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle convergenceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/convergence/v8/rax5HiePvdgXPmmMHcIPYRhasU7Q8Cad.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Convergence',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme convergenceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.convergenceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cookieTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cookie/v11/syky-y18lb0tSbfNlQCT9tPdpw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cookie',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cookieTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cookieTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cookieTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cookieTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cookieTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cookieTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cookieTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cookieTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cookieTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cookieTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cookieTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cookieTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cookieTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cookieTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle copseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/copse/v9/11hPGpDKz1rGb0djHkihUb-A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Copse',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme copseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.copseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.copseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.copseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.copseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.copseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.copseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.copseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.copseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.copseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.copseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.copseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.copseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.copseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle corbenTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/corben/v13/LYjDdGzzklQtCMp9oAlEpVs3VQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/corben/v13/LYjAdGzzklQtCMpFHCZgrXArXN7HWQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Corben',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme corbenTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.corbenTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.corbenTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.corbenTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.corbenTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.corbenTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.corbenTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.corbenTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.corbenTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.corbenTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.corbenTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.corbenTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.corbenTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.corbenTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorant/v8/H4cgBXOCl9bbnla_nHIiRLmYgoyyYzFzFw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/cormorant/v8/H4c-BXOCl9bbnla_nHIq6qMUgIa2QTRjF8ER.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorant/v8/H4clBXOCl9bbnla_nHIa6JG8iqeuag.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cormorant/v8/H4cjBXOCl9bbnla_nHIq6pu4qKK-aihq.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorant/v8/H4cgBXOCl9bbnla_nHIiHLiYgoyyYzFzFw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/cormorant/v8/H4c-BXOCl9bbnla_nHIq6qNMgYa2QTRjF8ER.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorant/v8/H4cgBXOCl9bbnla_nHIiML-YgoyyYzFzFw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/cormorant/v8/H4c-BXOCl9bbnla_nHIq6qNghoa2QTRjF8ER.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorant/v8/H4cgBXOCl9bbnla_nHIiVL6YgoyyYzFzFw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cormorant/v8/H4c-BXOCl9bbnla_nHIq6qMEh4a2QTRjF8ER.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cormorant',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantGaramondTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3YmX5slCNuHLi8bLeY9MK7whWMhyjQAllvuQWJ5heb_w.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3WmX5slCNuHLi8bLeY9MK7whWMhyjYrEPjuw-NxBKL_y94.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3bmX5slCNuHLi8bLeY9MK7whWMhyjornFLsS6V7w.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3ZmX5slCNuHLi8bLeY9MK7whWMhyjYrHtPkyuF7w6C.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3YmX5slCNuHLi8bLeY9MK7whWMhyjQWlhvuQWJ5heb_w.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3WmX5slCNuHLi8bLeY9MK7whWMhyjYrEO7ug-NxBKL_y94.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3YmX5slCNuHLi8bLeY9MK7whWMhyjQdl9vuQWJ5heb_w.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3WmX5slCNuHLi8bLeY9MK7whWMhyjYrEOXvQ-NxBKL_y94.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3YmX5slCNuHLi8bLeY9MK7whWMhyjQEl5vuQWJ5heb_w.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cormorantgaramond/v7/co3WmX5slCNuHLi8bLeY9MK7whWMhyjYrEPzvA-NxBKL_y94.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CormorantGaramond',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantGaramondTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantGaramondTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantInfantTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyIU44g9vKiM1sORYSiWeAsLN9951w3_DMrQqcdJrk.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyKU44g9vKiM1sORYSiWeAsLN997_ItcDEhRoUYNrn_Ig.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyPU44g9vKiM1sORYSiWeAsLN993_Af2DsAXq4.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyJU44g9vKiM1sORYSiWeAsLN997_IV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyIU44g9vKiM1sORYSiWeAsLN995wQ2_DMrQqcdJrk.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyKU44g9vKiM1sORYSiWeAsLN997_ItKDAhRoUYNrn_Ig.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyIU44g9vKiM1sORYSiWeAsLN995ygx_DMrQqcdJrk.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyKU44g9vKiM1sORYSiWeAsLN997_ItBDchRoUYNrn_Ig.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyIU44g9vKiM1sORYSiWeAsLN9950ww_DMrQqcdJrk.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cormorantinfant/v8/HhyKU44g9vKiM1sORYSiWeAsLN997_ItYDYhRoUYNrn_Ig.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CormorantInfant',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantInfantTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantInfantTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorantsc/v8/0ybmGD4kxqXBmOVLG30OGwsmABIU_R3y8DOWGA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorantsc/v8/0yb5GD4kxqXBmOVLG30OGwserDow9Tbu-Q.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorantsc/v8/0ybmGD4kxqXBmOVLG30OGwsmWBMU_R3y8DOWGA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorantsc/v8/0ybmGD4kxqXBmOVLG30OGwsmdBQU_R3y8DOWGA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorantsc/v8/0ybmGD4kxqXBmOVLG30OGwsmEBUU_R3y8DOWGA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CormorantSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantUnicaseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorantunicase/v8/HI_ViZUaILtOqhqgDeXoF_n1_fTGX9N_tucv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorantunicase/v8/HI_QiZUaILtOqhqgDeXoF_n1_fTGX-vTnsMnx3C9.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorantunicase/v8/HI_ViZUaILtOqhqgDeXoF_n1_fTGX9Mnt-cv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorantunicase/v8/HI_ViZUaILtOqhqgDeXoF_n1_fTGX9MLsOcv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorantunicase/v8/HI_ViZUaILtOqhqgDeXoF_n1_fTGX9Nvsecv7Gy0DRzS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CormorantUnicase',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantUnicaseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantUnicaseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cormorantUprightTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/cormorantupright/v6/VuJudM3I2Y35poFONtLdafkUCHw1y1N5phDsU9X6RPzQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cormorantupright/v6/VuJrdM3I2Y35poFONtLdafkUCHw1y2vVjjTkeMnz.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/cormorantupright/v6/VuJudM3I2Y35poFONtLdafkUCHw1y1MhpxDsU9X6RPzQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/cormorantupright/v6/VuJudM3I2Y35poFONtLdafkUCHw1y1MNoBDsU9X6RPzQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cormorantupright/v6/VuJudM3I2Y35poFONtLdafkUCHw1y1NpoRDsU9X6RPzQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CormorantUpright',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cormorantUprightTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cormorantUprightTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle courgetteTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/courgette/v7/wEO_EBrAnc9BLjLQAUkFUfAL3EsHiA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Courgette',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme courgetteTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.courgetteTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cousineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cousine/v14/d6lIkaiiRdih4SpPzSMlzTbtz9k.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cousine/v14/d6lKkaiiRdih4SpP_SEvyRTo39l8hw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cousine/v14/d6lNkaiiRdih4SpP9Z8K6T7G09BlnmQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cousine/v14/d6lPkaiiRdih4SpP_SEXdTvM1_JgjmRpOA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cousine',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cousineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cousineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cousineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cousineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cousineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cousineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cousineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cousineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cousineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cousineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cousineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cousineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cousineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cousineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle coustardTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/coustard/v10/3XFpErgg3YsZ5fqUU9UPvWXuROTd.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/coustard/v10/3XFuErgg3YsZ5fqUU-2LkEHmb_jU3eRL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Coustard',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme coustardTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.coustardTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.coustardTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.coustardTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.coustardTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.coustardTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.coustardTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.coustardTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.coustardTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.coustardTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.coustardTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.coustardTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.coustardTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.coustardTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle coveredByYourGraceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/coveredbyyourgrace/v9/QGYwz-AZahWOJJI9kykWW9mD6opopoqXSOS0FgItq6bFIg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CoveredByYourGrace',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme coveredByYourGraceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.coveredByYourGraceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle craftyGirlsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/craftygirls/v9/va9B4kXI39VaDdlPJo8N_NvuQR37fF3Wlg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CraftyGirls',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme craftyGirlsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.craftyGirlsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle creepsterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/creepster/v8/AlZy_zVUqJz4yMrniH4hdXf4XB0Tow.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Creepster',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme creepsterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.creepsterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle creteRoundTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/creteround/v8/55xoey1sJNPjPiv1ZZZrxJ1827zAKnxN.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/creteround/v8/55xqey1sJNPjPiv1ZZZrxK1-0bjiL2xNhKc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CreteRound',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme creteRoundTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.creteRoundTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle crimsonProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZTm18OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZkG18OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZzm18OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZ_G18OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZEGp8OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZKWp8OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZTmp8OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uUsoa5M_tv7IihmnkabC5XiXCAlXGks1WZZ2p8OJE_VNWoyQ.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi4Ue5s7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi7Ke5s7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi6Ue5s7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi6me5s7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi5KfJs7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi5zfJs7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi4UfJs7dtC4yZNE.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/crimsonpro/v11/q5uSsoa5M_tv7IihmnkabAReu49Y_Bo-HVKMBi49fJs7dtC4yZNE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CrimsonPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme crimsonProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.crimsonProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle crimsonTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlp2gwHKFkZgtmSR3NB0oRJvaAJSA_JN3Q.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlpogwHKFkZgtmSR3NB0oRJfaghWIfdd3ahG.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlppgwHKFkZgtmSR3NB0oRJXsCx2C9lR1LFffg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlprgwHKFkZgtmSR3NB0oRJfajCOD9NV9rRPfrKu.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlppgwHKFkZgtmSR3NB0oRJX1C12C9lR1LFffg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/crimsontext/v10/wlprgwHKFkZgtmSR3NB0oRJfajDqDtNV9rRPfrKu.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CrimsonText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme crimsonTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.crimsonTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle croissantOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/croissantone/v7/3y9n6bU9bTPg4m8NDy3Kq24UM3pqn5cdJ-4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CroissantOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme croissantOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.croissantOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle crushedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/crushed/v10/U9Mc6dym6WXImTlFT1kfuIqyLzA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Crushed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme crushedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.crushedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.crushedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.crushedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.crushedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.crushedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.crushedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.crushedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.crushedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.crushedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.crushedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.crushedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.crushedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.crushedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cuprumTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cuprum/v11/dg4k_pLmvrkcOkB9IeFDh701Sg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/cuprum/v11/dg4m_pLmvrkcOkBNI-tHpbglShon.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/cuprum/v11/dg4n_pLmvrkcOkBFnc5nj5YpQwM-gg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/cuprum/v11/dg4h_pLmvrkcOkBNI9P7ipwtYQYugjW4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cuprum',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cuprumTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cuprumTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cuteFontTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cutefont/v8/Noaw6Uny2oWPbSHMrY6vmJNVNC9hkw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CuteFont',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cuteFontTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cuteFontTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cutiveTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cutive/v11/NaPZcZ_fHOhV3Ip7T_hDoyqlZQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Cutive',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cutiveTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cutiveTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle cutiveMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/cutivemono/v8/m8JWjfRfY7WVjVi2E-K9H5RFRG-K3Mud.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'CutiveMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme cutiveMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.cutiveMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dMSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Hp2ywxg089UriOZSCHBeHFl0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Fp2ywxg089UriCZaIGDWCBl0O8Q.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Cp2ywxg089UriAWCrOB-sClQX6Cg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Ap2ywxg089UriCZaw7BymDnYS-Cjk6Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Cp2ywxg089UriASitOB-sClQX6Cg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/dmsans/v3/rP2Ap2ywxg089UriCZawpBqmDnYS-Cjk6Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DMSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dMSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dMSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dMSerifDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dmserifdisplay/v3/-nFnOHM81r4j6k0gjAW3mujVU2B2K_d709jy92k.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/dmserifdisplay/v3/-nFhOHM81r4j6k0gjAW3mujVU2B2G_Vx1_r352np3Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DMSerifDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dMSerifDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dMSerifDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dMSerifTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dmseriftext/v3/rnCu-xZa_krGokauCeNq1wWyafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/dmseriftext/v3/rnCw-xZa_krGokauCeNq1wWyWfGFWFAMArZKqQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DMSerifText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dMSerifTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dMSerifTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle damionTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/damion/v9/hv-XlzJ3KEUe_YZUbWY3MTFgVg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Damion',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme damionTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.damionTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.damionTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.damionTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.damionTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.damionTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.damionTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.damionTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.damionTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.damionTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.damionTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.damionTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.damionTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.damionTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dancingScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dancingscript/v11/If2RXTr6YS-zF4S-kcSWSVi_swLngOAliz4X.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/dancingscript/v11/If2SXTr6YS-zF4S-kcSWSVi_szpbr8QtoCIervbA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DancingScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dancingScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dancingScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dangrekTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dangrek/v11/LYjCdG30nEgoH8E2gCNqqVIuTN4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dangrek',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dangrekTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dangrekTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle darkerGrotesqueTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVoxr2AW8hTOsXsX0.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MH6cuh-mLQlC4BKCtayOfARkSVm7beJWcKUOI.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVo0L3AW8hTOsXsX0.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVo27wAW8hTOsXsX0.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVowrxAW8hTOsXsX0.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVoxbyAW8hTOsXsX0.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/darkergrotesque/v1/U9MA6cuh-mLQlC4BKCtayOfARkSVozLzAW8hTOsXsX0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DarkerGrotesque',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme darkerGrotesqueTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.darkerGrotesqueTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle davidLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/davidlibre/v4/snfus0W_99N64iuYSvp4W_l86p6TYS-Y.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/davidlibre/v4/snfzs0W_99N64iuYSvp4W8GIw7qbSjORSo9W.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/davidlibre/v4/snfzs0W_99N64iuYSvp4W8HAxbqbSjORSo9W.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DavidLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme davidLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.davidLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dawningofaNewDayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dawningofanewday/v10/t5t_IQMbOp2SEwuncwLRjMfIg1yYit_nAz8bhWJGNoBE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DawningofaNewDay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dawningofaNewDayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dawningofaNewDayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle daysOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/daysone/v9/mem9YaCnxnKRiYZOCLYVeLkWVNBt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DaysOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme daysOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.daysOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dekkoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dekko/v6/46khlb_wWjfSrttFR0vsfl1B.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dekko',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dekkoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dekkoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle deliusTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/delius/v9/PN_xRfK0pW_9e1rtYcI-jT3L_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Delius',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme deliusTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.deliusTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.deliusTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.deliusTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.deliusTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.deliusTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.deliusTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.deliusTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.deliusTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.deliusTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.deliusTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.deliusTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.deliusTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.deliusTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle deliusSwashCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/deliusswashcaps/v11/oY1E8fPLr7v4JWCExZpWebxVKORpXXedKmeBvEYs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DeliusSwashCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme deliusSwashCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.deliusSwashCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle deliusUnicaseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/deliusunicase/v13/845BNMEwEIOVT8BmgfSzIr_6mmLHd-73LXWs.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/deliusunicase/v13/845CNMEwEIOVT8BmgfSzIr_6mlp7WMr_BmmlS5aw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DeliusUnicase',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme deliusUnicaseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.deliusUnicaseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dellaRespiraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dellarespira/v7/RLp5K5v44KaueWI6iEJQBiGPRfkSu6EuTHo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DellaRespira',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dellaRespiraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dellaRespiraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle denkOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/denkone/v7/dg4m_pzhrqcFb2IzROtHpbglShon.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DenkOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme denkOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.denkOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle devonshireTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/devonshire/v8/46kqlbDwWirWr4gtBD2BX0Vq01lYAZM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Devonshire',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme devonshireTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.devonshireTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dhurjatiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dhurjati/v7/_6_8ED3gSeatXfFiFX3ySKQtuTA2.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dhurjati',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dhurjatiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dhurjatiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle didactGothicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/didactgothic/v13/ahcfv8qz1zt6hCC5G4F_P4ASpUySp0LlcyQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DidactGothic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme didactGothicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.didactGothicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle diplomataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/diplomata/v11/Cn-0JtiMXwhNwp-wKxyfYGxYrdM9Sg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Diplomata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme diplomataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.diplomataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle diplomataSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/diplomatasc/v8/buExpoi3ecvs3kidKgBJo2kf-P5Oaiw4cw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DiplomataSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme diplomataSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.diplomataSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle doHyeonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dohyeon/v11/TwMN-I8CRRU2zM86HFE3ZwaH__-C.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DoHyeon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme doHyeonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.doHyeonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dokdoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dokdo/v8/esDf315XNuCBLxLo4NaMlKcH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dokdo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dokdoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dokdoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle domineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/domine/v7/L0x8DFMnlVwD4h3RvPCmRSlUig.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/domine/v7/L0x_DFMnlVwD4h3pAN-CTQJIg3uuXg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Domine',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme domineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.domineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.domineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.domineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.domineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.domineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.domineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.domineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.domineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.domineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.domineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.domineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.domineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.domineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle donegalOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/donegalone/v7/m8JWjfRYea-ZnFz6fsK9FZRFRG-K3Mud.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DonegalOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme donegalOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.donegalOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle doppioOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/doppioone/v7/Gg8wN5gSaBfyBw2MqCh-lgshKGpe5Fg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DoppioOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme doppioOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.doppioOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dorsaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dorsa/v10/yYLn0hjd0OGwqo493XCFxAnQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dorsa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dorsaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dorsaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dosisTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJt7MV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJabMV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJN7MV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJBbMV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJ6bQV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJ0LQV3BkFTq4EPw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/dosis/v16/HhyJU5sn9vOmLxNkIwRSjTVNWLEJt7QV3BkFTq4EPw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dosis',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dosisTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dosisTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dosisTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dosisTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dosisTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dosisTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dosisTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dosisTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dosisTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dosisTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dosisTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dosisTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dosisTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dosisTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle drSugiyamaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/drsugiyama/v9/HTxoL2k4N3O9n5I1boGI7abRM4-t-g7y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DrSugiyama',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme drSugiyamaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.drSugiyamaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle duruSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/durusans/v13/xn7iYH8xwmSyTvEV_HOxT_fYdN-WZw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'DuruSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme duruSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.duruSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle dynalightTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/dynalight/v8/1Ptsg8LOU_aOmQvTsF4ISotrDfGGxA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Dynalight',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme dynalightTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.dynalightTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle eBGaramondTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGUmQSNjdsmc35JDF1K5FRyQjgdYxPJ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGWmQSNjdsmc35JDF1K5GRwSDw_ZgPJtWk.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGJmQSNjdsmc35JDF1K5GyGaxwVSA_ArHC_.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGLmQSNjdsmc35JDF1K5GRwcMgWQgviqWC_O7Y.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGJmQSNjdsmc35JDF1K5GyqbBwVSA_ArHC_.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGLmQSNjdsmc35JDF1K5GRwcOQRQgviqWC_O7Y.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGJmQSNjdsmc35JDF1K5GzObRwVSA_ArHC_.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGLmQSNjdsmc35JDF1K5GRwcIAQQgviqWC_O7Y.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGJmQSNjdsmc35JDF1K5GzSbhwVSA_ArHC_.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/ebgaramond/v11/SlGLmQSNjdsmc35JDF1K5GRwcJwTQgviqWC_O7Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EBGaramond',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme eBGaramondTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.eBGaramondTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle eagleLakeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/eaglelake/v7/ptRMTiqbbuNJDOiKj9wG5O7yKQNute8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EagleLake',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme eagleLakeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.eagleLakeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle eastSeaDokdoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/eastseadokdo/v8/xfuo0Wn2V2_KanASqXSZp22m05_aGavYS18y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EastSeaDokdo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme eastSeaDokdoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.eastSeaDokdoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle eaterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/eater/v8/mtG04_FCK7bOvpu2u3FwsXsR.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Eater',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme eaterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.eaterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.eaterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.eaterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.eaterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.eaterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.eaterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.eaterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.eaterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.eaterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.eaterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.eaterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.eaterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.eaterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle economicaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/economica/v7/Qw3fZQZaHCLgIWa29ZBrMcgAAl1lfQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/economica/v7/Qw3ZZQZaHCLgIWa29ZBbM8IEIFh1fWUl.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/economica/v7/Qw3aZQZaHCLgIWa29ZBTjeckCnZ5dHw8iw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/economica/v7/Qw3EZQZaHCLgIWa29ZBbM_q4D3x9Vnksi4M7.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Economica',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme economicaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.economicaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.economicaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.economicaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.economicaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.economicaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.economicaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.economicaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.economicaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.economicaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.economicaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.economicaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.economicaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.economicaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle eczarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/eczar/v8/BXRlvF3Pi-DLmw0iBu9y8Hf0.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/eczar/v8/BXRovF3Pi-DLmzXWL8t622v9WNjW.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/eczar/v8/BXRovF3Pi-DLmzX6KMt622v9WNjW.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/eczar/v8/BXRovF3Pi-DLmzWeKct622v9WNjW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/eczar/v8/BXRovF3Pi-DLmzWCKst622v9WNjW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Eczar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme eczarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.eczarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.eczarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.eczarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.eczarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.eczarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.eczarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.eczarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.eczarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.eczarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.eczarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.eczarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.eczarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.eczarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle elMessiriTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/elmessiri/v6/K2F0fZBRmr9vQ1pHEey6AoqKAyLzfWo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/elmessiri/v6/K2F3fZBRmr9vQ1pHEey6On6jJyrYYWOMluQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/elmessiri/v6/K2F3fZBRmr9vQ1pHEey6OlKkJyrYYWOMluQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/elmessiri/v6/K2F3fZBRmr9vQ1pHEey6OjalJyrYYWOMluQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ElMessiri',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme elMessiriTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.elMessiriTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle electrolizeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/electrolize/v8/cIf5Ma1dtE0zSiGSiED7AUEGso5tQafB.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Electrolize',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme electrolizeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.electrolizeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle elsieTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/elsie/v9/BCanqZABrez54yYu9slAeLgX.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/elsie/v9/BCaqqZABrez54x6q2-1IU6QeXSBk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Elsie',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme elsieTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.elsieTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.elsieTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.elsieTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.elsieTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.elsieTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.elsieTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.elsieTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.elsieTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.elsieTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.elsieTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.elsieTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.elsieTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.elsieTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle elsieSwashCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/elsieswashcaps/v8/845DNN8xGZyVX5MVo_upKf7KnjK0ferVKGWsUo8.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/elsieswashcaps/v8/845ENN8xGZyVX5MVo_upKf7KnjK0RW74DG2HToawrdU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ElsieSwashCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme elsieSwashCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.elsieSwashCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle emblemaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/emblemaone/v8/nKKT-GQ0F5dSY8vzG0rOEIRBHl57G_f_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EmblemaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme emblemaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.emblemaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle emilysCandyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/emilyscandy/v7/2EbgL-1mD1Rnb0OGKudbk0y5r9xrX84JjA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EmilysCandy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme emilysCandyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.emilysCandyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle encodeSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/encodesans/v4/LDI0apOFNxEwR-Bd1O9uYPvIeeLkl7Iw6yg.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPtkWMLOub458jGL.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPsAW8LOub458jGL.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/encodesans/v4/LDI2apOFNxEwR-Bd1O9uYMOsc-bGkqIw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPtYWsLOub458jGL.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPt0XcLOub458jGL.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPsQXMLOub458jGL.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPsMX8LOub458jGL.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/encodesans/v4/LDIrapOFNxEwR-Bd1O9uYPsoXsLOub458jGL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EncodeSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme encodeSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.encodeSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle encodeSansCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_76_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-5a-JLQoFI2KR.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-SY6pByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-LY2pByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_16_LD37rqfuwxyIuaZhE6cRXOLtm2gfTGgaWNDw8VIw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-dYypByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-WYupByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-PYqpByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-IYmpByQJKnuIFA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/encodesanscondensed/v4/j8_46_LD37rqfuwxyIuaZhE6cRXOLtm2gfT-BYipByQJKnuIFA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EncodeSansCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme encodeSansCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.encodeSansCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle encodeSansExpandedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mx1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpJGKQNicoAbJlw.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpLqCCNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpKOCyNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4m_1mF4GcnstG_Jh1QH6ac4hNLeNyeYUqoiIwdAd5Ab.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpLWCiNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpL6DSNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpKeDCNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpKCDyNIXIwSP0XD.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/encodesansexpanded/v4/c4mw1mF4GcnstG_Jh1QH6ac4hNLeNyeYUpKmDiNIXIwSP0XD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EncodeSansExpanded',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme encodeSansExpandedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.encodeSansExpandedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle encodeSansSemiCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT6oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1T19MFtQ9jpVUA.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1RZ1eFHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1Q91uFHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT4oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG2yR_sVPRsjp.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1Rl1-FHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1RJ0OFHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1Qt0eFHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1Qx0uFHbdTgTFmr.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/encodesanssemicondensed/v4/3qT7oiKqnDuUtQUEHMoXcmspmy55SFWrXFRp9FTOG1QV0-FHbdTgTFmr.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EncodeSansSemiCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme encodeSansSemiCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.encodeSansSemiCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle encodeSansSemiExpandedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8xOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TM-41KwrlKXeOEA.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TM0IUCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TMyYXCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke83OhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TC4o_LyjgOXc.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TM34WCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TM1IRCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TMzYQCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TMyoTCyDLJX6XCWU.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/encodesanssemiexpanded/v5/ke8yOhAPMEZs-BDuzwftTNJ85JvwMOzE9d9Cca5TMw4SCyDLJX6XCWU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EncodeSansSemiExpanded',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme encodeSansSemiExpandedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.encodeSansSemiExpandedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle engagementTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/engagement/v9/x3dlckLDZbqa7RUs9MFVXNossybsHQI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Engagement',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme engagementTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.engagementTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.engagementTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.engagementTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.engagementTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.engagementTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.engagementTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.engagementTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.engagementTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.engagementTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.engagementTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.engagementTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.engagementTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.engagementTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle englebertTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/englebert/v7/xn7iYH8w2XGrC8AR4HSxT_fYdN-WZw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Englebert',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme englebertTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.englebertTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.englebertTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.englebertTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.englebertTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.englebertTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.englebertTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.englebertTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.englebertTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.englebertTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.englebertTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.englebertTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.englebertTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.englebertTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle enriquetaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/enriqueta/v9/goksH6L7AUFrRvV44HVTS0CjkP1Yog.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/enriqueta/v9/gokpH6L7AUFrRvV44HVrv2mHmNZEq6TTFw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/enriqueta/v9/gokpH6L7AUFrRvV44HVrk26HmNZEq6TTFw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/enriqueta/v9/gokpH6L7AUFrRvV44HVr92-HmNZEq6TTFw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Enriqueta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme enriquetaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.enriquetaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ericaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ericaone/v10/WBLnrEXccV9VGrOKmGD1W0_MJMGxiQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EricaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ericaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ericaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle estebanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/esteban/v8/r05bGLZE-bdGdN-GdOuD5jokU8E.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Esteban',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme estebanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.estebanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.estebanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.estebanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.estebanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.estebanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.estebanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.estebanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.estebanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.estebanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.estebanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.estebanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.estebanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.estebanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle euphoriaScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/euphoriascript/v8/mFTpWb0X2bLb_cx6To2B8GpKoD5ak_ZT1D8x7Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'EuphoriaScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme euphoriaScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.euphoriaScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ewertTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ewert/v7/va9I4kzO2tFODYBvS-J3kbDP.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ewert',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ewertTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ewertTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ewertTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ewertTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ewertTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ewertTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ewertTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ewertTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ewertTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ewertTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ewertTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ewertTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ewertTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ewertTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle exoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/exo/v9/4UaMrEtFpBIaEH6m2jbu5rXI.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaCrEtFpBISdkbC0DLM46XI-po.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIavF-G8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkZu8RLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIa2FyG8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkYK8hLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/exo/v9/4UaOrEtFpBIidHSi-DP-5g.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaMrEtFpBISdn6m2jbu5rXI.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIagF2G8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkZS8xLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIarFqG8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkZ-9BLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIayFuG8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkYa9RLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIa1FiG8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkYG9hLmzanB44N1.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/exo/v9/4UaDrEtFpBIa8FmG8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/exo/v9/4UaBrEtFpBISdkYi9xLmzanB44N1.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Exo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme exoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.exoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.exoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.exoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.exoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.exoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.exoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.exoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.exoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.exoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.exoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.exoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.exoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.exoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle exo2TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/exo2/v7/7cHov4okm5zmbt5LK-sW5HIohT4.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHqv4okm5zmbtYtE48c4FAtlT47dw.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt7nCss8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtEyM9wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt6DCcs8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtE0c-wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/exo2/v7/7cHmv4okm5zmbuYvIe804WIo.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHov4okm5zmbtYtK-sW5HIohT4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt7bCMs8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtEx8_wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt73D8s8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtEzM4wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt6TDss8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtE1c5wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt6PDcs8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtE0s6wHoDmTcibrA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/exo2/v7/7cHrv4okm5zmbt6rDMs8yn4hnCci.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/exo2/v7/7cHtv4okm5zmbtYtE287wHoDmTcibrA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Exo2',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme exo2TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.exo2TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.exo2TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.exo2TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.exo2TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.exo2TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.exo2TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.exo2TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.exo2TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.exo2TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.exo2TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.exo2TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.exo2TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.exo2TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle expletusSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/expletussans/v13/RLp5K5v5_bqufTYdnhFzDj2dRfkSu6EuTHo.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpnK5v5_bqufTYdnhFzDj2ddfsYv4MrXHrRDA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpkK5v5_bqufTYdnhFzDj2dfQ07n6kFUHPIFaU.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpiK5v5_bqufTYdnhFzDj2ddfsgS6oPVFHNBaVImA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpkK5v5_bqufTYdnhFzDj2dfSE8n6kFUHPIFaU.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpiK5v5_bqufTYdnhFzDj2ddfsgZ60PVFHNBaVImA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpkK5v5_bqufTYdnhFzDj2dfUU9n6kFUHPIFaU.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/expletussans/v13/RLpiK5v5_bqufTYdnhFzDj2ddfsgA6wPVFHNBaVImA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ExpletusSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme expletusSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.expletusSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fahkwangTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa26Uj3zpmBOgbNpOJHmZlRFipxkwjx.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa06Uj3zpmBOgbNpOqNgHFQHC5Tlhjxdw4.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa26Uj3zpmBOgbNpOIjmplRFipxkwjx.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa06Uj3zpmBOgbNpOqNgBVTHC5Tlhjxdw4.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noax6Uj3zpmBOgbNpNqPsr1ZPTZ4.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa36Uj3zpmBOgbNpOqNuLl7OCZ4ihE.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa26Uj3zpmBOgbNpOJ7m5lRFipxkwjx.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa06Uj3zpmBOgbNpOqNgE1SHC5Tlhjxdw4.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa26Uj3zpmBOgbNpOJXnJlRFipxkwjx.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa06Uj3zpmBOgbNpOqNgGFVHC5Tlhjxdw4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa26Uj3zpmBOgbNpOIznZlRFipxkwjx.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/fahkwang/v3/Noa06Uj3zpmBOgbNpOqNgAVUHC5Tlhjxdw4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fahkwang',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fahkwangTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fahkwangTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fanwoodTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fanwoodtext/v9/3XFtErwl05Ad_vSCF6Fq7xXGRdbY1P1Sbg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/fanwoodtext/v9/3XFzErwl05Ad_vSCF6Fq7xX2R9zc9vhCblye.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FanwoodText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fanwoodTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fanwoodTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle farroTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/farro/v1/i7dJIFl3byGNHa3hNJ6-WkJUQUq7.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/farro/v1/i7dEIFl3byGNHZVNHLq2cV5d.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/farro/v1/i7dJIFl3byGNHa25NZ6-WkJUQUq7.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/farro/v1/i7dJIFl3byGNHa3xM56-WkJUQUq7.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Farro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme farroTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.farroTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.farroTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.farroTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.farroTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.farroTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.farroTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.farroTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.farroTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.farroTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.farroTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.farroTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.farroTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.farroTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle farsanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/farsan/v5/VEMwRoJ0vY_zsyz62q-pxDX9rQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Farsan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme farsanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.farsanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.farsanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.farsanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.farsanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.farsanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.farsanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.farsanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.farsanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.farsanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.farsanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.farsanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.farsanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.farsanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fascinateTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fascinate/v8/z7NWdRrufC8XJK0IIEli1LbQRPyNrw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fascinate',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fascinateTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fascinateTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fascinateInlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fascinateinline/v9/jVyR7mzzB3zc-jp6QCAu60poNqIy1g3CfRXxWZQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FascinateInline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fascinateInlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fascinateInlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fasterOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fasterone/v11/H4ciBXCHmdfClFb-vWhfyLuShq63czE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FasterOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fasterOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fasterOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fasthandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fasthand/v10/0yb9GDohyKTYn_ZEESkuYkw2rQg1.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fasthand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fasthandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fasthandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle faunaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/faunaone/v7/wlpzgwTPBVpjpCuwkuEx2UxLYClOCg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FaunaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme faunaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.faunaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle faustinaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/faustina/v4/XLYlIZPxYpJfTbZAFW-4F81Kp28v.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/faustina/v4/XLYjIZPxYpJfTbZAFV-6Hcloon8vVXg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/faustina/v4/XLYiIZPxYpJfTbZAFVdMPulCjHMmTGFt.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/faustina/v4/XLYgIZPxYpJfTbZAFV-6JT1BhncESXFtUsM.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/faustina/v4/XLYiIZPxYpJfTbZAFVdgOelCjHMmTGFt.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/faustina/v4/XLYgIZPxYpJfTbZAFV-6JRFGhncESXFtUsM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/faustina/v4/XLYiIZPxYpJfTbZAFVcEOOlCjHMmTGFt.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/faustina/v4/XLYgIZPxYpJfTbZAFV-6JXVHhncESXFtUsM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Faustina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme faustinaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.faustinaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle federantTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/federant/v12/2sDdZGNfip_eirT0_U0jRUG0AqUc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Federant',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme federantTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.federantTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.federantTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.federantTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.federantTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.federantTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.federantTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.federantTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.federantTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.federantTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.federantTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.federantTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.federantTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.federantTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle federoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/federo/v11/iJWFBX-cbD_ETsbmjVOe2WTG7Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Federo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme federoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.federoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.federoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.federoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.federoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.federoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.federoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.federoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.federoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.federoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.federoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.federoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.federoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.federoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle felipaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/felipa/v7/FwZa7-owz1Eu4F_wSNSEwM2zpA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Felipa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme felipaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.felipaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.felipaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.felipaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.felipaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.felipaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.felipaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.felipaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.felipaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.felipaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.felipaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.felipaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.felipaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.felipaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fenixTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fenix/v7/XoHo2YL_S7-g5ostKzAFvs8o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fenix',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fenixTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fenixTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fenixTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fenixTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fenixTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fenixTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fenixTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fenixTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fenixTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fenixTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fenixTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fenixTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fenixTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fenixTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fingerPaintTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fingerpaint/v9/0QInMXVJ-o-oRn_7dron8YWO85bS8ANesw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FingerPaint',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fingerPaintTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fingerPaintTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle firaCodeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/firacode/v7/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_GNsFVfxN87gsj0.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/firacode/v7/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_D1sFVfxN87gsj0.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/firacode/v7/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_A9sFVfxN87gsj0.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/firacode/v7/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_ONrFVfxN87gsj0.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/firacode/v7/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_NprFVfxN87gsj0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FiraCode',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme firaCodeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.firaCodeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle firaMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/firamono/v8/N0bX2SlFPv1weGeLZDtQIfTTkdbJYA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/firamono/v8/N0bS2SlFPv1weGeLZDto1d33mf3VaZBRBQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/firamono/v8/N0bS2SlFPv1weGeLZDtondv3mf3VaZBRBQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FiraMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme firaMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.firaMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle firaSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/firasans/v10/va9C4kDNxMZdWfMOD5Vn9IjOazP3dUTP.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9A4kDNxMZdWfMOD5VvkrCqYTfVcFTPj0s.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnWKnuQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrAGQBf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnPKruQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrBiQxf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/firasans/v10/va9E4kDNxMZdWfMOD5VfkILKSTbndQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9C4kDNxMZdWfMOD5VvkojOazP3dUTP.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnZKvuQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrA6Qhf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnSKzuQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrAWRRf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnLK3uQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrByRBf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnMK7uQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrBuRxf_XljGllLX.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/firasans/v10/va9B4kDNxMZdWfMOD5VnFK_uQR37fF3Wlg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/firasans/v10/va9f4kDNxMZdWfMOD5VvkrBKRhf_XljGllLX.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FiraSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme firaSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.firaSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle firaSansCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOjEADFm8hSaQTFG18FErVhsC9x-tarWZXtqOlQfx9CjA.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOtEADFm8hSaQTFG18FErVhsC9x-tarUfPVzONUXRpSjJcu.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWTnMiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVYMJ0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWV3PiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVBMF0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOhEADFm8hSaQTFG18FErVhsC9x-tarYfHnrMtVbx8.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOjEADFm8hSaQTFG18FErVhsC9x-tarUfPtqOlQfx9CjA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWQXOiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVXMB0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWSnJiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVcMd0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWU3IiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVFMZ0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWVHLiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVCMV0dzRehY43EA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOsEADFm8hSaQTFG18FErVhsC9x-tarWXXKiMN-cxZblY4.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/firasanscondensed/v4/wEOuEADFm8hSaQTFG18FErVhsC9x-tarUfPVLMR0dzRehY43EA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FiraSansCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme firaSansCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.firaSansCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle firaSansExtraCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPMcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3Zyuv1WarE9ncg.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPOcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqW21-ejkp3cn22.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3TCPn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWd36-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3VSMn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWE32-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPKcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda5fiku3efvE8.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPMcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fquv1WarE9ncg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3QyNn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWS3y-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3SCKn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWZ3u-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3USLn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWA3q-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3ViIn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWH3m-pGR7e2SvJQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPPcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda3XyJn3-0oEZ-a2Q.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/firasansextracondensed/v4/NaPxcYDaAO5dirw6IaFn7lPJFqXmS-M9Atn3wgda1fqWO3i-pGR7e2SvJQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FiraSansExtraCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme firaSansExtraCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.firaSansExtraCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fjallaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fjallaone/v7/Yq6R-LCAWCX3-6Ky7FAFnOZwkxgtUb8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FjallaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fjallaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fjallaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fjordOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fjordone/v8/zOL-4pbEnKBY_9S1jNKr6e5As-FeiQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FjordOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fjordOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fjordOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle flamencoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/flamenco/v10/neIPzCehqYguo67ssZ0qNIkyepH9qGsf.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/flamenco/v10/neIIzCehqYguo67ssaWGHK06UY30.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Flamenco',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme flamencoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.flamencoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle flavorsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/flavors/v9/FBV2dDrhxqmveJTpbkzlNqkG9UY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Flavors',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme flavorsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.flavorsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fondamentoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fondamento/v10/4UaHrEJGsxNmFTPDnkaJx63j5pN1MwI.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/fondamento/v10/4UaFrEJGsxNmFTPDnkaJ96_p4rFwIwJePw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fondamento',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fondamentoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fondamentoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fontdinerSwankyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fontdinerswanky/v10/ijwOs4XgRNsiaI5-hcVb4hQgMvCD4uEfKiGvxts.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FontdinerSwanky',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fontdinerSwankyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fontdinerSwankyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle forumTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/forum/v10/6aey4Ky-Vb8Ew_IWMJMa3mnT.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Forum',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme forumTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.forumTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.forumTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.forumTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.forumTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.forumTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.forumTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.forumTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.forumTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.forumTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.forumTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.forumTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.forumTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.forumTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle francoisOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/francoisone/v14/_Xmr-H4zszafZw3A-KPSZutNxgKQu_avAg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FrancoisOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme francoisOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.francoisOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle frankRuhlLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/frankruhllibre/v5/j8_36_fAw7jrcalD7oKYNX0QfAnPUxvHxJDMhYeIHw8.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/frankruhllibre/v5/j8_w6_fAw7jrcalD7oKYNX0QfAnPa7fv4JjnmY4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/frankruhllibre/v5/j8_36_fAw7jrcalD7oKYNX0QfAnPU0PGxJDMhYeIHw8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/frankruhllibre/v5/j8_36_fAw7jrcalD7oKYNX0QfAnPUwvAxJDMhYeIHw8.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/frankruhllibre/v5/j8_36_fAw7jrcalD7oKYNX0QfAnPUzPCxJDMhYeIHw8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FrankRuhlLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme frankRuhlLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.frankRuhlLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle freckleFaceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/freckleface/v8/AMOWz4SXrmKHCvXTohxY-YI0U1K2w9lb4g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FreckleFace',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme freckleFaceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.freckleFaceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle frederickatheGreatTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/frederickathegreat/v9/9Bt33CxNwt7aOctW2xjbCstzwVKsIBVV-9Skz7Ylch2L.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FrederickatheGreat',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme frederickatheGreatTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.frederickatheGreatTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fredokaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fredokaone/v7/k3kUo8kEI-tA1RRcTZGmTmHBA6aF8Bf_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FredokaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fredokaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fredokaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle freehandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/freehand/v11/cIf-Ma5eqk01VjKTgAmBTmUOmZJk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Freehand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme freehandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.freehandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.freehandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.freehandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.freehandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.freehandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.freehandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.freehandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.freehandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.freehandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.freehandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.freehandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.freehandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.freehandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle frescaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fresca/v8/6ae94K--SKgCzbM2Gr0W13DKPA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fresca',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme frescaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.frescaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.frescaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.frescaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.frescaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.frescaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.frescaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.frescaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.frescaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.frescaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.frescaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.frescaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.frescaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.frescaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle frijoleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/frijole/v8/uU9PCBUR8oakM2BQ7xPb3vyHmlI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Frijole',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme frijoleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.frijoleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle frukturTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fruktur/v12/SZc53FHsOru5QYsMfz3GkUrS8DI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Fruktur',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme frukturTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.frukturTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.frukturTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.frukturTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.frukturTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.frukturTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.frukturTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.frukturTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.frukturTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.frukturTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.frukturTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.frukturTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.frukturTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.frukturTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle fugazOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/fugazone/v9/rax_HiWKp9EAITukFslMBBJek0vA8A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'FugazOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme fugazOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.fugazOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gFSDidotTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gfsdidot/v9/Jqzh5TybZ9vZMWFssvwiF-fGFSCGAA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GFSDidot',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gFSDidotTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gFSDidotTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gFSNeohellenicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gfsneohellenic/v12/8QIRdiDOrfiq0b7R8O1Iw9WLcY5TLahP46UDUw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/gfsneohellenic/v12/8QITdiDOrfiq0b7R8O1Iw9WLcY5jL6JLwaATU91X.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gfsneohellenic/v12/8QIUdiDOrfiq0b7R8O1Iw9WLcY5rkYdr644fWsRO9w.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/gfsneohellenic/v12/8QIWdiDOrfiq0b7R8O1Iw9WLcY5jL5r37oQbeMFe985V.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GFSNeohellenic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gFSNeohellenicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gFSNeohellenicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gabrielaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gabriela/v8/qkBWXvsO6sreR8E-b_m-zrpHmRzC.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gabriela',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gabrielaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gabrielaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gaeguTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/gaegu/v8/TuGSUVB6Up9NU57nifw74sdtBk0x.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gaegu/v8/TuGfUVB6Up9NU6ZLodgzydtk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gaegu/v8/TuGSUVB6Up9NU573jvw74sdtBk0x.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gaegu',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gaeguTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gaeguTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gafataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gafata/v8/XRXV3I6Cn0VJKon4MuyAbsrVcA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gafata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gafataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gafataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gafataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gafataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gafataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gafataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gafataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gafataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gafataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gafataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gafataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gafataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gafataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gafataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle galadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/galada/v5/H4cmBXyGmcjXlUX-8iw-4Lqggw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Galada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme galadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.galadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.galadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.galadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.galadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.galadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.galadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.galadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.galadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.galadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.galadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.galadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.galadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.galadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle galdeanoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/galdeano/v9/uU9MCBoQ4YOqOW1boDPx8PCOg0uX.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Galdeano',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme galdeanoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.galdeanoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle galindoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/galindo/v7/HI_KiYMeLqVKqwyuQ5HiRp-dhpQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Galindo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme galindoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.galindoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.galindoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.galindoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.galindoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.galindoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.galindoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.galindoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.galindoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.galindoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.galindoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.galindoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.galindoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.galindoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gamjaFlowerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gamjaflower/v8/6NUR8FiKJg-Pa0rM6uN40Z4kyf9Fdty2ew.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GamjaFlower',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gamjaFlowerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gamjaFlowerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gayathriTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/gayathri/v1/MCoWzAb429DbBilWLLhc-pvSA_gA2W8.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gayathri/v1/MCoQzAb429DbBilWLIA48J_wBugA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gayathri/v1/MCoXzAb429DbBilWLLiE37v4LfQJwHbn.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gayathri',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gayathriTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gayathriTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gentiumBasicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gentiumbasic/v11/Wnz9HAw9aB_JD2VGQVR80We3HAqDiTI_cIM.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/gentiumbasic/v11/WnzjHAw9aB_JD2VGQVR80We3LAiJjRA6YIORZQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gentiumbasic/v11/WnzgHAw9aB_JD2VGQVR80We3JLasrToUbIqIfBU.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/gentiumbasic/v11/WnzmHAw9aB_JD2VGQVR80We3LAixMT8eaKiNbBVWkw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GentiumBasic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gentiumBasicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gentiumBasicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gentiumBookBasicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gentiumbookbasic/v10/pe0zMJCbPYBVokB1LHA9bbyaQb8ZGjcIV7t7w6bE2A.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/gentiumbookbasic/v10/pe0xMJCbPYBVokB1LHA9bbyaQb8ZGjc4VbF_4aPU2Ec9.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gentiumbookbasic/v10/pe0wMJCbPYBVokB1LHA9bbyaQb8ZGjcw65Rfy43Y0V4kvg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/gentiumbookbasic/v10/pe0-MJCbPYBVokB1LHA9bbyaQb8ZGjc4VYnDzofc81s0voO3.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GentiumBookBasic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gentiumBookBasicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gentiumBookBasicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle geoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/geo/v11/CSRz4zRZlufVL3BmQjlCbQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/geo/v11/CSRx4zRZluflLXpiYDxSbf8r.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Geo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme geoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.geoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.geoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.geoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.geoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.geoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.geoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.geoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.geoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.geoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.geoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.geoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.geoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.geoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle geostarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/geostar/v10/sykz-yx4n701VLOftSq9-trEvlQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Geostar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme geostarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.geostarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.geostarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.geostarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.geostarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.geostarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.geostarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.geostarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.geostarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.geostarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.geostarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.geostarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.geostarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.geostarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle geostarFillTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/geostarfill/v10/AMOWz4SWuWiXFfjEohxQ9os0U1K2w9lb4g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GeostarFill',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme geostarFillTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.geostarFillTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle germaniaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/germaniaone/v7/Fh4yPjrqIyv2ucM2qzBjeS3ezAJONau6ew.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GermaniaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme germaniaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.germaniaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle giduguTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gidugu/v6/L0x8DFMkk1Uf6w3RvPCmRSlUig.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gidugu',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme giduguTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.giduguTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.giduguTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.giduguTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.giduguTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.giduguTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.giduguTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.giduguTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.giduguTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.giduguTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.giduguTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.giduguTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.giduguTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.giduguTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gildaDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gildadisplay/v7/t5tmIRoYMoaYG0WEOh7HwMeR7TnFrpOHYh4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GildaDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gildaDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gildaDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle giveYouGloryTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/giveyouglory/v9/8QIQdiHOgt3vv4LR7ahjw9-XYc1zB4ZD6rwa.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GiveYouGlory',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme giveYouGloryTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.giveYouGloryTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle glassAntiquaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/glassantiqua/v7/xfu30Wr0Wn3NOQM2piC0uXOjnL_wN6fRUkY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GlassAntiqua',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme glassAntiquaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.glassAntiquaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle glegooTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/glegoo/v9/_Xmt-HQyrTKWaw2Ji6mZAI91xw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/glegoo/v9/_Xmu-HQyrTKWaw2xN4a9CKRpzimMsg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Glegoo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme glegooTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.glegooTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.glegooTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.glegooTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.glegooTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.glegooTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.glegooTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.glegooTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.glegooTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.glegooTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.glegooTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.glegooTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.glegooTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.glegooTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gloriaHallelujahTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gloriahallelujah/v11/LYjYdHv3kUk9BMV96EIswT9DIbW-MLSy3TKEvkCF.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GloriaHallelujah',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gloriaHallelujahTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gloriaHallelujahTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle goblinOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/goblinone/v9/CSR64z1ZnOqZRjRCBVY_TOcATNt_pOU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GoblinOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme goblinOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.goblinOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gochiHandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gochihand/v10/hES06XlsOjtJsgCkx1PkTo71-n0nXWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GochiHand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gochiHandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gochiHandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gorditasTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gorditas/v7/ll8_K2aTVD26DsPEtQDoDa4AlxYb.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gorditas/v7/ll84K2aTVD26DsPEtThUIooIvAoShA1i.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gorditas',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gorditasTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gorditasTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gothicA1TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR74z5ZnPydRjlCCwlCCMcqYtd2vfwk.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlCpOYKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlCwOUKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR94z5ZnPydRjlCCwl6bM0uQNJmvQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlCmOQKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlCtOMKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlC0OIKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlCzOEKSPl6tOU9Eg.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/gothica1/v8/CSR44z5ZnPydRjlCCwlC6OAKSPl6tOU9Eg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GothicA1',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gothicA1TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gothicA1TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle goudyBookletter1911TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/goudybookletter1911/v9/sykt-z54laciWfKv-kX8krex0jDiD2HbY6I5tRbXZ4IXAA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GoudyBookletter1911',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme goudyBookletter1911TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.goudyBookletter1911TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle graduateTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/graduate/v7/C8cg4cs3o2n15t_2YxgR6X2NZAn2.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Graduate',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme graduateTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.graduateTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.graduateTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.graduateTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.graduateTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.graduateTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.graduateTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.graduateTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.graduateTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.graduateTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.graduateTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.graduateTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.graduateTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.graduateTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle grandHotelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/grandhotel/v7/7Au7p_IgjDKdCRWuR1azpmQNEl0O0kEx.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GrandHotel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme grandHotelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.grandHotelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gravitasOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gravitasone/v9/5h1diZ4hJ3cblKy3LWakKQmaDWRNr3DzbQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GravitasOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gravitasOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gravitasOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle greatVibesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/greatvibes/v7/RWmMoKWR9v4ksMfaWd_JN-XCg6UKDXlq.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'GreatVibes',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme greatVibesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.greatVibesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle grenzeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZRFGb7hR12BxqPm2IjuAkalnmd.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZXFGb7hR12BxqH_VpHsg04k2md0kI.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPN0MDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_Vrrky0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPU0ADkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_VqPkC0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZTFGb7hR12Bxq3_2gnmgwKlg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZRFGb7hR12BxqH_WIjuAkalnmd.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPC0EDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_VrXkS0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPJ0YDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_Vr7li0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPQ0cDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_Vqfly0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPX0QDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_VqDlC0SvWWUy1uW.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZQFGb7hR12BxqPe0UDkicWn2CEyw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/grenze/v1/O4ZWFGb7hR12BxqH_VqnlS0SvWWUy1uW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Grenze',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme grenzeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.grenzeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle griffyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/griffy/v8/FwZa7-ox2FQh9kfwSNSEwM2zpA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Griffy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme griffyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.griffyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.griffyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.griffyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.griffyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.griffyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.griffyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.griffyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.griffyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.griffyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.griffyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.griffyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.griffyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.griffyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gruppoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gruppo/v10/WwkfxPmzE06v_ZWFWXDAOIEQUQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gruppo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gruppoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gruppoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gudeaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gudea/v9/neIFzCqgsI0mp-CP9IGON7Ez.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/gudea/v9/neILzCqgsI0mp9CN_oWsMqEzSJQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/gudea/v9/neIIzCqgsI0mp9gz26WGHK06UY30.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gudea',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gudeaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gudeaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gugiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gugi/v8/A2BVn5dXywshVA6A9DEfgqM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gugi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gugiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gugiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gugiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gugiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gugiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gugiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gugiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gugiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gugiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gugiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gugiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gugiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gugiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gugiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle gurajadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/gurajada/v7/FwZY7-Qx308m-l-0Kd6A4sijpFu_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Gurajada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme gurajadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.gurajadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle habibiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/habibi/v8/CSR-4zFWkuqcTTNCShJeZOYySQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Habibi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme habibiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.habibiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.habibiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.habibiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.habibiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.habibiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.habibiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.habibiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.habibiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.habibiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.habibiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.habibiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.habibiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.habibiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle halantTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/halant/v7/u-490qaujRI2Pbsvc_pCmwZqcwdRXg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/halant/v7/u-4-0qaujRI2PbsX39Jmky12eg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/halant/v7/u-490qaujRI2PbsvK_tCmwZqcwdRXg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/halant/v7/u-490qaujRI2PbsvB_xCmwZqcwdRXg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/halant/v7/u-490qaujRI2PbsvY_1CmwZqcwdRXg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Halant',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme halantTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.halantTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.halantTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.halantTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.halantTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.halantTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.halantTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.halantTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.halantTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.halantTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.halantTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.halantTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.halantTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.halantTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hammersmithOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hammersmithone/v10/qWcyB624q4L_C4jGQ9IK0O_dFlnbshsks4MRXw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HammersmithOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hammersmithOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hammersmithOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hanaleiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hanalei/v10/E21n_dD8iufIjBRHXzgmVydREus.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Hanalei',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hanaleiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hanaleiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hanaleiFillTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hanaleifill/v8/fC1mPYtObGbfyQznIaQzPQiMVwLBplm9aw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HanaleiFill',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hanaleiFillTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hanaleiFillTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle handleeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/handlee/v8/-F6xfjBsISg9aMakDmr6oilJ3ik.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Handlee',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme handleeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.handleeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.handleeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.handleeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.handleeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.handleeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.handleeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.handleeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.handleeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.handleeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.handleeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.handleeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.handleeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.handleeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hanumanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hanuman/v13/VuJxdNvD15HhpJJBeKbXOIFneRo.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hanuman/v13/VuJ0dNvD15HhpJJBQBr4HIlMZRNcp0o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Hanuman',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hanumanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hanumanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle happyMonkeyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/happymonkey/v8/K2F2fZZcl-9SXwl5F_C4R_OABwD2bWqVjw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HappyMonkey',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme happyMonkeyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.happyMonkeyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle harmattanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/harmattan/v6/goksH6L2DkFvVvRp9XpTS0CjkP1Yog.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Harmattan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme harmattanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.harmattanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle headlandOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/headlandone/v7/yYLu0hHR2vKnp89Tk1TCq3Tx0PlTeZ3mJA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HeadlandOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme headlandOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.headlandOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle heeboTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/heebo/v5/NGS0v5_NC0k9P9mVTbRhtKMByaw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/heebo/v5/NGS3v5_NC0k9P9ldb5RLmq8I0LVF.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/heebo/v5/NGS6v5_NC0k9P-HxR7BDsbMB.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/heebo/v5/NGS3v5_NC0k9P9kFbpRLmq8I0LVF.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/heebo/v5/NGS3v5_NC0k9P9lNaJRLmq8I0LVF.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/heebo/v5/NGS3v5_NC0k9P9lRa5RLmq8I0LVF.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/heebo/v5/NGS3v5_NC0k9P9l1apRLmq8I0LVF.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Heebo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme heeboTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.heeboTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.heeboTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.heeboTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.heeboTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.heeboTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.heeboTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.heeboTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.heeboTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.heeboTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.heeboTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.heeboTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.heeboTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.heeboTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hennyPennyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hennypenny/v7/wXKvE3UZookzsxz_kjGSfMQqt3M7tMDT.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HennyPenny',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hennyPennyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hennyPennyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle heptaSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvkV5jfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvmV5zfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvlL5zfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvkV5zfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5Hvkn5zfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvnL4DfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5Hvny4DfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5HvmV4DfbY5B0NBkz.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/heptaslab/v6/ea8JadoyU_jkHdalebHvyWVNdYoIsHe5Hvm84DfbY5B0NBkz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HeptaSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme heptaSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.heptaSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle herrVonMuellerhoffTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/herrvonmuellerhoff/v9/WBL6rFjRZkREW8WqmCWYLgCkQKXb4CAft3c6_qJY3QPQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HerrVonMuellerhoff',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme herrVonMuellerhoffTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.herrVonMuellerhoffTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hiMelodyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/himelody/v8/46ktlbP8Vnz0pJcqCTbEf29E31BBGA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HiMelody',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hiMelodyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hiMelodyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hindTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/hind/v10/5aU19_a8oxmIfMJaIRuYjDpf5Vw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hind/v10/5aU69_a8oxmIRG5yBROzkDM.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/hind/v10/5aU19_a8oxmIfJpbIRuYjDpf5Vw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/hind/v10/5aU19_a8oxmIfLZcIRuYjDpf5Vw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hind/v10/5aU19_a8oxmIfNJdIRuYjDpf5Vw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Hind',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hindTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hindTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hindTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hindTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hindTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hindTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hindTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hindTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hindTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hindTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hindTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hindTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hindTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hindTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hindGunturTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/hindguntur/v5/wXKyE3UZrok56nvamSuJd_yGn1czn9zaj5Ju.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hindguntur/v5/wXKvE3UZrok56nvamSuJd8Qqt3M7tMDT.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/hindguntur/v5/wXKyE3UZrok56nvamSuJd_zenlczn9zaj5Ju.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/hindguntur/v5/wXKyE3UZrok56nvamSuJd_zymVczn9zaj5Ju.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hindguntur/v5/wXKyE3UZrok56nvamSuJd_yWmFczn9zaj5Ju.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HindGuntur',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hindGunturTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hindGunturTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hindMaduraiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/hindmadurai/v5/f0Xu0e2p98ZvDXdZQIOcpqjfXaUnecsoMJ0b_g.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hindmadurai/v5/f0Xx0e2p98ZvDXdZQIOcpqjn8Y0DceA0OQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/hindmadurai/v5/f0Xu0e2p98ZvDXdZQIOcpqjfBaQnecsoMJ0b_g.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/hindmadurai/v5/f0Xu0e2p98ZvDXdZQIOcpqjfKaMnecsoMJ0b_g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hindmadurai/v5/f0Xu0e2p98ZvDXdZQIOcpqjfTaInecsoMJ0b_g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HindMadurai',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hindMaduraiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hindMaduraiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hindSiliguriTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/hindsiliguri/v6/ijwOs5juQtsyLLR5jN4cxBEoRDf44uEfKiGvxts.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hindsiliguri/v6/ijwTs5juQtsyLLR5jN4cxBEofJvQxuk0Nig.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/hindsiliguri/v6/ijwOs5juQtsyLLR5jN4cxBEoRG_54uEfKiGvxts.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/hindsiliguri/v6/ijwOs5juQtsyLLR5jN4cxBEoREP-4uEfKiGvxts.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hindsiliguri/v6/ijwOs5juQtsyLLR5jN4cxBEoRCf_4uEfKiGvxts.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HindSiliguri',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hindSiliguriTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hindSiliguriTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle hindVadodaraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/hindvadodara/v6/neIQzCKvrIcn5pbuuuriV9tTSDn3iXM0oSOL2Yw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/hindvadodara/v6/neINzCKvrIcn5pbuuuriV9tTcJXfrXsfvSo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/hindvadodara/v6/neIQzCKvrIcn5pbuuuriV9tTSGH2iXM0oSOL2Yw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/hindvadodara/v6/neIQzCKvrIcn5pbuuuriV9tTSE3xiXM0oSOL2Yw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/hindvadodara/v6/neIQzCKvrIcn5pbuuuriV9tTSCnwiXM0oSOL2Yw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HindVadodara',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme hindVadodaraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.hindVadodaraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle holtwoodOneSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/holtwoodonesc/v10/yYLx0hLR0P-3vMFSk1TCq3Txg5B3cbb6LZttyg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HoltwoodOneSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme holtwoodOneSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.holtwoodOneSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle homemadeAppleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/homemadeapple/v10/Qw3EZQFXECDrI2q789EKQZJob3x9Vnksi4M7.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'HomemadeApple',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme homemadeAppleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.homemadeAppleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle homenajeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/homenaje/v9/FwZY7-Q-xVAi_l-6Ld6A4sijpFu_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Homenaje',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme homenajeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.homenajeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iBMPlexMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6pfjptAgt5VM-kVkqdyU8n3kwq0n1hj-sNFQ.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6rfjptAgt5VM-kVkqdyU8n1ioStndlre4dFcFh.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6qfjptAgt5VM-kVkqdyU8n3uAL8ldPg-IUDNg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6sfjptAgt5VM-kVkqdyU8n1ioSGlZFh8ARHNh4zg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6qfjptAgt5VM-kVkqdyU8n3oQI8ldPg-IUDNg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6sfjptAgt5VM-kVkqdyU8n1ioSflVFh8ARHNh4zg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F63fjptAgt5VM-kVkqdyU8n5igg1l9kn-s.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6pfjptAgt5VM-kVkqdyU8n1ioq0n1hj-sNFQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6qfjptAgt5VM-kVkqdyU8n3twJ8ldPg-IUDNg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6sfjptAgt5VM-kVkqdyU8n1ioSJlRFh8ARHNh4zg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6qfjptAgt5VM-kVkqdyU8n3vAO8ldPg-IUDNg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6sfjptAgt5VM-kVkqdyU8n1ioSClNFh8ARHNh4zg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6qfjptAgt5VM-kVkqdyU8n3pQP8ldPg-IUDNg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ibmplexmono/v5/-F6sfjptAgt5VM-kVkqdyU8n1ioSblJFh8ARHNh4zg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IBMPlexMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iBMPlexMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iBMPlexMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iBMPlexSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX-KVElMYYaJe8bpLHnCwDKjbLeEKxIedbzDw.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX8KVElMYYaJe8bpLHnCwDKhdTmdKZMW9PjD3N8.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX9KVElMYYaJe8bpLHnCwDKjR7_MIZmdd_qFmo.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX7KVElMYYaJe8bpLHnCwDKhdTm2Idscf3vBmpl8A.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX9KVElMYYaJe8bpLHnCwDKjXr8MIZmdd_qFmo.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRscf3vBmpl8A.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYXgKVElMYYaJe8bpLHnCwDKtdbUFI5NadY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX-KVElMYYaJe8bpLHnCwDKhdTeEKxIedbzDw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX9KVElMYYaJe8bpLHnCwDKjSL9MIZmdd_qFmo.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX7KVElMYYaJe8bpLHnCwDKhdTm5IVscf3vBmpl8A.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX9KVElMYYaJe8bpLHnCwDKjQ76MIZmdd_qFmo.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJscf3vBmpl8A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX9KVElMYYaJe8bpLHnCwDKjWr7MIZmdd_qFmo.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ibmplexsans/v7/zYX7KVElMYYaJe8bpLHnCwDKhdTmrINscf3vBmpl8A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IBMPlexSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iBMPlexSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iBMPlexSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iBMPlexSansCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8nN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY7KyKvBgYsMDhM.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8hN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8M_LhakJHhOgBg.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8gN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY5m6Yvrr4cFFwq5.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8iN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8GPqpYMnEhq5H1w.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8gN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY4C6ovrr4cFFwq5.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8iN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8AfppYMnEhq5H1w.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8lN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHbauwq_jhJsM.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8nN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYasyKvBgYsMDhM.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8gN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY5a64vrr4cFFwq5.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8iN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8F_opYMnEhq5H1w.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8gN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY527Ivrr4cFFwq5.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8iN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8HPvpYMnEhq5H1w.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8gN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHY4S7Yvrr4cFFwq5.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ibmplexsanscondensed/v6/Gg8iN4UfRSqiPg7Jn2ZI12V4DCEwkj1E4LVeHYas8BfupYMnEhq5H1w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IBMPlexSansCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iBMPlexSansCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iBMPlexSansCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iBMPlexSerifTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizBREVNn1dOx-zrZ2X3pZvkTi182zIZj1bIkNo.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizHREVNn1dOx-zrZ2X3pZvkTiUa41YTi3TNgNq55w.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizAREVNn1dOx-zrZ2X3pZvkTi3Q-hIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizGREVNn1dOx-zrZ2X3pZvkTiUa4_oyq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizAREVNn1dOx-zrZ2X3pZvkTi20-RIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizGREVNn1dOx-zrZ2X3pZvkTiUa454xq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizDREVNn1dOx-zrZ2X3pZvkThUY0TY7ikbI.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizBREVNn1dOx-zrZ2X3pZvkTiUa2zIZj1bIkNo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizAREVNn1dOx-zrZ2X3pZvkTi3s-BIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizGREVNn1dOx-zrZ2X3pZvkTiUa48Ywq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizAREVNn1dOx-zrZ2X3pZvkTi3A_xIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizGREVNn1dOx-zrZ2X3pZvkTiUa4-o3q17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizAREVNn1dOx-zrZ2X3pZvkTi2k_hIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ibmplexserif/v8/jizGREVNn1dOx-zrZ2X3pZvkTiUa4442q17jjNOg_oc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IBMPlexSerif',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iBMPlexSerifTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iBMPlexSerifTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellDWPicaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfelldwpica/v9/2sDGZGRQotv9nbn2qSl0TxXVYNw9ZAPUvi88MQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/imfelldwpica/v9/2sDEZGRQotv9nbn2qSl0TxXVYNwNZgnQnCosMXm0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellDWPica',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellDWPicaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellDWPicaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellDWPicaSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfelldwpicasc/v9/0ybjGCAu5PfqkvtGVU15aBhXz3EUrnTW-BiKEUiBGA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellDWPicaSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellDWPicaSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellDWPicaSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellDoublePicaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfelldoublepica/v9/3XF2EqMq_94s9PeKF7Fg4gOKINyMtZ8rT0S1UL5Ayp0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/imfelldoublepica/v9/3XF0EqMq_94s9PeKF7Fg4gOKINyMtZ8rf0a_VJxF2p2G8g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellDoublePica',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellDoublePicaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellDoublePicaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellDoublePicaSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfelldoublepicasc/v9/neIazDmuiMkFo6zj_sHpQ8teNbWlwBB_hXjJ4Y0Eeru2dGg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellDoublePicaSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellDoublePicaSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellDoublePicaSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellEnglishTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellenglish/v9/Ktk1ALSLW8zDe0rthJysWrnLsAz3F6mZVY9Y5w.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/imfellenglish/v9/Ktk3ALSLW8zDe0rthJysWrnLsAzHFaOdd4pI59zg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellEnglish',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellEnglishTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellEnglishTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellEnglishSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellenglishsc/v9/a8IENpD3CDX-4zrWfr1VY879qFF05pZLO4gOg0shzA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellEnglishSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellEnglishSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellEnglishSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellFrenchCanonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellfrenchcanon/v9/-F6ufiNtDWYfYc-tDiyiw08rrghJszkK6coVPt1ozoPz.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/imfellfrenchcanon/v9/-F6gfiNtDWYfYc-tDiyiw08rrghJszkK6foXNNlKy5PzzrU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellFrenchCanon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellFrenchCanonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellFrenchCanonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellFrenchCanonSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellfrenchcanonsc/v9/FBVmdCru5-ifcor2bgq9V89khWcmQghEURY7H3c0UBCVIVqH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellFrenchCanonSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellFrenchCanonSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellFrenchCanonSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellGreatPrimerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellgreatprimer/v9/bx6aNwSJtayYxOkbYFsT6hMsLzX7u85rJorXvDo3SQY1.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/imfellgreatprimer/v9/bx6UNwSJtayYxOkbYFsT6hMsLzX7u85rJrrVtj4VTBY1N6U.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellGreatPrimer',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellGreatPrimerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellGreatPrimerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle iMFellGreatPrimerSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imfellgreatprimersc/v9/ga6daxBOxyt6sCqz3fjZCTFCTUDMHagsQKdDTLf9BXz0s8FG.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IMFellGreatPrimerSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme iMFellGreatPrimerSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.iMFellGreatPrimerSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle icebergTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/iceberg/v7/8QIJdijAiM7o-qnZuIgOq7jkAOw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Iceberg',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme icebergTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.icebergTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.icebergTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.icebergTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.icebergTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.icebergTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.icebergTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.icebergTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.icebergTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.icebergTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.icebergTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.icebergTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.icebergTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.icebergTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle icelandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/iceland/v8/rax9HiuFsdMNOnWPWKxGADBbg0s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Iceland',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme icelandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.icelandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.icelandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.icelandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.icelandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.icelandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.icelandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.icelandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.icelandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.icelandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.icelandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.icelandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.icelandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.icelandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle imprimaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/imprima/v8/VEMxRoN7sY3yuy-7-oWHyDzktPo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Imprima',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme imprimaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.imprimaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle inconsolataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/inconsolata/v18/QldKNThLqRwH-OJ1UHjlKFle7KlmxuHx.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/inconsolata/v18/QldXNThLqRwH-OJ1UHjlKGHiw41u7f34DYwn.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Inconsolata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme inconsolataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.inconsolataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle inderTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/inder/v8/w8gUH2YoQe8_4vq6pw-P3U4O.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Inder',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme inderTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.inderTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.inderTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.inderTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.inderTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.inderTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.inderTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.inderTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.inderTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.inderTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.inderTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.inderTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.inderTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.inderTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle indieFlowerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/indieflower/v11/m8JVjfNVeKWVnh3QMuKkFcZlbkGG1dKEDw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IndieFlower',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme indieFlowerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.indieFlowerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle inikaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/inika/v8/rnCm-x5X3QP-phTHRcc2s2XH.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/inika/v8/rnCr-x5X3QP-pix7auM-mHnOSOuk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Inika',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme inikaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.inikaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.inikaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.inikaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.inikaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.inikaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.inikaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.inikaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.inikaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.inikaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.inikaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.inikaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.inikaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.inikaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle inknutAntiquaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU2vwrj5bBoIYJNf.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GSYax7VC4ot_qNB4nYpBdaKXUD6pzxRwYB.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU33w7j5bBoIYJNf.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU3bxLj5bBoIYJNf.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU2_xbj5bBoIYJNf.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU2jxrj5bBoIYJNf.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/inknutantiqua/v5/Y4GRYax7VC4ot_qNB4nYpBdaKU2Hx7j5bBoIYJNf.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'InknutAntiqua',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme inknutAntiquaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.inknutAntiquaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle irishGroverTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/irishgrover/v10/buExpoi6YtLz2QW7LA4flVgf-P5Oaiw4cw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IrishGrover',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme irishGroverTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.irishGroverTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle istokWebTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/istokweb/v14/3qTvojGmgSyUukBzKslZAWF-9kIIaQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/istokweb/v14/3qTpojGmgSyUukBzKslpA2t61EcYaQ7F.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/istokweb/v14/3qTqojGmgSyUukBzKslhvU5a_mkUYBfcMw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/istokweb/v14/3qT0ojGmgSyUukBzKslpA1PG-2MQQhLMMygN.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'IstokWeb',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme istokWebTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.istokWebTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle italianaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/italiana/v8/QldNNTtLsx4E__B0XTmRY31Wx7Vv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Italiana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme italianaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.italianaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.italianaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.italianaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.italianaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.italianaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.italianaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.italianaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.italianaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.italianaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.italianaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.italianaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.italianaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.italianaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle italiannoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/italianno/v9/dg4n_p3sv6gCJkwzT6Rnj5YpQwM-gg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Italianno',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme italiannoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.italiannoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle itimTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/itim/v4/0nknC9ziJOYewARKkc7ZdwU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Itim',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme itimTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.itimTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.itimTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.itimTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.itimTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.itimTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.itimTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.itimTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.itimTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.itimTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.itimTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.itimTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.itimTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.itimTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jacquesFrancoisTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jacquesfrancois/v7/ZXu9e04ZvKeOOHIe1TMahbcIU2cgmcPqoeRWfbs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JacquesFrancois',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jacquesFrancoisTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jacquesFrancoisTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jacquesFrancoisShadowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jacquesfrancoisshadow/v8/KR1FBtOz8PKTMk-kqdkLVrvR0ECFrB6Pin-2_q8VsHuV5ULS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JacquesFrancoisShadow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jacquesFrancoisShadowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jacquesFrancoisShadowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jaldiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jaldi/v6/or3sQ67z0_CI30NUZpD_B6g8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/jaldi/v6/or3hQ67z0_CI33voSbT3LLQ1niPn.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Jaldi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jaldiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jaldiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jimNightshadeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jimnightshade/v7/PlIkFlu9Pb08Q8HLM1PxmB0g-OS4V3qKaMxD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JimNightshade',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jimNightshadeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jimNightshadeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jockeyOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jockeyone/v9/HTxpL2g2KjCFj4x8WI6ArIb7HYOk4xc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JockeyOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jockeyOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jockeyOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jollyLodgerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jollylodger/v7/BXRsvFTAh_bGkA1uQ48dlB3VWerT3ZyuqA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JollyLodger',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jollyLodgerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jollyLodgerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jomhuriaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jomhuria/v7/Dxxp8j-TMXf-llKur2b1MOGbC3Dh.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Jomhuria',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jomhuriaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jomhuriaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jomolhariTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jomolhari/v1/EvONzA1M1Iw_CBd2hsQCF1IZKq5INg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Jomolhari',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jomolhariTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jomolhariTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle josefinSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3EZQNVED7rKGKxtqIqX5Ecbnx9Vnksi4M7.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3GZQNVED7rKGKxtqIqX5EUCEQZXH0OjpM75PE.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3FZQNVED7rKGKxtqIqX5Ecpl5dfFcggpoi_Q.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3HZQNVED7rKGKxtqIqX5EUCETRfl0koJ8y_eiS.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3aZQNVED7rKGKxtqIqX5EkCnZ5dHw8iw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3EZQNVED7rKGKxtqIqX5EUCHx9Vnksi4M7.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3FZQNVED7rKGKxtqIqX5Ec0lhdfFcggpoi_Q.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3HZQNVED7rKGKxtqIqX5EUCESleF0koJ8y_eiS.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3FZQNVED7rKGKxtqIqX5EctlldfFcggpoi_Q.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/josefinsans/v14/Qw3HZQNVED7rKGKxtqIqX5EUCETBeV0koJ8y_eiS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JosefinSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme josefinSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.josefinSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle josefinSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-nwjwOK3Ps5GSJlNNkMalvyQ6qBM7oPxMX.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-lwjwOK3Ps5GSJlNNkMalnrzbODsrKOgMX95A.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-mwjwOK3Ps5GSJlNNkMalvASyKLuDkNgoO7g.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-kwjwOK3Ps5GSJlNNkMalnrzYGLOrgFA8e7onu.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-5wjwOK3Ps5GSJlNNkMalXrQSuJsv4Pw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-nwjwOK3Ps5GSJlNNkMalnrw6qBM7oPxMX.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-mwjwOK3Ps5GSJlNNkMalvdSqKLuDkNgoO7g.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-kwjwOK3Ps5GSJlNNkMalnrzZyKurgFA8e7onu.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-mwjwOK3Ps5GSJlNNkMalvESuKLuDkNgoO7g.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/josefinslab/v10/lW-kwjwOK3Ps5GSJlNNkMalnrzYWK-rgFA8e7onu.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JosefinSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme josefinSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.josefinSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jotiOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jotione/v8/Z9XVDmdJQAmWm9TwaYTe4u2El6GC.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JotiOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jotiOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jotiOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle juaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jua/v8/co3KmW9ljjAjc-DZCsKgsg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Jua',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme juaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.juaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.juaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.juaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.juaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.juaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.juaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.juaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.juaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.juaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.juaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.juaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.juaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.juaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle judsonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/judson/v12/FeVRS0Fbvbc14VxRD7N01bV7kg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/judson/v12/FeVTS0Fbvbc14VxhDblw97BrknZf.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/judson/v12/FeVSS0Fbvbc14Vxps5xQ3Z5nm29Gww.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Judson',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme judsonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.judsonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.judsonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.judsonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.judsonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.judsonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.judsonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.judsonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.judsonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.judsonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.judsonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.judsonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.judsonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.judsonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle juleeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/julee/v9/TuGfUVB3RpZPQ6ZLodgzydtk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Julee',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme juleeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.juleeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.juleeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.juleeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.juleeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.juleeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.juleeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.juleeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.juleeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.juleeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.juleeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.juleeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.juleeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.juleeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle juliusSansOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/juliussansone/v8/1Pt2g8TAX_SGgBGUi0tGOYEga5W-xXEW6aGXHw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JuliusSansOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme juliusSansOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.juliusSansOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle jungeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/junge/v7/gokgH670Gl1lUqAdvhB7SnKm.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Junge',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme jungeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.jungeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.jungeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.jungeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.jungeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.jungeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.jungeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.jungeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.jungeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.jungeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.jungeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.jungeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.jungeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.jungeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle juraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/jura/v13/z7NOdRfiaC4Vd8hhoPzfb5vBTP0D7auhTfmrH_rt.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/jura/v13/z7NOdRfiaC4Vd8hhoPzfb5vBTP1d7auhTfmrH_rt.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/jura/v13/z7NOdRfiaC4Vd8hhoPzfb5vBTP1v7auhTfmrH_rt.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/jura/v13/z7NOdRfiaC4Vd8hhoPzfb5vBTP2D6quhTfmrH_rt.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/jura/v13/z7NOdRfiaC4Vd8hhoPzfb5vBTP266quhTfmrH_rt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Jura',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme juraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.juraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.juraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.juraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.juraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.juraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.juraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.juraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.juraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.juraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.juraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.juraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.juraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.juraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle justAnotherHandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/justanotherhand/v11/845CNN4-AJyIGvIou-6yJKyptyOpOcr_BmmlS5aw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JustAnotherHand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme justAnotherHandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.justAnotherHandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle justMeAgainDownHereTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/justmeagaindownhere/v11/MwQmbgXtz-Wc6RUEGNMc0QpRrfUh2hSdBBMoAuwHvqDwc_fg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'JustMeAgainDownHere',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme justMeAgainDownHereTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.justMeAgainDownHereTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle k2DTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/k2d/v3/J7aRnpF2V0ErE6UpvrIw74NL.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7afnpF2V0EjdZ1NtLYS6pNLAjk.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Erv4QJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ3hlZY4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Er24cJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ2FlpY4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/k2d/v3/J7aTnpF2V0ETd68tnLcg7w.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7aRnpF2V0EjdaUpvrIw74NL.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Erg4YJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ3dl5Y4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Err4EJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ3xkJY4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Ery4AJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ2VkZY4xJ9CGyAa.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/k2d/v3/J7aenpF2V0Er14MJlJw85ppSGw.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/k2d/v3/J7acnpF2V0EjdZ2JkpY4xJ9CGyAa.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'K2D',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme k2DTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.k2DTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.k2DTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.k2DTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.k2DTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.k2DTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.k2DTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.k2DTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.k2DTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.k2DTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.k2DTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.k2DTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.k2DTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.k2DTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kadwaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kadwa/v4/rnCm-x5V0g7iphTHRcc2s2XH.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kadwa/v4/rnCr-x5V0g7ipix7auM-mHnOSOuk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kadwa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kadwaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kadwaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kalamTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/kalam/v10/YA9Qr0Wd4kDdMtD6GgLLmCUItqGt.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kalam/v10/YA9dr0Wd4kDdMuhWMibDszkB.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kalam/v10/YA9Qr0Wd4kDdMtDqHQLLmCUItqGt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kalam',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kalamTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kalamTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kalamTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kalamTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kalamTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kalamTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kalamTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kalamTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kalamTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kalamTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kalamTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kalamTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kalamTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kalamTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kameronTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kameron/v10/vm82dR7vXErQxuznsL4wL-XIYH8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kameron/v10/vm8zdR7vXErQxuzniAIfC-3jfHb--NY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kameron',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kameronTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kameronTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kameronTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kameronTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kameronTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kameronTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kameronTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kameronTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kameronTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kameronTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kameronTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kameronTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kameronTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kameronTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kanitTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/kanit/v5/nKKX-Go6G5tXcr72GwWKcaxALFs.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKV-Go6G5tXcraQI2GAdY5FPFtrGw.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr5aOiWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI82hVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr4-OSWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI6miVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kanit/v5/nKKZ-Go6G5tXcoaSEQGodLxA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKX-Go6G5tXcraQGwWKcaxALFs.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr5mOCWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI_GjVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr5KPyWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI92kVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr4uPiWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI7mlVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr4yPSWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI6WmVaRrMFJyAu4.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/kanit/v5/nKKU-Go6G5tXcr4WPCWgX6BJNUJy.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/kanit/v5/nKKS-Go6G5tXcraQI4GnVaRrMFJyAu4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kanit',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kanitTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kanitTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kanitTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kanitTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kanitTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kanitTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kanitTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kanitTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kanitTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kanitTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kanitTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kanitTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kanitTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kanitTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kantumruyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/kantumruy/v7/syk0-yJ0m7wyVb-f4FOPUtDlpn-UJ1H6Uw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kantumruy/v7/sykx-yJ0m7wyVb-f4FO3_vjBrlSILg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kantumruy/v7/syk0-yJ0m7wyVb-f4FOPQtflpn-UJ1H6Uw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kantumruy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kantumruyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kantumruyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle karlaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/karla/v8/qkBbXvYC6trAT4RSJN225aZO.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/karla/v8/qkBVXvYC6trAT7RQLtmU4LZOgAU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/karla/v8/qkBWXvYC6trAT7zuC_m-zrpHmRzC.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/karla/v8/qkBQXvYC6trAT7RQFmW7xL5lnAzCKNg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Karla',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme karlaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.karlaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.karlaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.karlaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.karlaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.karlaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.karlaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.karlaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.karlaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.karlaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.karlaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.karlaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.karlaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.karlaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle karmaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/karma/v10/va9F4kzAzMZRGLjDY8Z_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/karma/v10/va9I4kzAzMZRGIBvS-J3kbDP.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/karma/v10/va9F4kzAzMZRGLibYsZ_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/karma/v10/va9F4kzAzMZRGLi3ZcZ_uqzGQC_-.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/karma/v10/va9F4kzAzMZRGLjTZMZ_uqzGQC_-.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Karma',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme karmaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.karmaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.karmaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.karmaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.karmaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.karmaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.karmaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.karmaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.karmaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.karmaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.karmaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.karmaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.karmaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.karmaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle katibehTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/katibeh/v7/ZGjXol5MQJog4bxDaC1RVDNdGDs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Katibeh',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme katibehTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.katibehTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.katibehTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.katibehTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.katibehTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.katibehTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.katibehTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.katibehTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.katibehTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.katibehTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.katibehTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.katibehTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.katibehTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.katibehTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kaushanScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kaushanscript/v8/vm8vdRfvXFLG3OLnsO15WYS5DF7_ytN3M48a.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KaushanScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kaushanScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kaushanScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kavivanarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kavivanar/v5/o-0IIpQgyXYSwhxP7_Jb4j5Ba_2c7A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kavivanar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kavivanarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kavivanarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kavoonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kavoon/v8/pxiFyp4_scRYhlU4NLr6f1pdEQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kavoon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kavoonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kavoonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kdamThmorTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kdamthmor/v7/MwQzbhjs3veF6QwJVf0JkGMViblPtXs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KdamThmor',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kdamThmorTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kdamThmorTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle keaniaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/keaniaone/v7/zOL54pXJk65E8pXardnuycRuv-hHkOs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KeaniaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme keaniaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.keaniaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kellySlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kellyslab/v10/-W_7XJX0Rz3cxUnJC5t6TkMBf50kbiM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KellySlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kellySlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kellySlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle keniaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kenia/v11/jizURE5PuHQH9qCONUGswfGM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kenia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme keniaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.keniaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.keniaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.keniaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.keniaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.keniaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.keniaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.keniaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.keniaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.keniaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.keniaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.keniaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.keniaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.keniaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle khandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/khand/v8/TwMN-IINQlQQ0bL5cFE3ZwaH__-C.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/khand/v8/TwMA-IINQlQQ0YpVWHU_TBqO.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/khand/v8/TwMN-IINQlQQ0bKhcVE3ZwaH__-C.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/khand/v8/TwMN-IINQlQQ0bKNdlE3ZwaH__-C.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/khand/v8/TwMN-IINQlQQ0bLpd1E3ZwaH__-C.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Khand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme khandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.khandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.khandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.khandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.khandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.khandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.khandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.khandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.khandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.khandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.khandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.khandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.khandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.khandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle khmerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/khmer/v12/MjQImit_vPPwpF-BpN2EeYmD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Khmer',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme khmerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.khmerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.khmerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.khmerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.khmerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.khmerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.khmerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.khmerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.khmerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.khmerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.khmerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.khmerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.khmerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.khmerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle khulaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/khula/v5/OpNPnoEOns3V7G-ljCvUrC59XwXD.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/khula/v5/OpNCnoEOns3V7FcJpA_chzJ0.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/khula/v5/OpNPnoEOns3V7G_RiivUrC59XwXD.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/khula/v5/OpNPnoEOns3V7G-1iyvUrC59XwXD.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/khula/v5/OpNPnoEOns3V7G-piCvUrC59XwXD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Khula',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme khulaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.khulaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.khulaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.khulaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.khulaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.khulaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.khulaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.khulaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.khulaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.khulaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.khulaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.khulaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.khulaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.khulaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kirangHaerangTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kiranghaerang/v8/E21-_dn_gvvIjhYON1lpIU4-bcqvWPaJq4no.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KirangHaerang',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kirangHaerangTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kirangHaerangTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kiteOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kiteone/v7/70lQu7shLnA_E02vyq1b6HnGO4uA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KiteOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kiteOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kiteOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle knewaveTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/knewave/v8/sykz-yx0lLcxQaSItSq9-trEvlQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Knewave',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme knewaveTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.knewaveTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle koHoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/koho/v3/K2FxfZ5fmddNPuE1WJ75JoKhHys.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FzfZ5fmddNNisssJ_zIqCkDyvqZA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/koho/v3/K2FxfZ5fmddNPoU2WJ75JoKhHys.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FzfZ5fmddNNiss1JzzIqCkDyvqZA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/koho/v3/K2F-fZ5fmddNBikefJbSOos.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FwfZ5fmddNNisUeLTXKou4Bg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/koho/v3/K2FxfZ5fmddNPt03WJ75JoKhHys.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FzfZ5fmddNNissjJ3zIqCkDyvqZA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/koho/v3/K2FxfZ5fmddNPvEwWJ75JoKhHys.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FzfZ5fmddNNissoJrzIqCkDyvqZA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/koho/v3/K2FxfZ5fmddNPpUxWJ75JoKhHys.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/koho/v3/K2FzfZ5fmddNNissxJvzIqCkDyvqZA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KoHo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme koHoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.koHoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.koHoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.koHoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.koHoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.koHoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.koHoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.koHoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.koHoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.koHoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.koHoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.koHoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.koHoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.koHoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kodchasanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX0aUPOAJv9sG4I-DJeR1Cggeqo3eMeoA.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXqaUPOAJv9sG4I-DJWjUlIgOCs_-YOoIgN.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX0aUPOAJv9sG4I-DJeI1Oggeqo3eMeoA.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXqaUPOAJv9sG4I-DJWjUksg-Cs_-YOoIgN.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXxaUPOAJv9sG4I-DJmj3uEicG01A.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX3aUPOAJv9sG4I-DJWjXGAq8Sk1PoH.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX0aUPOAJv9sG4I-DJee1Kggeqo3eMeoA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXqaUPOAJv9sG4I-DJWjUl0guCs_-YOoIgN.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX0aUPOAJv9sG4I-DJeV1Wggeqo3eMeoA.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXqaUPOAJv9sG4I-DJWjUlYheCs_-YOoIgN.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cX0aUPOAJv9sG4I-DJeM1Sggeqo3eMeoA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/kodchasan/v3/1cXqaUPOAJv9sG4I-DJWjUk8hOCs_-YOoIgN.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kodchasan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kodchasanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kodchasanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kosugiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kosugi/v6/pxiFyp4_v8FCjlI4NLr6f1pdEQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kosugi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kosugiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kosugiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kosugiMaruTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kosugimaru/v6/0nksC9PgP_wGh21A2KeqGiTqivr9iBq_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KosugiMaru',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kosugiMaruTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kosugiMaruTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kottaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kottaone/v7/S6u_w41LXzPc_jlfNWqPHA3s5dwt7w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KottaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kottaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kottaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle koulenTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/koulen/v13/AMOQz46as3KIBPeWgnA9kuYMUg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Koulen',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme koulenTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.koulenTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.koulenTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.koulenTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.koulenTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.koulenTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.koulenTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.koulenTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.koulenTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.koulenTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.koulenTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.koulenTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.koulenTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.koulenTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle krankyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kranky/v10/hESw6XVgJzlPsFnMpheEZo_H_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kranky',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme krankyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.krankyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.krankyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.krankyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.krankyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.krankyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.krankyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.krankyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.krankyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.krankyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.krankyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.krankyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.krankyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.krankyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kreonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/kreon/v21/t5t9IRIUKY-TFF_LW5lnMR3v2DnvPNimejUfp2dWNg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kreon/v21/t5t9IRIUKY-TFF_LW5lnMR3v2DnvYtimejUfp2dWNg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/kreon/v21/t5t9IRIUKY-TFF_LW5lnMR3v2DnvUNimejUfp2dWNg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/kreon/v21/t5t9IRIUKY-TFF_LW5lnMR3v2DnvvN-mejUfp2dWNg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/kreon/v21/t5t9IRIUKY-TFF_LW5lnMR3v2Dnvhd-mejUfp2dWNg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kreon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kreonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kreonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kreonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kreonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kreonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kreonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kreonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kreonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kreonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kreonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kreonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kreonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kreonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kreonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kristiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kristi/v11/uK_y4ricdeU6zwdRCh0TMv6EXw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kristi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kristiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kristiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kristiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kristiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kristiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kristiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kristiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kristiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kristiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kristiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kristiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kristiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kristiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kristiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kronaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kronaone/v8/jAnEgHdjHcjgfIb1ZcUCMY-h3cWkWg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KronaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kronaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kronaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle krubTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/krub/v3/sZlEdRyC6CRYZo47KLF4R6gWaf8.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlGdRyC6CRYbkQiwLByQ4oTef_6gQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/krub/v3/sZlEdRyC6CRYZuo4KLF4R6gWaf8.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlGdRyC6CRYbkQipLNyQ4oTef_6gQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/krub/v3/sZlLdRyC6CRYXkYQDLlTW6E.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlFdRyC6CRYbkQaCJtWS6EPcA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/krub/v3/sZlEdRyC6CRYZrI5KLF4R6gWaf8.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlGdRyC6CRYbkQi_LJyQ4oTef_6gQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/krub/v3/sZlEdRyC6CRYZp4-KLF4R6gWaf8.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlGdRyC6CRYbkQi0LVyQ4oTef_6gQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/krub/v3/sZlEdRyC6CRYZvo_KLF4R6gWaf8.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/krub/v3/sZlGdRyC6CRYbkQitLRyQ4oTef_6gQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Krub',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme krubTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.krubTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.krubTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.krubTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.krubTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.krubTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.krubTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.krubTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.krubTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.krubTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.krubTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.krubTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.krubTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.krubTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kumarOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kumarone/v4/bMr1mS-P958wYi6YaGeGNO6WU3oT0g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KumarOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kumarOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kumarOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kumarOneOutlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kumaroneoutline/v5/Noao6VH62pyLP0fsrZ-v18wlUEcX9zDwRQu8EGKF.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'KumarOneOutline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kumarOneOutlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kumarOneOutlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle kuraleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/kurale/v5/4iCs6KV9e9dXjho6eAT3v02QFg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Kurale',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme kuraleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.kuraleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle laBelleAuroreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/labelleaurore/v10/RrQIbot8-mNYKnGNDkWlocovHeIIG-eFNVmULg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LaBelleAurore',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme laBelleAuroreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.laBelleAuroreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lacquerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lacquer/v1/EYqzma1QwqpG4_BBB7-AXhttQ5I.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lacquer',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lacquerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lacquerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lailaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/laila/v6/LYjBdG_8nE8jDLzxogNAh14nVcfe.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/laila/v6/LYjMdG_8nE8jDIRdiidIrEIu.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/laila/v6/LYjBdG_8nE8jDLypowNAh14nVcfe.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/laila/v6/LYjBdG_8nE8jDLyFpANAh14nVcfe.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/laila/v6/LYjBdG_8nE8jDLzhpQNAh14nVcfe.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Laila',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lailaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lailaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lailaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lailaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lailaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lailaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lailaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lailaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lailaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lailaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lailaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lailaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lailaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lailaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lakkiReddyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lakkireddy/v6/S6u5w49MUSzD9jlCPmvLZQfox9k97-xZ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LakkiReddy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lakkiReddyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lakkiReddyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lalezarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lalezar/v6/zrfl0HLVx-HwTP82UaDyIiL0RCg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lalezar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lalezarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lalezarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lancelotTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lancelot/v9/J7acnppxBGtQEulG4JY4xJ9CGyAa.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lancelot',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lancelotTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lancelotTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lateefTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lateef/v15/hESw6XVnNCxEvkbMpheEZo_H_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lateef',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lateefTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lateefTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lateefTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lateefTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lateefTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lateefTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lateefTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lateefTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lateefTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lateefTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lateefTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lateefTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lateefTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lateefTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle latoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/lato/v16/S6u8w4BMUTPHh30wWyWrFCbw7A.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/lato/v16/S6u-w4BMUTPHjxsIPy-vNiPg7MU0.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh7USew-FGC_p9dw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/lato/v16/S6u_w4BMUTPHjxsI9w2PHA3s5dwt7w.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHvxk6XweuBCY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/lato/v16/S6u8w4BMUTPHjxswWyWrFCbw7A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh6UVew-FGC_p9dw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/lato/v16/S6u_w4BMUTPHjxsI5wqPHA3s5dwt7w.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh50Xew-FGC_p9dw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/lato/v16/S6u_w4BMUTPHjxsI3wiPHA3s5dwt7w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lato',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme latoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.latoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.latoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.latoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.latoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.latoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.latoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.latoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.latoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.latoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.latoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.latoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.latoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.latoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle leagueScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/leaguescript/v11/CSR54zpSlumSWj9CGVsoBZdeaNNUuOwkC2s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LeagueScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme leagueScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.leagueScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle leckerliOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/leckerlione/v10/V8mCoQH8VCsNttEnxnGQ-1itLZxcBtItFw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LeckerliOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme leckerliOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.leckerliOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ledgerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ledger/v7/j8_q6-HK1L3if_sxm8DwHTBhHw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ledger',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ledgerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ledgerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lektonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lekton/v10/SZc43FDmLaWmWpBeXxfonUPL6Q.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/lekton/v10/SZc63FDmLaWmWpBuXR3sv0bb6StO.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lekton/v10/SZc73FDmLaWmWpBm4zjMlWjX4DJXgQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lekton',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lektonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lektonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lektonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lektonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lektonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lektonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lektonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lektonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lektonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lektonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lektonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lektonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lektonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lektonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lemonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lemon/v8/HI_EiYEVKqRMq0jBSZXAQ4-d.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lemon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lemonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lemonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lemonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lemonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lemonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lemonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lemonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lemonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lemonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lemonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lemonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lemonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lemonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lemonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lemonadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/lemonada/v7/0QIkMXFD9oygTWy_R8PindGu2bje-RpH.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lemonada/v7/0QIjMXFD9oygTWy_R_tOtfWm8qTX.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/lemonada/v7/0QIkMXFD9oygTWy_R8OWm9Gu2bje-RpH.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lemonada/v7/0QIkMXFD9oygTWy_R8PymtGu2bje-RpH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lemonada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lemonadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lemonadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendDecaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexenddeca/v1/K2F1fZFYk-dHSE0UPPuwQ6qgLS76ZHOM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendDeca',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendDecaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendDecaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendExaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendexa/v1/UMBXrPdOoHOnxExyjdBeWirXArM58BY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendExa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendExaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendExaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendGigaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendgiga/v1/PlI5Fl67Mah5Y8yMHE7lkVxEt8CwfGaD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendGiga',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendGigaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendGigaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendMegaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendmega/v1/qFdA35aBi5JtHD41zSTFEv7K6BsAikI7.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendMega',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendMegaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendMegaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendPetaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendpeta/v1/BXRvvFPGjeLPh0kCfI4OkE_1c8Tf1IW3.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendPeta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendPetaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendPetaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendTeraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendtera/v1/RrQUbo98_jt_IXnBPwCWtZhARYMgGtWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendTera',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendTeraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendTeraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lexendZettaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lexendzetta/v1/ll87K2KYXje7CdOFnEWcU8soliQejRR7AQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LexendZetta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lexendZettaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lexendZettaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode128TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode128/v9/cIfnMbdUsUoiW3O_hVviCwVjuLtXeJ_A_gMk0izH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode128',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode128TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode128TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode128TextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode128text/v9/fdNv9tubt3ZEnz1Gu3I4-zppwZ9CWZ16Z0w5cV3Y6M90w4k.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode128Text',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode128TextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode128TextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode39TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode39/v9/-nFnOHM08vwC6h8Li1eQnP_AHzI2K_d709jy92k.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode39',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode39TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode39TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode39ExtendedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode39extended/v8/8At7Gt6_O5yNS0-K4Nf5U922qSzhJ3dUdfJpwNUgfNRCOZ1GOBw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode39Extended',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode39ExtendedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode39ExtendedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode39ExtendedTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode39extendedtext/v8/eLG1P_rwIgOiDA7yrs9LoKaYRVLQ1YldrrOnnL7xPO4jNP68fLIiPopNNA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode39ExtendedText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode39ExtendedTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode39ExtendedTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBarcode39TextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebarcode39text/v9/sJoa3KhViNKANw_E3LwoDXvs5Un0HQ1vT-031RRL-9rYaw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBarcode39Text',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBarcode39TextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBarcode39TextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreBaskervilleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librebaskerville/v7/kmKnZrc3Hgbbcjq75U4uslyuy4kn0pNeYRI4CN2V.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/librebaskerville/v7/kmKhZrc3Hgbbcjq75U4uslyuy4kn0qNcaxYaDc2V2ro.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/librebaskerville/v7/kmKiZrc3Hgbbcjq75U4uslyuy4kn0qviTjYwI8Gcw6Oi.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreBaskerville',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreBaskervilleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreBaskervilleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreCaslonDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librecaslondisplay/v1/TuGOUUFxWphYQ6YI6q9Xp61FQzxDRKmzr2lRdRhtCC4d.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreCaslonDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreCaslonDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreCaslonDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreCaslonTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librecaslontext/v1/DdT878IGsGw1aF1JU10PUbTvNNaDMcq_3eNrHgO1.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/librecaslontext/v1/DdT678IGsGw1aF1JU10PUbTvNNaDMfq91-dJGxO1q9o.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/librecaslontext/v1/DdT578IGsGw1aF1JU10PUbTvNNaDMfID8sdjNR-8ssPt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreCaslonText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreCaslonTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreCaslonTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle libreFranklinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizBREVItHgc8qDIbSTKq4XkRi182zIZj1bIkNo.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizHREVItHgc8qDIbSTKq4XkRiUa41YTi3TNgNq55w.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi3Q-hIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa4_oyq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi20-RIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa454xq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizDREVItHgc8qDIbSTKq4XkRhUY0TY7ikbI.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizBREVItHgc8qDIbSTKq4XkRiUa2zIZj1bIkNo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi3s-BIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa48Ywq17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi3A_xIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa4-o3q17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi2k_hIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa4442q17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi24_RIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa45I1q17jjNOg_oc.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizAREVItHgc8qDIbSTKq4XkRi2c_BIzoVrBicOg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/librefranklin/v4/jizGREVItHgc8qDIbSTKq4XkRiUa47Y0q17jjNOg_oc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LibreFranklin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme libreFranklinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.libreFranklinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lifeSaversTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lifesavers/v10/ZXuie1UftKKabUQMgxAal_lrFgpbuNvB.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lifesavers/v10/ZXu_e1UftKKabUQMgxAal8HXOS5Tk8fIpPRW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/lifesavers/v10/ZXu_e1UftKKabUQMgxAal8HLOi5Tk8fIpPRW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LifeSavers',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lifeSaversTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lifeSaversTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lilitaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lilitaone/v7/i7dPIFZ9Zz-WBtRtedDbUEZ2RFq7AwU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LilitaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lilitaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lilitaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lilyScriptOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lilyscriptone/v7/LhW9MV7ZMfIPdMxeBjBvFN8SXLS4gsSjQNsRMg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LilyScriptOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lilyScriptOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lilyScriptOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle limelightTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/limelight/v10/XLYkIZL7aopJVbZJHDuYPeNGrnY2TA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Limelight',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme limelightTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.limelightTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.limelightTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.limelightTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.limelightTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.limelightTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.limelightTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.limelightTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.limelightTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.limelightTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.limelightTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.limelightTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.limelightTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.limelightTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lindenHillTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lindenhill/v9/-F61fjxoKSg9Yc3hZgO8ygFI7CwC009k.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/lindenhill/v9/-F63fjxoKSg9Yc3hZgO8yjFK5igg1l9kn-s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LindenHill',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lindenHillTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lindenHillTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle literataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/literata/v14/or38Q6P12-iJxAIgLa78DkTtAoDhk0oVpaLVa5RXzC1KOw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/literata/v14/or38Q6P12-iJxAIgLa78DkTtAoDhk0oVl6LVa5RXzC1KOw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/literata/v14/or38Q6P12-iJxAIgLa78DkTtAoDhk0oVe6XVa5RXzC1KOw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/literata/v14/or38Q6P12-iJxAIgLa78DkTtAoDhk0oVQqXVa5RXzC1KOw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/literata/v14/or3yQ6P12-iJxAIgLYT1PLs1a-t7PU0AbeE9KJ5T7ihaO_CS.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/literata/v14/or3yQ6P12-iJxAIgLYT1PLs1a-t7PU0AbeEPKJ5T7ihaO_CS.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/literata/v14/or3yQ6P12-iJxAIgLYT1PLs1a-t7PU0AbeHjL55T7ihaO_CS.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/literata/v14/or3yQ6P12-iJxAIgLYT1PLs1a-t7PU0AbeHaL55T7ihaO_CS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Literata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme literataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.literataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.literataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.literataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.literataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.literataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.literataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.literataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.literataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.literataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.literataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.literataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.literataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.literataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle liuJianMaoCaoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/liujianmaocao/v5/845DNN84HJrccNonurqXILGpvCOoferVKGWsUo8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LiuJianMaoCao',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme liuJianMaoCaoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.liuJianMaoCaoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle livvicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/livvic/v3/rnCr-x1S2hzjrlffC-M-mHnOSOuk.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCt-x1S2hzjrlfXbdtakn3sTfukQHs.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlffp8IeslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbdv2s13GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlffw8EeslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbduSsF3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/livvic/v3/rnCp-x1S2hzjrlfnb-k6unzeSA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCr-x1S2hzjrlfXbeM-mHnOSOuk.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlffm8AeslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbdvKsV3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlfft8ceslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbdvmtl3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlff08YeslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbduCt13GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/livvic/v3/rnCq-x1S2hzjrlff68QeslfCQfK9WQ.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/livvic/v3/rnCs-x1S2hzjrlfXbdu6tV3GY_etWWIJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Livvic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme livvicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.livvicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.livvicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.livvicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.livvicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.livvicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.livvicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.livvicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.livvicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.livvicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.livvicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.livvicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.livvicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.livvicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lobsterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lobster/v22/neILzCirqoswsqX9_oWsMqEzSJQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lobster',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lobsterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lobsterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lobsterTwoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lobstertwo/v12/BngMUXZGTXPUvIoyV6yN59fK7KSJ4ACD.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/lobstertwo/v12/BngOUXZGTXPUvIoyV6yN5-fI5qCr5RCDY_k.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lobstertwo/v12/BngRUXZGTXPUvIoyV6yN5-92w4CByxyKeuDp.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/lobstertwo/v12/BngTUXZGTXPUvIoyV6yN5-fI3hyEwRiof_DpXMY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LobsterTwo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lobsterTwoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lobsterTwoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle londrinaOutlineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/londrinaoutline/v10/C8c44dM8vmb14dfsZxhetg3pDH-SfuoxrSKMDvI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LondrinaOutline',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme londrinaOutlineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.londrinaOutlineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle londrinaShadowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/londrinashadow/v9/oPWX_kB4kOQoWNJmjxLV5JuoCUlXRlaSxkrMCQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LondrinaShadow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme londrinaShadowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.londrinaShadowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle londrinaSketchTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/londrinasketch/v8/c4m41npxGMTnomOHtRU68eIJn8qfWWn5Pos6CA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LondrinaSketch',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme londrinaSketchTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.londrinaSketchTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle londrinaSolidTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/londrinasolid/v9/flUjRq6sw40kQEJxWNgkLuudGfs9KBYesZHhV64.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/londrinasolid/v9/flUiRq6sw40kQEJxWNgkLuudGfv1CjY0n53oTrcL.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/londrinasolid/v9/flUhRq6sw40kQEJxWNgkLuudGcNZIhI8tIHh.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/londrinasolid/v9/flUiRq6sw40kQEJxWNgkLuudGfvdDzY0n53oTrcL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LondrinaSolid',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme londrinaSolidTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.londrinaSolidTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle longCangTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/longcang/v5/LYjAdGP8kkgoTec8zkRgrXArXN7HWQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LongCang',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme longCangTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.longCangTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.longCangTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.longCangTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.longCangTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.longCangTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.longCangTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.longCangTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.longCangTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.longCangTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.longCangTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.longCangTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.longCangTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.longCangTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle loraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lora/v14/0QIvMX1D_JOuAw3xItNPh_A.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/lora/v14/0QIhMX1D_JOuMw_7JvFKl_C28g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lora/v14/0QIgMX1D_JOuO7HeBttkm_mv670.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/lora/v14/0QIiMX1D_JOuMw_Dmt5un9uq-73O-Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lora',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme loraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.loraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.loraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.loraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.loraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.loraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.loraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.loraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.loraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.loraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.loraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.loraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.loraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.loraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle loveYaLikeASisterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/loveyalikeasister/v10/R70EjzUBlOqPeouhFDfR80-0FhOqJubN-Be78nZcsGGycA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LoveYaLikeASister',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme loveYaLikeASisterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.loveYaLikeASisterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lovedbytheKingTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lovedbytheking/v9/Gw6gwdP76VDVJNXerebZxUMeRXUF2PiNlXFu2R64.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LovedbytheKing',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lovedbytheKingTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lovedbytheKingTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle loversQuarrelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/loversquarrel/v7/Yq6N-LSKXTL-5bCy8ksBzpQ_-zAsY7pO6siz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LoversQuarrel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme loversQuarrelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.loversQuarrelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle luckiestGuyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/luckiestguy/v10/_gP_1RrxsjcxVyin9l9n_j2RStR3qDpraA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'LuckiestGuy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme luckiestGuyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.luckiestGuyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lusitanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lusitana/v7/CSR84z9ShvucWzsMKxhaRuMiSct_.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/lusitana/v7/CSR74z9ShvucWzsMKyDmaccqYtd2vfwk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lusitana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lusitanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lusitanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle lustriaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/lustria/v7/9oRONYodvDEyjuhOrCg5MtPyAcg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Lustria',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme lustriaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.lustriaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mPLUS1pTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tleuShHdiFyPFzBRrQnDQAUW3aq-5N.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tmeuShHdiFyPFzBRrQVBYge0PWovdU4w.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tjeuShHdiFyPFzBRro-D4Ec2jKqw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tmeuShHdiFyPFzBRrQDBcge0PWovdU4w.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tmeuShHdiFyPFzBRrQRBEge0PWovdU4w.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tmeuShHdiFyPFzBRrQWBIge0PWovdU4w.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/mplus1p/v19/e3tmeuShHdiFyPFzBRrQfBMge0PWovdU4w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MPLUS1p',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mPLUS1pTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mPLUS1pTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mPLUSRounded1cTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGCAYIAV6gnpUpoWwNkYvrugw9RuM3ixLsg6-av1x0.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGBAYIAV6gnpUpoWwNkYvrugw9RuM0q5psKxeqmzgRK.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGEAYIAV6gnpUpoWwNkYvrugw9RuPWGzr8C7vav.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGBAYIAV6gnpUpoWwNkYvrugw9RuM1y55sKxeqmzgRK.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGBAYIAV6gnpUpoWwNkYvrugw9RuM064ZsKxeqmzgRK.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGBAYIAV6gnpUpoWwNkYvrugw9RuM0m4psKxeqmzgRK.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/mplusrounded1c/v10/VdGBAYIAV6gnpUpoWwNkYvrugw9RuM0C45sKxeqmzgRK.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MPLUSRounded1c',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mPLUSRounded1cTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mPLUSRounded1cTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle maShanZhengTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mashanzheng/v5/NaPecZTRCLxvwo41b4gvzkXaRMTsDIRSfr0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MaShanZheng',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme maShanZhengTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.maShanZhengTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle macondoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/macondo/v8/RrQQboN9-iB1IXmOS2XO0LBBd4Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Macondo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme macondoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.macondoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.macondoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.macondoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.macondoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.macondoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.macondoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.macondoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.macondoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.macondoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.macondoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.macondoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.macondoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.macondoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle macondoSwashCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/macondoswashcaps/v7/6NUL8EaAJgGKZA7lpt941Z9s6ZYgDq6Oekoa_mm5bA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MacondoSwashCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme macondoSwashCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.macondoSwashCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle madaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSdf3nCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSdZnkCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mada/v8/7Auwp_0qnzeSTTXMLCrX0kU.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSdcHlCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSde3iCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSdYnjCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/mada/v8/7Au_p_0qnzeSdbHhCCL8zkwMIFg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme madaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.madaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.madaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.madaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.madaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.madaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.madaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.madaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.madaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.madaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.madaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.madaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.madaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.madaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle magraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/magra/v8/uK_94ruaZus72k5xIDMfO-ed.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/magra/v8/uK_w4ruaZus72nbNDxcXEPuUX1ow.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Magra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme magraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.magraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.magraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.magraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.magraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.magraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.magraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.magraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.magraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.magraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.magraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.magraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.magraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.magraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle maidenOrangeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/maidenorange/v10/kJE1BuIX7AUmhi2V4m08kb1XjOZdCZS8FY8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MaidenOrange',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme maidenOrangeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.maidenOrangeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle maitreeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/maitree/v4/MjQDmil5tffhpBrklhGNWJGovLdh6OE.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/maitree/v4/MjQDmil5tffhpBrklnWOWJGovLdh6OE.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/maitree/v4/MjQGmil5tffhpBrkrtmmfJmDoL4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/maitree/v4/MjQDmil5tffhpBrkli2PWJGovLdh6OE.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/maitree/v4/MjQDmil5tffhpBrklgGIWJGovLdh6OE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/maitree/v4/MjQDmil5tffhpBrklmWJWJGovLdh6OE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Maitree',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme maitreeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.maitreeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle majorMonoDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/majormonodisplay/v3/RWmVoLyb5fEqtsfBX9PDZIGr2tFubRhLCn2QIndPww.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MajorMonoDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme majorMonoDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.majorMonoDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle makoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mako/v11/H4coBX6Mmc_Z0ST09g478Lo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mako',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme makoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.makoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.makoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.makoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.makoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.makoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.makoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.makoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.makoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.makoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.makoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.makoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.makoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.makoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle maliTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/mali/v3/N0bV2SRONuN4QOLlKlRaJdbWgdY.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bX2SRONuN4SCj8wlVQIfTTkdbJYA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mali/v3/N0bV2SRONuN4QIbmKlRaJdbWgdY.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bX2SRONuN4SCj8plZQIfTTkdbJYA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mali/v3/N0ba2SRONuN4eCrODlxxOd8.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bU2SRONuN4SCjECn50Kd_PmA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mali/v3/N0bV2SRONuN4QN7nKlRaJdbWgdY.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bX2SRONuN4SCj8_ldQIfTTkdbJYA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/mali/v3/N0bV2SRONuN4QPLgKlRaJdbWgdY.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bX2SRONuN4SCj80lBQIfTTkdbJYA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mali/v3/N0bV2SRONuN4QJbhKlRaJdbWgdY.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/mali/v3/N0bX2SRONuN4SCj8tlFQIfTTkdbJYA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mali',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme maliTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.maliTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.maliTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.maliTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.maliTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.maliTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.maliTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.maliTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.maliTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.maliTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.maliTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.maliTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.maliTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.maliTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mallannaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mallanna/v7/hv-Vlzx-KEQb84YaDGwzEzRwVvJ-.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mallanna',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mallannaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mallannaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mandaliTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mandali/v8/LhWlMVbYOfASNfNUVFk1ZPdcKtA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mandali',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mandaliTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mandaliTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle manjariTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/manjari/v2/k3kSo8UPMOBO2w1UdbroK2vFIaOV8A.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/manjari/v2/k3kQo8UPMOBO2w1UTd7iL0nAMaM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/manjari/v2/k3kVo8UPMOBO2w1UdWLNC0HrLaqM6Q4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Manjari',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme manjariTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.manjariTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.manjariTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.manjariTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.manjariTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.manjariTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.manjariTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.manjariTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.manjariTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.manjariTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.manjariTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.manjariTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.manjariTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.manjariTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mansalvaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mansalva/v1/aWB4m0aacbtDfvq5NJllI47vdyBg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mansalva',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mansalvaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mansalvaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle manualeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/manuale/v4/f0X20eas_8Z-TFZdBPbEw8nG6aY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/manuale/v4/f0X00eas_8Z-TFZdNPTOx-vD-aYfeA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xz0eas_8Z-TFZdPALt58Ht9a8GYeA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xx0eas_8Z-TFZdNPT2M8Ln8Y0DceA0OQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xz0eas_8Z-TFZdPC7q58Ht9a8GYeA.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xx0eas_8Z-TFZdNPT2H8Xn8Y0DceA0OQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xz0eas_8Z-TFZdPErr58Ht9a8GYeA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/manuale/v4/f0Xx0eas_8Z-TFZdNPT2e8Tn8Y0DceA0OQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Manuale',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme manualeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.manualeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.manualeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.manualeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.manualeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.manualeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.manualeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.manualeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.manualeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.manualeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.manualeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.manualeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.manualeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.manualeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle marcellusTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/marcellus/v7/wEO_EBrOk8hQLDvIAF8FUfAL3EsHiA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Marcellus',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme marcellusTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.marcellusTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle marcellusSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/marcellussc/v7/ke8iOgUHP1dg-Rmi6RWjbLEPgdydGKikhA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MarcellusSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme marcellusSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.marcellusSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle marckScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/marckscript/v10/nwpTtK2oNgBA3Or78gapdwuCzyI-aMPF7Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MarckScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme marckScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.marckScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle margarineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/margarine/v8/qkBXXvoE6trLT9Y7YLye5JRLkAXbMQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Margarine',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme margarineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.margarineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.margarineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.margarineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.margarineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.margarineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.margarineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.margarineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.margarineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.margarineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.margarineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.margarineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.margarineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.margarineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle markaziTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/markazitext/v10/sykh-ydym6AtQaiEtX7yhqb_rV1k_81ZVYYZtfSQT4MlBekmJLo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/markazitext/v10/sykh-ydym6AtQaiEtX7yhqb_rV1k_81ZVYYZtcaQT4MlBekmJLo.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/markazitext/v10/sykh-ydym6AtQaiEtX7yhqb_rV1k_81ZVYYZtSqXT4MlBekmJLo.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/markazitext/v10/sykh-ydym6AtQaiEtX7yhqb_rV1k_81ZVYYZtROXT4MlBekmJLo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MarkaziText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme markaziTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.markaziTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle markoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/markoone/v9/9Btq3DFG0cnVM5lw1haaKpUfrHPzUw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MarkoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme markoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.markoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle marmeladTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/marmelad/v9/Qw3eZQdSHj_jK2e-8tFLG-YMC0R8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Marmelad',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme marmeladTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.marmeladTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle martelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XVqekahRbX9vnDzw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XVzeoahRbX9vnDzw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/martel/v4/PN_xRfK9oXHga0XtYcI-jT3L_w.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XVuewahRbX9vnDzw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XV3e0ahRbX9vnDzw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XVwe4ahRbX9vnDzw.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/martel/v4/PN_yRfK9oXHga0XV5e8ahRbX9vnDzw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Martel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme martelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.martelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.martelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.martelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.martelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.martelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.martelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.martelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.martelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.martelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.martelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.martelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.martelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.martelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle martelSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hAX5suHFUknqMxQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hBz5cuHFUknqMxQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GsssGi7VdzDgKjM-4d8ijfze-PPlUu.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hAH48uHFUknqMxQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hBj4suHFUknqMxQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hB_4cuHFUknqMxQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/martelsans/v6/h0GxssGi7VdzDgKjM-4d8hBb4MuHFUknqMxQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MartelSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme martelSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.martelSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle marvelTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/marvel/v9/nwpVtKeoNgBV0qaIkV7ED366zg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/marvel/v9/nwpXtKeoNgBV0qa4k1TALXuqzhA7.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/marvel/v9/nwpWtKeoNgBV0qawLXHgB1WmxwkiYQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/marvel/v9/nwpQtKeoNgBV0qa4k2x8Al-i5QwyYdrc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Marvel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme marvelTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.marvelTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.marvelTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.marvelTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.marvelTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.marvelTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.marvelTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.marvelTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.marvelTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.marvelTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.marvelTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.marvelTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.marvelTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.marvelTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mateTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mate/v8/m8JdjftRd7WZ2z28WoXSaLU.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/mate/v8/m8JTjftRd7WZ6z-2XqfXeLVdbw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mate',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mateTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mateTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mateTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mateTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mateTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mateTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mateTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mateTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mateTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mateTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mateTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mateTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mateTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mateTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mateSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/matesc/v8/-nF8OGQ1-uoVr2wKyiXZ95OkJwA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MateSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mateSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mateSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mavenProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mavenpro/v13/7Au9p_AqnyWWAxW2Wk32ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mavenpro/v13/7Au4p_AqnyWWAxW2Wk3OPkctOHMC21go8A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mavenpro/v13/7Au4p_AqnyWWAxW2Wk3OdkEtOHMC21go8A.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/mavenpro/v13/7Au4p_AqnyWWAxW2Wk3OTkMtOHMC21go8A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MavenPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mavenProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mavenProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mcLarenTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mclaren/v7/2EbnL-ZuAXFqZFXISYYf8z2Yt_c.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'McLaren',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mcLarenTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mcLarenTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle meddonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/meddon/v12/kmK8ZqA2EgDNeHTZhBdB3y_Aow.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Meddon',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme meddonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.meddonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.meddonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.meddonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.meddonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.meddonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.meddonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.meddonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.meddonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.meddonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.meddonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.meddonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.meddonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.meddonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle medievalSharpTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/medievalsharp/v12/EvOJzAlL3oU5AQl2mP5KdgptAq96MwvXLDk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MedievalSharp',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme medievalSharpTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.medievalSharpTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle medulaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/medulaone/v9/YA9Wr0qb5kjJM6l2V0yukiEqs7GtlvY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MedulaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme medulaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.medulaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle meeraInimaiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/meerainimai/v4/845fNMM5EIqOW5MPuvO3ILep_2jDVevnLQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MeeraInimai',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme meeraInimaiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.meeraInimaiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle megrimTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/megrim/v10/46kulbz5WjvLqJZlbWXgd0RY1g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Megrim',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme megrimTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.megrimTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.megrimTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.megrimTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.megrimTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.megrimTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.megrimTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.megrimTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.megrimTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.megrimTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.megrimTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.megrimTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.megrimTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.megrimTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle meieScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/meiescript/v7/_LOImzDK7erRjhunIspaMjxn5IXg0WDz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MeieScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme meieScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.meieScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle meriendaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/merienda/v8/gNMHW3x8Qoy5_mf8uVMCOou6_dvg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/merienda/v8/gNMAW3x8Qoy5_mf8uWu-Fa-y1sfpPES4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Merienda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme meriendaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.meriendaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle meriendaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/meriendaone/v10/H4cgBXaMndbflEq6kyZ1ht6YgoyyYzFzFw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MeriendaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme meriendaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.meriendaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle merriweatherTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4n0qyriQwlOrhSvowK_l521wRpX837pvjxPA.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4l0qyriQwlOrhSvowK_l5-eR7lXcf_hP3hPGWH.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/merriweather/v21/u-440qyriQwlOrhSvowK_l5OeyxNV-bnrw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4m0qyriQwlOrhSvowK_l5-eSZJdeP3r-Ho.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4n0qyriQwlOrhSvowK_l52xwNpX837pvjxPA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4l0qyriQwlOrhSvowK_l5-eR71Wsf_hP3hPGWH.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4n0qyriQwlOrhSvowK_l52_wFpX837pvjxPA.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/merriweather/v21/u-4l0qyriQwlOrhSvowK_l5-eR7NWMf_hP3hPGWH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Merriweather',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme merriweatherTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.merriweatherTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle merriweatherSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c49IRs1JiJN1FRAMjTN5zd9vgsFH1eYBDD2BdWzIqY.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c29IRs1JiJN1FRAMjTN5zd9vgsFHXwepzB0hN0yZqYcqw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c99IRs1JiJN1FRAMjTN5zd9vgsFEXySDTL8wtf.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c79IRs1JiJN1FRAMjTN5zd9vgsFHXwQjDp9htf1ZM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c49IRs1JiJN1FRAMjTN5zd9vgsFH1OZxDD2BdWzIqY.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c29IRs1JiJN1FRAMjTN5zd9vgsFHXweozG0hN0yZqYcqw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c49IRs1JiJN1FRAMjTN5zd9vgsFH1SZBDD2BdWzIqY.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/merriweathersans/v11/2-c29IRs1JiJN1FRAMjTN5zd9vgsFHXwepDF0hN0yZqYcqw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MerriweatherSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme merriweatherSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.merriweatherSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle metalTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/metal/v12/lW-wwjUJIXTo7i3nnoQAUdN2.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Metal',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme metalTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.metalTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.metalTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.metalTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.metalTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.metalTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.metalTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.metalTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.metalTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.metalTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.metalTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.metalTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.metalTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.metalTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle metalManiaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/metalmania/v9/RWmMoKWb4e8kqMfBUdPFJeXCg6UKDXlq.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MetalMania',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme metalManiaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.metalManiaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle metamorphousTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/metamorphous/v10/Wnz8HA03aAXcC39ZEX5y1330PCCthTsmaQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Metamorphous',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme metamorphousTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.metamorphousTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle metrophobicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/metrophobic/v13/sJoA3LZUhMSAPV_u0qwiAT-J737FPEEL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Metrophobic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme metrophobicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.metrophobicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle michromaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/michroma/v10/PN_zRfy9qWD8fEagAMg6rzjb_-Da.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Michroma',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme michromaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.michromaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.michromaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.michromaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.michromaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.michromaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.michromaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.michromaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.michromaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.michromaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.michromaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.michromaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.michromaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.michromaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle milongaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/milonga/v7/SZc53FHnIaK9W5kffz3GkUrS8DI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Milonga',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme milongaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.milongaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.milongaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.milongaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.milongaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.milongaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.milongaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.milongaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.milongaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.milongaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.milongaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.milongaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.milongaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.milongaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle miltonianTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/miltonian/v13/zOL-4pbPn6Ne9JqTg9mr6e5As-FeiQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Miltonian',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme miltonianTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.miltonianTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle miltonianTattooTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/miltoniantattoo/v15/EvOUzBRL0o0kCxF-lcMCQxlpVsA_FwP8MDBku-s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MiltonianTattoo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme miltonianTattooTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.miltonianTattooTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle minaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mina/v3/-nFzOGc18vARrz9j7i3y65o.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mina/v3/-nF8OGc18vARl4NMyiXZ95OkJwA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme minaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.minaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.minaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.minaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.minaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.minaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.minaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.minaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.minaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.minaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.minaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.minaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.minaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.minaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle miniverTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/miniver/v8/eLGcP-PxIg-5H0vC770Cy8r8fWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Miniver',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme miniverTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.miniverTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.miniverTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.miniverTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.miniverTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.miniverTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.miniverTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.miniverTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.miniverTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.miniverTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.miniverTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.miniverTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.miniverTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.miniverTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle miriamLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/miriamlibre/v6/DdTh798HsHwubBAqfkcBTL_vYJn_Teun9g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/miriamlibre/v6/DdT-798HsHwubBAqfkcBTL_X3LbbRcC7_-Z7Hg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MiriamLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme miriamLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.miriamLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mirzaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mirza/v7/co3ImWlikiN5EurdKMewsrvI.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mirza/v7/co3FmWlikiN5EtIpAeO4mafBomDi.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/mirza/v7/co3FmWlikiN5EtIFBuO4mafBomDi.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mirza/v7/co3FmWlikiN5EtJhB-O4mafBomDi.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mirza',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mirzaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mirzaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle missFajardoseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/missfajardose/v9/E21-_dn5gvrawDdPFVl-N0Ajb8qvWPaJq4no.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MissFajardose',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme missFajardoseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.missFajardoseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mitrTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/mitr/v5/pxiEypw5ucZF8fMZFJDUc1NECPY.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mitr/v5/pxiEypw5ucZF8ZcaFJDUc1NECPY.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mitr/v5/pxiLypw5ucZFyTsyMJj_b1o.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mitr/v5/pxiEypw5ucZF8c8bFJDUc1NECPY.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/mitr/v5/pxiEypw5ucZF8eMcFJDUc1NECPY.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mitr/v5/pxiEypw5ucZF8YcdFJDUc1NECPY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mitr',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mitrTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mitrTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mitrTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mitrTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mitrTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mitrTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mitrTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mitrTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mitrTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mitrTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mitrTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mitrTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mitrTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mitrTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle modakTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/modak/v5/EJRYQgs1XtIEsnMH8BVZ76KU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Modak',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme modakTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.modakTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.modakTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.modakTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.modakTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.modakTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.modakTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.modakTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.modakTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.modakTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.modakTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.modakTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.modakTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.modakTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle modernAntiquaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/modernantiqua/v9/NGStv5TIAUg6Iq_RLNo_2dp1sI1Ea2u0c3Gi.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ModernAntiqua',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme modernAntiquaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.modernAntiquaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mograTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mogra/v6/f0X40eSs8c95TBo4DvLmxtnG.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mogra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mograTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mograTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mograTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mograTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mograTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mograTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mograTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mograTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mograTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mograTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mograTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mograTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mograTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mograTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle molengoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/molengo/v10/I_uuMpWeuBzZNBtQbbRQkiCvs5Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Molengo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme molengoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.molengoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.molengoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.molengoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.molengoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.molengoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.molengoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.molengoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.molengoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.molengoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.molengoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.molengoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.molengoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.molengoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle molleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/molle/v8/E21n_dL5hOXFhWEsXzgmVydREus.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Molle',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme molleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.molleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.molleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.molleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.molleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.molleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.molleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.molleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.molleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.molleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.molleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.molleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.molleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.molleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mondaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/monda/v9/TK3tWkYFABsmjvpmNBsLvPdG.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/monda/v9/TK3gWkYFABsmjsLaGz8Dl-tPKo2t.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Monda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mondaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mondaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mondaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mondaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mondaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mondaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mondaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mondaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mondaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mondaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mondaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mondaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mondaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mondaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle monofettTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/monofett/v9/mFTyWbofw6zc9NtnW43SuRwr0VJ7.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Monofett',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme monofettTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.monofettTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.monofettTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.monofettTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.monofettTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.monofettTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.monofettTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.monofettTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.monofettTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.monofettTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.monofettTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.monofettTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.monofettTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.monofettTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle monotonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/monoton/v9/5h1aiZUrOngCibe4fkbBQ2S7FU8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Monoton',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme monotonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.monotonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.monotonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.monotonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.monotonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.monotonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.monotonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.monotonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.monotonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.monotonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.monotonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.monotonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.monotonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.monotonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle monsieurLaDoulaiseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/monsieurladoulaise/v8/_Xmz-GY4rjmCbQfc-aPRaa4pqV340p7EZl5ewkEU4HTy.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MonsieurLaDoulaise',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme monsieurLaDoulaiseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.monsieurLaDoulaiseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle montagaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/montaga/v7/H4cnBX2Ml8rCkEO_0gYQ7LO5mqc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Montaga',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme montagaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.montagaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.montagaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.montagaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.montagaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.montagaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.montagaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.montagaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.montagaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.montagaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.montagaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.montagaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.montagaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.montagaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle montezTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/montez/v10/845ZNMk5GoGIX8lm1LDeSd-R_g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Montez',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme montezTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.montezTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.montezTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.montezTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.montezTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.montezTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.montezTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.montezTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.montezTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.montezTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.montezTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.montezTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.montezTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.montezTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle montserratTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUQjIg1_i6t8kCHKm45_QphziTn89dtpQ.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUOjIg1_i6t8kCHKm459WxZqi7j0dJ9pTOi.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_aZA7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZBg_D-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_cJD7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZYgzD-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUSjIg1_i6t8kCHKm45xW5rygbi49c.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUQjIg1_i6t8kCHKm459WxhziTn89dtpQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_ZpC7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZOg3D-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_bZF7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZFgrD-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_dJE7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZcgvD-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_c5H7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZbgjD-_xxrCq7qg.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/montserrat/v14/JTURjIg1_i6t8kCHKm45_epG7g7J_950vCo.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/montserrat/v14/JTUPjIg1_i6t8kCHKm459WxZSgnD-_xxrCq7qg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Montserrat',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme montserratTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.montserratTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.montserratTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.montserratTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.montserratTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.montserratTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.montserratTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.montserratTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.montserratTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.montserratTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.montserratTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.montserratTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.montserratTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.montserratTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle montserratAlternatesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFThWacfw6zH4dthXcyms1lPpC8I_b0juU0xiKfVKphL03l4.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTjWacfw6zH4dthXcyms1lPpC8I_b0juU057p-xIJxp1ml4imo.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xJIb1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p8dAbxD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xQIX1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p95ArxD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTvWacfw6zH4dthXcyms1lPpC8I_b0juU0J7K3RCJ1b0w.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFThWacfw6zH4dthXcyms1lPpC8I_b0juU057qfVKphL03l4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xGIT1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p8hA7xD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xNIP1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p8NBLxD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xUIL1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p9pBbxD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xTIH1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p91BrxD-GVxk3Nd.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTiWacfw6zH4dthXcyms1lPpC8I_b0juU0xaID1ALZH2mBhkw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/montserratalternates/v11/mFTkWacfw6zH4dthXcyms1lPpC8I_b0juU057p9RB7xD-GVxk3Nd.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MontserratAlternates',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme montserratAlternatesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.montserratAlternatesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle montserratSubrayadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/montserratsubrayada/v9/U9MD6c-o9H7PgjlTHThBnNHGVUORwteQQE8LYuceqGT-.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/montserratsubrayada/v9/U9MM6c-o9H7PgjlTHThBnNHGVUORwteQQHe3TcMWg3j36Ebz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MontserratSubrayada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme montserratSubrayadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.montserratSubrayadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle moulTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/moul/v11/nuF2D__FSo_3E-RYiJCy-00.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Moul',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme moulTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.moulTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.moulTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.moulTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.moulTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.moulTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.moulTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.moulTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.moulTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.moulTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.moulTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.moulTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.moulTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.moulTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle moulpaliTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/moulpali/v12/H4ckBXKMl9HagUWymyY6wr-wg763.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Moulpali',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme moulpaliTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.moulpaliTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mountainsofChristmasTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mountainsofchristmas/v12/3y9w6a4zcCnn5X0FDyrKi2ZRUBIy8uxoUo7ePNamMPNpJpc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mountainsofchristmas/v12/3y9z6a4zcCnn5X0FDyrKi2ZRUBIy8uxoUo7eBGqJFPtCOp6IaEA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MountainsofChristmas',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mountainsofChristmasTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mountainsofChristmasTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mouseMemoirsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mousememoirs/v7/t5tmIRoSNJ-PH0WNNgDYxdSb7TnFrpOHYh4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MouseMemoirs',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mouseMemoirsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mouseMemoirsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mrBedfortTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mrbedfort/v8/MQpR-WCtNZSWAdTMwBicliq0XZe_Iy8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MrBedfort',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mrBedfortTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mrBedfortTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mrDafoeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mrdafoe/v8/lJwE-pIzkS5NXuMMrGiqg7MCxz_C.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MrDafoe',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mrDafoeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mrDafoeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mrDeHavilandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mrdehaviland/v8/OpNVnooIhJj96FdB73296ksbOj3C4ULVNTlB.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MrDeHaviland',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mrDeHavilandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mrDeHavilandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mrsSaintDelafieldTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mrssaintdelafield/v7/v6-IGZDIOVXH9xtmTZfRagunqBw5WC62cK4tLsubB2w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MrsSaintDelafield',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mrsSaintDelafieldTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mrsSaintDelafieldTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mrsSheppardsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mrssheppards/v8/PN_2Rfm9snC0XUGoEZhb91ig3vjxynMix4Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MrsSheppards',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mrsSheppardsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mrsSheppardsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle muktaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbEOjFma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbFqj1ma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mukta/v7/iJWKBXyXfDDVXYnGp32S0H3f.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbEyjlma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbEeiVma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbF6iFma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/mukta/v7/iJWHBXyXfDDVXbFmi1ma-2HW7ZB_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Mukta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme muktaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.muktaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.muktaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.muktaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.muktaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.muktaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.muktaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.muktaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.muktaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.muktaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.muktaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.muktaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.muktaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.muktaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle muktaMaheeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9MFcBoHJndqZCsW.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9NhcxoHJndqZCsW.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXQ3IOIi0hcP8iVU67hA-vNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9M5choHJndqZCsW.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9MVdRoHJndqZCsW.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9NxdBoHJndqZCsW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/muktamahee/v5/XRXN3IOIi0hcP8iVU67hA9NtdxoHJndqZCsW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MuktaMahee',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme muktaMaheeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.muktaMaheeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle muktaMalarTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqIMwBtAB62ruoAZW.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqINUBdAB62ruoAZW.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoXzAXyz8LOE2FpJMxZqLv4LfQJwHbn.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqIMMBNAB62ruoAZW.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqIMgA9AB62ruoAZW.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqINEAtAB62ruoAZW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/muktamalar/v6/MCoKzAXyz8LOE2FpJMxZqINYAdAB62ruoAZW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MuktaMalar',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme muktaMalarTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.muktaMalarTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle muktaVaaniTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGXNV8BD-u97MW1a.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGWpVMBD-u97MW1a.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/muktavaani/v7/3Jn5SD_-ynaxmxnEfVHPIF0FfORL0fNy.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGXxVcBD-u97MW1a.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGXdUsBD-u97MW1a.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGW5U8BD-u97MW1a.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/muktavaani/v7/3JnkSD_-ynaxmxnEfVHPIGWlUMBD-u97MW1a.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MuktaVaani',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme muktaVaaniTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.muktaVaaniTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle muliTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-adf3nCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-4CP2ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-adZnkCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-hCD2ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/muli/v16/7Auwp_0qiz-aTTXMLCrX0kU.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au-p_0qiz-afTfGKAjSwkUVOQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-ade3iCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-8Cb2ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-adYnjCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-lCf2ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-adZXgCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-iCT2ym4JMFge0g.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/muli/v16/7Au_p_0qiz-adbHhCCL8zkwMIFg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/muli/v16/7Au9p_0qiz-afTf-rCX2ym4JMFge0g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Muli',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme muliTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.muliTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.muliTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.muliTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.muliTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.muliTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.muliTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.muliTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.muliTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.muliTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.muliTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.muliTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.muliTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.muliTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle mysteryQuestTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/mysteryquest/v7/-nF6OG414u0E6k0wynSGlujRHwElD_9Qz9E.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'MysteryQuest',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme mysteryQuestTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.mysteryQuestTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nTRTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ntr/v7/RLpzK5Xy0ZjiGGhs5TA4bg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NTR',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nTRTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nTRTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nTRTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nTRTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nTRTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nTRTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nTRTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nTRTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nTRTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nTRTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nTRTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nTRTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nTRTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nTRTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nanumBrushScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nanumbrushscript/v17/wXK2E2wfpokopxzthSqPbcR5_gVaxazyjqBr1lO97Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NanumBrushScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nanumBrushScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nanumBrushScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nanumGothicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nanumgothic/v17/PN_3Rfi-oW3hYwmKDpxS7F_z_tLfxno73g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nanumgothic/v17/PN_oRfi-oW3hYwmKDpxS7F_LQv37zlEn14YEUQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/nanumgothic/v17/PN_oRfi-oW3hYwmKDpxS7F_LXv77zlEn14YEUQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NanumGothic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nanumGothicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nanumGothicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nanumGothicCodingTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nanumgothiccoding/v14/8QIVdjzHisX_8vv59_xMxtPFW4IXROwsy6QxVs1X7tc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nanumgothiccoding/v14/8QIYdjzHisX_8vv59_xMxtPFW4IXROws8xgecsV88t5V9r4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NanumGothicCoding',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nanumGothicCodingTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nanumGothicCodingTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nanumMyeongjoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nanummyeongjo/v15/9Btx3DZF0dXLMZlywRbVRNhxy1LreHQ8juyl.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nanummyeongjo/v15/9Bty3DZF0dXLMZlywRbVRNhxy2pXV1A0pfCs5Kos.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/nanummyeongjo/v15/9Bty3DZF0dXLMZlywRbVRNhxy2pLVFA0pfCs5Kos.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NanumMyeongjo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nanumMyeongjoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nanumMyeongjoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nanumPenScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nanumpenscript/v15/daaDSSYiLGqEal3MvdA_FOL_3FkN2z7-aMFCcTU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NanumPenScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nanumPenScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nanumPenScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle neuchaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/neucha/v11/q5uGsou0JOdh94bvugNsCxVEgA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Neucha',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme neuchaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.neuchaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle neutonTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/neuton/v12/UMBQrPtMoH62xUZKAKkfegD5Drog6Q.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/neuton/v12/UMBQrPtMoH62xUZKZKofegD5Drog6Q.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/neuton/v12/UMBTrPtMoH62xUZyyII7civlBw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/neuton/v12/UMBRrPtMoH62xUZCyog_UC71B6M5.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/neuton/v12/UMBQrPtMoH62xUZKdK0fegD5Drog6Q.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/neuton/v12/UMBQrPtMoH62xUZKaK4fegD5Drog6Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Neuton',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme neutonTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.neutonTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.neutonTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.neutonTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.neutonTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.neutonTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.neutonTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.neutonTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.neutonTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.neutonTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.neutonTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.neutonTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.neutonTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.neutonTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle newRockerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/newrocker/v8/MwQzbhjp3-HImzcCU_cJkGMViblPtXs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NewRocker',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme newRockerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.newRockerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle newsCycleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/newscycle/v16/CSR64z1Qlv-GDxkbKVQ_TOcATNt_pOU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/newscycle/v16/CSR54z1Qlv-GDxkbKVQ_dFsvaNNUuOwkC2s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NewsCycle',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme newsCycleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.newsCycleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle niconneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/niconne/v9/w8gaH2QvRug1_rTfrQut2F4OuOo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Niconne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme niconneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.niconneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.niconneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.niconneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.niconneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.niconneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.niconneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.niconneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.niconneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.niconneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.niconneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.niconneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.niconneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.niconneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle niramitTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/niramit/v4/I_urMpWdvgLdNxVLVXx7tiiEr5_BdZ8.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_upMpWdvgLdNxVLXbZiXimOq73EZZ_f6w.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/niramit/v4/I_urMpWdvgLdNxVLVRh4tiiEr5_BdZ8.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_upMpWdvgLdNxVLXbZiOiqOq73EZZ_f6w.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/niramit/v4/I_uuMpWdvgLdNxVLbbRQkiCvs5Y.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_usMpWdvgLdNxVLXbZalgKqo5bYbA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/niramit/v4/I_urMpWdvgLdNxVLVUB5tiiEr5_BdZ8.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_upMpWdvgLdNxVLXbZiYiuOq73EZZ_f6w.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/niramit/v4/I_urMpWdvgLdNxVLVWx-tiiEr5_BdZ8.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_upMpWdvgLdNxVLXbZiTiyOq73EZZ_f6w.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/niramit/v4/I_urMpWdvgLdNxVLVQh_tiiEr5_BdZ8.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/niramit/v4/I_upMpWdvgLdNxVLXbZiKi2Oq73EZZ_f6w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Niramit',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme niramitTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.niramitTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.niramitTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.niramitTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.niramitTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.niramitTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.niramitTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.niramitTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.niramitTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.niramitTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.niramitTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.niramitTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.niramitTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.niramitTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nixieOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nixieone/v10/lW-8wjkKLXjg5y2o2uUoUOFzpS-yLw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NixieOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nixieOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nixieOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nobileTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nobile/v11/m8JTjflSeaOVl1i2XqfXeLVdbw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/nobile/v11/m8JRjflSeaOVl1iGXK3TWrBNb3OD.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/nobile/v11/m8JQjflSeaOVl1iOqo7zcJ5BZmqa3A.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/nobile/v11/m8JWjflSeaOVl1iGXJUnc5RFRG-K3Mud.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nobile/v11/m8JQjflSeaOVl1iO4ojzcJ5BZmqa3A.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/nobile/v11/m8JWjflSeaOVl1iGXJVvdZRFRG-K3Mud.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Nobile',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nobileTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nobileTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nobileTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nobileTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nobileTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nobileTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nobileTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nobileTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nobileTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nobileTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nobileTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nobileTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nobileTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nobileTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nokoraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nokora/v13/hYkIPuwgTubzaWxQOzoPovZg8Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nokora/v13/hYkLPuwgTubzaWxohxUrqt18-B9Uuw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Nokora',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nokoraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nokoraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle noricanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/norican/v8/MwQ2bhXp1eSBqjkPGJJRtGs-lbA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Norican',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme noricanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.noricanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.noricanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.noricanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.noricanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.noricanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.noricanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.noricanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.noricanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.noricanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.noricanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.noricanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.noricanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.noricanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nosiferTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nosifer/v8/ZGjXol5JTp0g5bxZaC1RVDNdGDs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Nosifer',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nosiferTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nosiferTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notableTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notable/v4/gNMEW3N_SIqx-WX9-HMoFIez5MI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Notable',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notableTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notableTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notableTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notableTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notableTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notableTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notableTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notableTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notableTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notableTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notableTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notableTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notableTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notableTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nothingYouCouldDoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nothingyoucoulddo/v9/oY1B8fbBpaP5OX3DtrRYf_Q2BPB1SnfZb0OJl1ol2Ymo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NothingYouCouldDo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nothingYouCouldDoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nothingYouCouldDoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle noticiaTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/noticiatext/v9/VuJ2dNDF2Yv9qppOePKYRP1GYTFZt0rNpQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/noticiatext/v9/VuJodNDF2Yv9qppOePKYRP12YztdlU_dpSjt.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/noticiatext/v9/VuJpdNDF2Yv9qppOePKYRP1-3R59v2HRrDH0eA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/noticiatext/v9/VuJrdNDF2Yv9qppOePKYRP12YwPhumvVjjTkeMnz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NoticiaText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme noticiaTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.noticiaTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosans/v9/o-0IIpQlx3QUlC5A4PNb4j5Ba_2c7A.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/notosans/v9/o-0OIpQlx3QUlC5A4PNr4DRFSfiM7HBj.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosans/v9/o-0NIpQlx3QUlC5A4PNjXhFlY9aA5Wl6PQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/notosans/v9/o-0TIpQlx3QUlC5A4PNr4Az5ZtyEx2xqPaif.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansHKTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKO-GM_FYFRJvXzVXaAPe9ZUHp1MOv2ObB7.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKP-GM_FYFRJvXzVXaAPe9ZmFhTHMX6MKliqQ.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKQ-GM_FYFRJvXzVXaAPe9hMnB3Eu7mOQ.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKP-GM_FYFRJvXzVXaAPe9ZwFlTHMX6MKliqQ.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKP-GM_FYFRJvXzVXaAPe9ZiF9THMX6MKliqQ.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notosanshk/v5/nKKP-GM_FYFRJvXzVXaAPe9ZsF1THMX6MKliqQ.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSansHK',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansHKTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansHKTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansJPTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F6ofjtqLzI2JPCgQBnw7HFQoggM-FNthvIU.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F6pfjtqLzI2JPCgQBnw7HFQaioq1H1hj-sNFQ.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F62fjtqLzI2JPCgQBnw7HFowAIO2lZ9hg.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F6pfjtqLzI2JPCgQBnw7HFQMisq1H1hj-sNFQ.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F6pfjtqLzI2JPCgQBnw7HFQei0q1H1hj-sNFQ.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notosansjp/v24/-F6pfjtqLzI2JPCgQBnw7HFQQi8q1H1hj-sNFQ.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSansJP',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansJPTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansJPTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansKRTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/notosanskr/v12/Pby6FmXiEBPT4ITbgNA5CgmOsn7uwpYcuH8y.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notosanskr/v12/Pby7FmXiEBPT4ITbgNA5CgmOelzI7rgQsWYrzw.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosanskr/v12/PbykFmXiEBPT4ITbgNA5Cgm20HTs4JMMuA.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notosanskr/v12/Pby7FmXiEBPT4ITbgNA5CgmOIl3I7rgQsWYrzw.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosanskr/v12/Pby7FmXiEBPT4ITbgNA5CgmOalvI7rgQsWYrzw.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notosanskr/v12/Pby7FmXiEBPT4ITbgNA5CgmOUlnI7rgQsWYrzw.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSansKR',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansKRTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansKRTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kJo84MPvpLmixcA63oeALZTYKL2wv287Sb.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kIo84MPvpLmixcA63oeALZhaCt9yX6-q2CGg.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kXo84MPvpLmixcA63oeALhL4iJ-Q7m8w.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kIo84MPvpLmixcA63oeALZ3aGt9yX6-q2CGg.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kIo84MPvpLmixcA63oeALZlaet9yX6-q2CGg.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notosanssc/v9/k3kIo84MPvpLmixcA63oeALZraWt9yX6-q2CGg.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSansSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSansTCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nFlOG829Oofr2wohFbTp9i9WyEJIfNZ1sjy.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nFkOG829Oofr2wohFbTp9i9kwMvDd1V39Hr7g.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nF7OG829Oofr2wohFbTp9iFOSsLA_ZJ1g.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nFkOG829Oofr2wohFbTp9i9ywIvDd1V39Hr7g.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nFkOG829Oofr2wohFbTp9i9gwQvDd1V39Hr7g.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notosanstc/v9/-nFkOG829Oofr2wohFbTp9i9uwYvDd1V39Hr7g.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSansTC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSansTCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSansTCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSerifTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notoserif/v8/ga6Iaw1J5X9T9RW6j9bNTFAcaRi_bMQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/notoserif/v8/ga6Kaw1J5X9T9RW6j9bNfFIWbTq6fMRRMw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notoserif/v8/ga6Law1J5X9T9RW6j9bNdOwzTRCUcM1IKoY.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/notoserif/v8/ga6Vaw1J5X9T9RW6j9bNfFIu0RWedO9NOoYIDg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSerif',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSerifTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSerifTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSerifJPTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZBaPRkgfU8fEwb0.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZHKMRkgfU8fEwb0.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn7mYHs72GKoTvER4Gn3b5eMXNikYkY0T84.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZCqNRkgfU8fEwb0.otf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZAaKRkgfU8fEwb0.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZGKLRkgfU8fEwb0.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notoserifjp/v7/xn77YHs72GKoTvER4Gn3b5eMZFqJRkgfU8fEwb0.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSerifJP',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSerifJPTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSerifJPTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSerifKRTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXTihC8O1ZNH1ahck.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXTkxB8O1ZNH1ahck.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3Jn7SDn90Gmq2mr3blnHaTZXduZp1ONyKHQ.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXThRA8O1ZNH1ahck.otf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXTjhH8O1ZNH1ahck.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXTlxG8O1ZNH1ahck.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notoserifkr/v6/3JnmSDn90Gmq2mr3blnHaTZXTmRE8O1ZNH1ahck.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSerifKR',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSerifKRTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSerifKRTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSerifSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7mm63SzZBEtERe7U.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7mgq0SzZBEtERe7U.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4chBXePl9DZ0Xe7gG9cyOj7oqCcbzhqDtg.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7mlK1SzZBEtERe7U.otf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7mn6ySzZBEtERe7U.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7mhqzSzZBEtERe7U.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notoserifsc/v6/H4c8BXePl9DZ0Xe7gG9cyOj7miKxSzZBEtERe7U.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSerifSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSerifSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSerifSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle notoSerifTCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0Bvr8vbX9GTsoOAX4.otf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0BvtssbX9GTsoOAX4.otf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLYgIZb5bJNDGYxLBibeHZ0BhnEESXFtUsM.otf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0BvoMtbX9GTsoOAX4.otf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0Bvq8qbX9GTsoOAX4.otf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0BvssrbX9GTsoOAX4.otf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/notoseriftc/v6/XLY9IZb5bJNDGYxLBibeHZ0BvvMpbX9GTsoOAX4.otf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NotoSerifTC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme notoSerifTCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.notoSerifTCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaCutTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novacut/v11/KFOkCnSYu8mL-39LkWxPKTM1K9nz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaCut',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaCutTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaCutTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaFlatTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novaflat/v11/QdVUSTc-JgqpytEbVebEuStkm20oJA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaFlat',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaFlatTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaFlatTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novamono/v10/Cn-0JtiGWQ5Ajb--MRKfYGxYrdM9Sg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaOvalTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novaoval/v11/jAnEgHdmANHvPenMaswCMY-h3cWkWg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaOval',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaOvalTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaOvalTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaRoundTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novaround/v11/flU9Rqquw5UhEnlwTJYTYYfeeetYEBc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaRound',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaRoundTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaRoundTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novascript/v12/7Au7p_IpkSWSTWaFWkumvmQNEl0O0kEx.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaSlimTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novaslim/v11/Z9XUDmZNQAuem8jyZcn-yMOInrib9Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaSlim',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaSlimTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaSlimTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle novaSquareTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/novasquare/v12/RrQUbo9-9DV7b06QHgSWsZhARYMgGtWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NovaSquare',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme novaSquareTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.novaSquareTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle numansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/numans/v9/SlGRmQmGupYAfH8IYRggiHVqaQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Numans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme numansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.numansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.numansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.numansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.numansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.numansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.numansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.numansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.numansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.numansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.numansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.numansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.numansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.numansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nunitoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofA-sekZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN5MZ-vNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofAnsSkZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN4oZOvNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nunito/v11/XRXV3I6Li01BKof4MuyAbsrVcA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXX3I6Li01BKofIMOaETM_FcCIG.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofA6sKkZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN5cYuvNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofAjsOkZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN44Y-vNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofAksCkZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN4kYOvNWz4PDWtj.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/nunito/v11/XRXW3I6Li01BKofAtsGkZuHJeTsfDQ.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/nunito/v11/XRXQ3I6Li01BKofIMN4AYevNWz4PDWtj.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Nunito',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nunitoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nunitoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle nunitoSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc9yAv5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4GxZrU1QCU5l-06Y.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc8WAf5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4G3JoU1QCU5l-06Y.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe0qMImSLYBIv1o4X1M8cfe6Kdpickwp.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe0oMImSLYBIv1o4X1M8cce4I95Ad1wpT5A.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc9iB_5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4GwZuU1QCU5l-06Y.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc8GBv5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4G2JvU1QCU5l-06Y.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc8aBf5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4G35sU1QCU5l-06Y.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe03MImSLYBIv1o4X1M8cc8-BP5qWVAgVol-.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/nunitosans/v5/pe01MImSLYBIv1o4X1M8cce4G1ptU1QCU5l-06Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'NunitoSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme nunitoSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.nunitoSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle odorMeanCheyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/odormeanchey/v11/raxkHiKDttkTe1aOGcJMR1A_4mrY2zqUKafv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OdorMeanChey',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme odorMeanCheyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.odorMeanCheyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle offsideTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/offside/v7/HI_KiYMWKa9QrAykQ5HiRp-dhpQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Offside',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme offsideTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.offsideTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.offsideTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.offsideTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.offsideTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.offsideTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.offsideTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.offsideTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.offsideTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.offsideTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.offsideTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.offsideTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.offsideTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.offsideTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oldStandardTTTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oldstandardtt/v12/MwQubh3o1vLImiwAVvYawgcf2eVurVC5RHdCZg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/oldstandardtt/v12/MwQsbh3o1vLImiwAVvYawgcf2eVer1q9ZnJSZtQG.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/oldstandardtt/v12/MwQrbh3o1vLImiwAVvYawgcf2eVWEX-dTFxeb80flQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OldStandardTT',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oldStandardTTTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oldStandardTTTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oldenburgTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oldenburg/v7/fC1jPY5JYWzbywv7c4V6UU6oXyndrw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Oldenburg',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oldenburgTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oldenburgTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oleoScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oleoscript/v8/rax5HieDvtMOe0iICsUccBhasU7Q8Cad.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/oleoscript/v8/raxkHieDvtMOe0iICsUccCDmnmrY2zqUKafv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OleoScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oleoScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oleoScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oleoScriptSwashCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oleoscriptswashcaps/v7/Noaj6Vb-w5SFbTTAsZP_7JkCS08K-jCzDn_HMXquSY0Hg90.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/oleoscriptswashcaps/v7/Noag6Vb-w5SFbTTAsZP_7JkCS08K-jCzDn_HCcaBbYUsn9T5dt0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OleoScriptSwashCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oleoScriptSwashCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oleoScriptSwashCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle openSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN_r8-VeJoCqeDjg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/opensans/v17/memnYaGs126MiZpBA-UFUKWyV-hsKKKTjrPW.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-U1UpcaXcl0Aw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/opensans/v17/mem6YaGs126MiZpBA-UFUJ0ef8xkA76a.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UNirk-VeJoCqeDjg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/opensans/v17/memnYaGs126MiZpBA-UFUKXGUehsKKKTjrPW.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN7rg-VeJoCqeDjg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/opensans/v17/memnYaGs126MiZpBA-UFUKWiUOhsKKKTjrPW.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/opensans/v17/mem5YaGs126MiZpBA-UN8rs-VeJoCqeDjg.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/opensans/v17/memnYaGs126MiZpBA-UFUKW-U-hsKKKTjrPW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OpenSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme openSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.openSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.openSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.openSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.openSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.openSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.openSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.openSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.openSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.openSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.openSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.openSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.openSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.openSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle openSansCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/opensanscondensed/v14/z7NFdQDnbTkabZAIOl9il_O6KJj73e7Ff1GhPuLGRpWRyAs.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/opensanscondensed/v14/z7NHdQDnbTkabZAIOl9il_O6KJj73e7Fd_-7suDMQreU2AsJSg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/opensanscondensed/v14/z7NFdQDnbTkabZAIOl9il_O6KJj73e7Ff0GmPuLGRpWRyAs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OpenSansCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme openSansCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.openSansCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oranienbaumTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oranienbaum/v8/OZpHg_txtzZKMuXLIVrx-3zn7kz3dpHc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Oranienbaum',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oranienbaumTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oranienbaumTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle orbitronTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/orbitron/v11/yMJRMIlzdpvBhQQL_Tq8fSx5i814.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/orbitron/v11/yMJWMIlzdpvBhQQL_QJIVAhxoNFxW0Hz.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/orbitron/v11/yMJWMIlzdpvBhQQL_QIAUghxoNFxW0Hz.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/orbitron/v11/yMJWMIlzdpvBhQQL_QI4UAhxoNFxW0Hz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Orbitron',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme orbitronTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.orbitronTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oreganoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oregano/v7/If2IXTPxciS3H4S2kZffPznO3yM.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/oregano/v7/If2KXTPxciS3H4S2oZXVOxvLzyP_qw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Oregano',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oreganoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oreganoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle orientaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/orienta/v7/PlI9FlK4Jrl5Y9zNeyeo9HRFhcU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Orienta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme orientaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.orientaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.orientaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.orientaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.orientaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.orientaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.orientaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.orientaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.orientaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.orientaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.orientaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.orientaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.orientaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.orientaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle originalSurferTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/originalsurfer/v8/RWmQoKGZ9vIirYntXJ3_MbekzNMiDEtvAlaMKw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OriginalSurfer',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme originalSurferTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.originalSurferTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oswaldTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs13FvgUFoZAaRliE.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs169vgUFoZAaRliE.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs1_FvgUFoZAaRliE.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs18NvgUFoZAaRliE.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs1y9ogUFoZAaRliE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/oswald/v29/TK3_WkUHHAIjg75cFRf3bXL8LICs1xZogUFoZAaRliE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Oswald',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oswaldTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oswaldTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle overtheRainbowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/overtherainbow/v10/11haGoXG1k_HKhMLUWz7Mc7vvW5upvOm9NA2XG0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OvertheRainbow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme overtheRainbowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.overtheRainbowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle overlockTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XVDmdMWRiN1_T9Z4Te4u2El6GC.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XTDmdMWRiN1_T9Z7Tc6OmmkrGC7Cs.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XSDmdMWRiN1_T9Z7xizcmMvL2L9TLT.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XQDmdMWRiN1_T9Z7Tc0FWJtrmp8CLTlNs.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XSDmdMWRiN1_T9Z7xaz8mMvL2L9TLT.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/overlock/v9/Z9XQDmdMWRiN1_T9Z7Tc0G2Ltrmp8CLTlNs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Overlock',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme overlockTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.overlockTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.overlockTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.overlockTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.overlockTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.overlockTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.overlockTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.overlockTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.overlockTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.overlockTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.overlockTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.overlockTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.overlockTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.overlockTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle overlockSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/overlocksc/v8/1cX3aUHKGZrstGAY8nwVzHGAq8Sk1PoH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OverlockSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme overlockSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.overlockSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle overpassTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/overpass/v4/qFdB35WCmI96Ajtm81nGU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdD35WCmI96Ajtm81Gga7rqwjUMg1siNQ.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81lqcv7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81GgaxbL4h8ij1I7LLE.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81kOcf7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81Gga3LI4h8ij1I7LLE.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/overpass/v4/qFdH35WCmI96Ajtm82GiWdrCwwcJ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdB35WCmI96Ajtm81GgU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81l6d_7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81GgawbO4h8ij1I7LLE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81kedv7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81Gga2LP4h8ij1I7LLE.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81kCdf7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81Gga37M4h8ij1I7LLE.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/overpass/v4/qFdA35WCmI96Ajtm81kmdP7K6BsAikI7.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/overpass/v4/qFdC35WCmI96Ajtm81Gga1rN4h8ij1I7LLE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Overpass',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme overpassTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.overpassTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.overpassTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.overpassTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.overpassTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.overpassTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.overpassTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.overpassTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.overpassTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.overpassTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.overpassTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.overpassTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.overpassTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.overpassTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle overpassMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/overpassmono/v5/_Xm3-H86tzKDdAPa-KPQZ-AC3oSWk_edB3Zf8EQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/overpassmono/v5/_Xmq-H86tzKDdAPa-KPQZ-AC5ii-t_-2G38.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/overpassmono/v5/_Xm3-H86tzKDdAPa-KPQZ-AC3vCQk_edB3Zf8EQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/overpassmono/v5/_Xm3-H86tzKDdAPa-KPQZ-AC3pSRk_edB3Zf8EQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OverpassMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme overpassMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.overpassMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ovoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ovo/v11/yYLl0h7Wyfzjy4Q5_3WVxA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ovo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ovoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ovoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ovoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ovoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ovoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ovoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ovoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ovoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ovoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ovoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ovoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ovoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ovoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ovoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oxygenTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/oxygen/v9/2sDcZG1Wl4LcnbuCJW8Db2-4C7wFZQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oxygen/v9/2sDfZG1Wl4Lcnbu6iUcnZ0SkAg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/oxygen/v9/2sDcZG1Wl4LcnbuCNWgDb2-4C7wFZQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Oxygen',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oxygenTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oxygenTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle oxygenMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/oxygenmono/v7/h0GsssGg9FxgDgCjLeAd7ijfze-PPlUu.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'OxygenMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme oxygenMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.oxygenMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptmono/v7/9oRONYoBnWILk-9ArCg5MtPyAcg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptsans/v11/jizaRExUiTo99u79P0WOxOGMMDQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ptsans/v11/jizYRExUiTo99u79D0eEwMOJIDQA-g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ptsans/v11/jizfRExUiTo99u79B_mh4OmnLD0Z4zM.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ptsans/v11/jizdRExUiTo99u79D0e8fOytKB8c8zMrig.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTSansCaptionTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptsanscaption/v12/0FlMVP6Hrxmt7-fsUFhlFXNIlpcqfQXwQy6yxg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ptsanscaption/v12/0FlJVP6Hrxmt7-fsUFhlFXNIlpcSwSrUSwWuz38Tgg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTSansCaption',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTSansCaptionTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTSansCaptionTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTSansNarrowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptsansnarrow/v11/BngRUXNadjH0qYEzV7ab-oWlsYCByxyKeuDp.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ptsansnarrow/v11/BngSUXNadjH0qYEzV7ab-oWlsbg95DiCUfzgRd-3.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTSansNarrow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTSansNarrowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTSansNarrowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTSerifTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptserif/v11/EJRVQgYoZZY2vCFuvDFRxL6ddjb-.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ptserif/v11/EJRTQgYoZZY2vCFuvAFTzrq_cyb-vco.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ptserif/v11/EJRSQgYoZZY2vCFuvAnt65qVXSr3pNNB.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ptserif/v11/EJRQQgYoZZY2vCFuvAFT9gaQVy7VocNB6Iw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTSerif',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTSerifTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTSerifTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pTSerifCaptionTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ptserifcaption/v11/ieVl2ZhbGCW-JoW6S34pSDpqYKU059WxDCs5cvI.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ptserifcaption/v11/ieVj2ZhbGCW-JoW6S34pSDpqYKU019e7CAk8YvJEeg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PTSerifCaption',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pTSerifCaptionTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pTSerifCaptionTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pacificoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pacifico/v16/FwZY7-Qmy14u9lezJ96A4sijpFu_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pacifico',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pacificoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pacificoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle padaukTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/padauk/v6/RrQRboJg-id7OnbBa0_g3LlYbg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/padauk/v6/RrQSboJg-id7Onb512DE1JJEZ4YwGg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Padauk',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme padaukTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.padaukTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.padaukTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.padaukTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.padaukTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.padaukTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.padaukTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.padaukTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.padaukTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.padaukTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.padaukTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.padaukTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.padaukTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.padaukTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle palanquinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUhlJ90n1fBFg7ceXwUEltI7rWmZzTH.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUilJ90n1fBFg7ceXwUvnpoxJuqbi3ezg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUilJ90n1fBFg7ceXwU2nloxJuqbi3ezg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUnlJ90n1fBFg7ceXwsdlFMzLC2Zw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUilJ90n1fBFg7ceXwUgnhoxJuqbi3ezg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUilJ90n1fBFg7ceXwUrn9oxJuqbi3ezg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/palanquin/v5/9XUilJ90n1fBFg7ceXwUyn5oxJuqbi3ezg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Palanquin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme palanquinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.palanquinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle palanquinDarkTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/palanquindark/v6/xn75YHgl1nqmANMB-26xC7yuF_6OTEo9VtfE.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/palanquindark/v6/xn76YHgl1nqmANMB-26xC7yuF8Z6ZW41fcvN2KT4.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/palanquindark/v6/xn76YHgl1nqmANMB-26xC7yuF8ZWYm41fcvN2KT4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/palanquindark/v6/xn76YHgl1nqmANMB-26xC7yuF8YyY241fcvN2KT4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PalanquinDark',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme palanquinDarkTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.palanquinDarkTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pangolinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pangolin/v5/cY9GfjGcW0FPpi-tWPfK5d3aiLBG.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pangolin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pangolinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pangolinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle paprikaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/paprika/v7/8QIJdijZitv49rDfuIgOq7jkAOw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Paprika',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme paprikaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.paprikaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle parisienneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/parisienne/v7/E21i_d3kivvAkxhLEVZpcy96DuKuavM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Parisienne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme parisienneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.parisienneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle passeroOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/passeroone/v11/JTUTjIko8DOq5FeaeEAjgE5B5Arr-s50.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PasseroOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme passeroOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.passeroOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle passionOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/passionone/v10/PbynFmL8HhTPqbjUzux3JHuW_Frg6YoV.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/passionone/v10/Pby6FmL8HhTPqbjUzux3JEMq037owpYcuH8y.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/passionone/v10/Pby6FmL8HhTPqbjUzux3JEMS0X7owpYcuH8y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PassionOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme passionOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.passionOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pathwayGothicOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pathwaygothicone/v8/MwQrbgD32-KAvjkYGNUUxAtW7pEBwx-dTFxeb80flQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PathwayGothicOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pathwayGothicOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pathwayGothicOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle patrickHandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/patrickhand/v13/LDI1apSQOAYtSuYWp8ZhfYeMWcjKm7sp8g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PatrickHand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme patrickHandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.patrickHandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle patrickHandSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/patrickhandsc/v7/0nkwC9f7MfsBiWcLtY65AWDK873ViSi6JQc7Vg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PatrickHandSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme patrickHandSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.patrickHandSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pattayaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pattaya/v5/ea8ZadcqV_zkHY-XNdCn92ZEmVs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pattaya',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pattayaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pattayaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle patuaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/patuaone/v10/ZXuke1cDvLCKLDcimxBI5PNvNA9LuA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PatuaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme patuaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.patuaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pavanamTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pavanam/v4/BXRrvF_aiezLh0xPDOtQ9Wf0QcE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pavanam',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pavanamTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pavanamTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle paytoneOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/paytoneone/v12/0nksC9P7MfYHj2oFtYm2CiTqivr9iBq_.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PaytoneOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme paytoneOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.paytoneOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle peddanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/peddana/v7/aFTU7PBhaX89UcKWhh2aBYyMcKw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Peddana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme peddanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.peddanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle peraltaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/peralta/v7/hYkJPu0-RP_9d3kRGxAhrv956B8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Peralta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme peraltaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.peraltaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle permanentMarkerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/permanentmarker/v9/Fh4uPib9Iyv2ucM6pGQMWimMp004HaqIfrT5nlk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PermanentMarker',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme permanentMarkerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.permanentMarkerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle petitFormalScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/petitformalscript/v7/B50TF6xQr2TXJBnGOFME6u5OR83oRP5qoHnqP4gZSiE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PetitFormalScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme petitFormalScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.petitFormalScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle petronaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/petrona/v8/mtG64_NXL7bZo9XXsXVStGsRwCU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Petrona',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme petronaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.petronaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.petronaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.petronaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.petronaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.petronaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.petronaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.petronaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.petronaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.petronaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.petronaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.petronaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.petronaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.petronaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle philosopherTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/philosopher/v11/vEFV2_5QCwIS4_Dhez5jcVBpRUwU08qe.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/philosopher/v11/vEFX2_5QCwIS4_Dhez5jcWBrT0g21tqeR7c.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/philosopher/v11/vEFI2_5QCwIS4_Dhez5jcWjVamgc-NaXXq7H.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/philosopher/v11/vEFK2_5QCwIS4_Dhez5jcWBrd_QZ8tK1W77HtMo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Philosopher',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme philosopherTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.philosopherTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle piedraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/piedra/v8/ke8kOg8aN0Bn7hTunEyHN_M3gA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Piedra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme piedraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.piedraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.piedraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.piedraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.piedraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.piedraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.piedraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.piedraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.piedraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.piedraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.piedraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.piedraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.piedraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.piedraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pinyonScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pinyonscript/v9/6xKpdSJbL9-e9LuoeQiDRQR8aOLQO4bhiDY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PinyonScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pinyonScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pinyonScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pirataOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pirataone/v8/I_urMpiDvgLdLh0fAtoftiiEr5_BdZ8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PirataOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pirataOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pirataOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle plasterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/plaster/v11/DdTm79QatW80eRh4Ei5JOtLOeLI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Plaster',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme plasterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.plasterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.plasterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.plasterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.plasterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.plasterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.plasterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.plasterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.plasterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.plasterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.plasterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.plasterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.plasterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.plasterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle playTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/play/v11/6aez4K2oVqwIjtI8Hp8Tx3A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/play/v11/6ae84K2oVqwItm4TOpc423nTJTM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Play',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme playTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.playTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.playTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.playTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.playTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.playTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.playTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.playTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.playTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.playTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.playTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.playTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.playTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.playTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle playballTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/playball/v9/TK3gWksYAxQ7jbsKcj8Dl-tPKo2t.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Playball',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme playballTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.playballTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.playballTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.playballTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.playballTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.playballTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.playballTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.playballTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.playballTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.playballTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.playballTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.playballTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.playballTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.playballTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle playfairDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFiD-vYSZviVYUb_rj3ij__anPXPTvSgWE_-xU.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFkD-vYSZviVYUb_rj3ij__anPXDTnYhUM66xV7PQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFlD-vYSZviVYUb_rj3ij__anPXBYf9pWkU5xxiJKY.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFnD-vYSZviVYUb_rj3ij__anPXDTngOWwe4z5nNKaV_w.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFlD-vYSZviVYUb_rj3ij__anPXBb__pWkU5xxiJKY.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/playfairdisplay/v15/nuFnD-vYSZviVYUb_rj3ij__anPXDTngAW4e4z5nNKaV_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PlayfairDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme playfairDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.playfairDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle playfairDisplaySCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke85OhoaMkR6-hSn7kbHVoFf7ZfgMPr_pb4GEcM2M4s.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke87OhoaMkR6-hSn7kbHVoFf7ZfgMPr_lbwMFeEzI4sNKg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke80OhoaMkR6-hSn7kbHVoFf7ZfgMPr_nQIpNcsdL4IUMyE.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke82OhoaMkR6-hSn7kbHVoFf7ZfgMPr_lbw0qc4XK6ARIyH5IA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke80OhoaMkR6-hSn7kbHVoFf7ZfgMPr_nTorNcsdL4IUMyE.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/playfairdisplaysc/v9/ke82OhoaMkR6-hSn7kbHVoFf7ZfgMPr_lbw0kcwXK6ARIyH5IA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PlayfairDisplaySC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme playfairDisplaySCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.playfairDisplaySCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle podkovaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/podkova/v15/K2FufZ1EmftJSV9VQpXb1lo9vC3nZWtFzcU4EoporSHH.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/podkova/v15/K2FufZ1EmftJSV9VQpXb1lo9vC3nZWt3zcU4EoporSHH.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/podkova/v15/K2FufZ1EmftJSV9VQpXb1lo9vC3nZWubysU4EoporSHH.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/podkova/v15/K2FufZ1EmftJSV9VQpXb1lo9vC3nZWuiysU4EoporSHH.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/podkova/v15/K2FufZ1EmftJSV9VQpXb1lo9vC3nZWvFysU4EoporSHH.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Podkova',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme podkovaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.podkovaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle poiretOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/poiretone/v8/UqyVK80NJXN4zfRgbdfbk5lWVscxdKE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PoiretOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme poiretOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.poiretOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pollerOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pollerone/v9/ahccv82n0TN3gia5E4Bud-lbgUS5u0s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PollerOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pollerOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pollerOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle polyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/poly/v10/MQpb-W6wKNitRLCAq2Lpris.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/poly/v10/MQpV-W6wKNitdLKKr0DsviuGWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Poly',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme polyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.polyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.polyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.polyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.polyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.polyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.polyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.polyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.polyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.polyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.polyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.polyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.polyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.polyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pompiereTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pompiere/v9/VEMyRoxis5Dwuyeov6Wt5jDtreOL.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pompiere',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pompiereTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pompiereTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pontanoSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pontanosans/v7/qFdD35GdgYR8EzR6oBLDHa3qwjUMg1siNQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PontanoSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pontanoSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pontanoSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle poorStoryTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/poorstory/v8/jizfREFUsnUct9P6cDfd4OmnLD0Z4zM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PoorStory',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme poorStoryTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.poorStoryTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle poppinsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/poppins/v9/pxiGyp8kv8JHgFVrLPTed3FBGPaTSQ.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiAyp8kv8JHgFVrJJLmE3tFOvODSVFF.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLFj_V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLmv1plEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLDz8V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLm21llEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/poppins/v9/pxiEyp8kv8JHgFVrFJDUc1NECPY.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiGyp8kv8JHgFVrJJLed3FBGPaTSQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLGT9V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLmg1hlEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLEj6V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLmr19lEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLCz7V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLmy15lEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLDD4V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLm111lEN2PQEhcqw.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/poppins/v9/pxiByp8kv8JHgFVrLBT5V1tvFP-KUEg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/poppins/v9/pxiDyp8kv8JHgFVrJJLm81xlEN2PQEhcqw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Poppins',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme poppinsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.poppinsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle portLligatSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/portlligatsans/v8/kmKmZrYrGBbdN1aV7Vokow6Lw4s4l7N0Tx4xEcQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PortLligatSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme portLligatSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.portLligatSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle portLligatSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/portlligatslab/v8/LDIpaoiQNgArA8kR7ulhZ8P_NYOss7ob9yGLmfI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PortLligatSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme portLligatSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.portLligatSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pragatiNarrowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pragatinarrow/v5/vm8vdRf0T0bS1ffgsPB7WZ-mD17_ytN3M48a.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/pragatinarrow/v5/vm8sdRf0T0bS1ffgsPB7WZ-mD2ZD5fd_GJMTlo_4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PragatiNarrow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pragatiNarrowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pragatiNarrowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle prataTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/prata/v10/6xKhdSpbNNCT-vWIAG_5LWwJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Prata',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme prataTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.prataTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.prataTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.prataTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.prataTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.prataTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.prataTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.prataTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.prataTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.prataTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.prataTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.prataTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.prataTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.prataTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle preahvihearTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/preahvihear/v11/6NUS8F-dNQeEYhzj7uluxswE49FJf8Wv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Preahvihear',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme preahvihearTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.preahvihearTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pressStart2PTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pressstart2p/v8/e3t4euO8T-267oIAQAu6jDQyK0nSgPJE4580.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PressStart2P',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pressStart2PTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pressStart2PTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle pridiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/pridi/v5/2sDdZG5JnZLfkc1SiE0jRUG0AqUc.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/pridi/v5/2sDdZG5JnZLfkc02i00jRUG0AqUc.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/pridi/v5/2sDQZG5JnZLfkfWao2krbl29.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/pridi/v5/2sDdZG5JnZLfkc1uik0jRUG0AqUc.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/pridi/v5/2sDdZG5JnZLfkc1CjU0jRUG0AqUc.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/pridi/v5/2sDdZG5JnZLfkc0mjE0jRUG0AqUc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Pridi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme pridiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.pridiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.pridiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.pridiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.pridiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.pridiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.pridiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.pridiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.pridiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.pridiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.pridiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.pridiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.pridiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.pridiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle princessSofiaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/princesssofia/v8/qWczB6yguIb8DZ_GXZst16n7GRz7mDUoupoI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PrincessSofia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme princessSofiaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.princessSofiaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle procionoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/prociono/v9/r05YGLlR-KxAf9GGO8upyDYtStiJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Prociono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme procionoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.procionoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.procionoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.procionoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.procionoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.procionoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.procionoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.procionoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.procionoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.procionoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.procionoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.procionoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.procionoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.procionoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle promptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/prompt/v4/-W_9XJnvUD7dzB2CA9oYREcjeo0k.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_7XJnvUD7dzB2KZeJ8TkMBf50kbiM.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2Cr_s4bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeLQb2MrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2Cy_g4bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeK0bGMrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/prompt/v4/-W__XJnvUD7dzB26Z9AcZkIzeg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_9XJnvUD7dzB2KZdoYREcjeo0k.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2Ck_k4bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeLsbWMrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2Cv_44bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeLAamMrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2C2_84bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeKka2MrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2Cx_w4bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeK4aGMrUZEtdzow.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/prompt/v4/-W_8XJnvUD7dzB2C4_04bmkvc5Q9dw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/prompt/v4/-W_6XJnvUD7dzB2KZeKcaWMrUZEtdzow.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Prompt',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme promptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.promptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.promptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.promptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.promptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.promptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.promptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.promptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.promptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.promptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.promptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.promptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.promptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.promptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle prostoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/prostoone/v8/OpNJno4VhNfK-RgpwWWxpipfWhXD00c.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ProstoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme prostoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.prostoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle prozaLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjGdGHgj0k1DIQRyUEyyHovftvXWYyz.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjEdGHgj0k1DIQRyUEyyEotdN_1XJyz7zc.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjbdGHgj0k1DIQRyUEyyELbV__fcpC69i6N.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjZdGHgj0k1DIQRyUEyyEotTCvceJSY8z6Np1k.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjbdGHgj0k1DIQRyUEyyEL3UP_fcpC69i6N.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjZdGHgj0k1DIQRyUEyyEotTAfbeJSY8z6Np1k.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjbdGHgj0k1DIQRyUEyyEKTUf_fcpC69i6N.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjZdGHgj0k1DIQRyUEyyEotTGPaeJSY8z6Np1k.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjbdGHgj0k1DIQRyUEyyEKPUv_fcpC69i6N.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/prozalibre/v4/LYjZdGHgj0k1DIQRyUEyyEotTH_ZeJSY8z6Np1k.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ProzaLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme prozaLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.prozaLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle puritanTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/puritan/v11/845YNMgkAJ2VTtIo9JrwRdaI50M.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/puritan/v11/845aNMgkAJ2VTtIoxJj6QfSN90PfXA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/puritan/v11/845dNMgkAJ2VTtIozCbfYd6j-0rGRes.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/puritan/v11/845fNMgkAJ2VTtIoxJjC_dup_2jDVevnLQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Puritan',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme puritanTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.puritanTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.puritanTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.puritanTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.puritanTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.puritanTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.puritanTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.puritanTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.puritanTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.puritanTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.puritanTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.puritanTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.puritanTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.puritanTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle purplePurseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/purplepurse/v8/qWctB66gv53iAp-Vfs4My6qyeBb_ujA4ug.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'PurplePurse',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme purplePurseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.purplePurseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quandoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quando/v8/xMQVuFNaVa6YuW0pC6WzKX_QmA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Quando',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quandoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quandoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quandoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quandoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quandoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quandoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quandoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quandoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quandoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quandoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quandoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quandoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quandoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quandoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quanticoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quantico/v9/rax-HiSdp9cPL3KIF4xsLjxSmlLZ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/quantico/v9/rax4HiSdp9cPL3KIF7xuJDhwn0LZ6T8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/quantico/v9/rax5HiSdp9cPL3KIF7TQARhasU7Q8Cad.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/quantico/v9/rax7HiSdp9cPL3KIF7xuHIRfu0ry9TadML4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Quantico',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quanticoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quanticoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quattrocentoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quattrocento/v11/OZpEg_xvsDZQL_LKIF7q4jPHxGL7f4jFuA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/quattrocento/v11/OZpbg_xvsDZQL_LKIF7q4jP_eE3fd6PZsXcM9w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Quattrocento',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quattrocentoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quattrocentoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quattrocentoSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quattrocentosans/v12/va9c4lja2NVIDdIAAoMR5MfuElaRB3zOvU7eHGHJ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/quattrocentosans/v12/va9a4lja2NVIDdIAAoMR5MfuElaRB0zMt0r8GXHJkLI.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/quattrocentosans/v12/va9Z4lja2NVIDdIAAoMR5MfuElaRB0RykmrWN33AiasJ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/quattrocentosans/v12/va9X4lja2NVIDdIAAoMR5MfuElaRB0zMj_bTPXnijLsJV7E.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'QuattrocentoSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quattrocentoSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quattrocentoSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle questrialTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/questrial/v9/QdVUSTchPBm7nuUeVf7EuStkm20oJA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Questrial',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme questrialTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.questrialTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.questrialTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.questrialTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.questrialTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.questrialTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.questrialTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.questrialTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.questrialTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.questrialTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.questrialTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.questrialTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.questrialTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.questrialTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quicksandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/quicksand/v19/6xK-dSZaM9iE8KbpRA_LJ3z8mH9BOJvgkKEo18G0wx40QDw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quicksand/v19/6xK-dSZaM9iE8KbpRA_LJ3z8mH9BOJvgkP8o18G0wx40QDw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/quicksand/v19/6xK-dSZaM9iE8KbpRA_LJ3z8mH9BOJvgkM0o18G0wx40QDw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/quicksand/v19/6xK-dSZaM9iE8KbpRA_LJ3z8mH9BOJvgkCEv18G0wx40QDw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/quicksand/v19/6xK-dSZaM9iE8KbpRA_LJ3z8mH9BOJvgkBgv18G0wx40QDw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Quicksand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quicksandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quicksandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle quintessentialTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/quintessential/v7/fdNn9sOGq31Yjnh3qWU14DdtjY5wS7kmAyxM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Quintessential',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme quintessentialTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.quintessentialTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle qwigleyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/qwigley/v9/1cXzaU3UGJb5tGoCuVxsi1mBmcE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Qwigley',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme qwigleyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.qwigleyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle racingSansOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/racingsansone/v7/sykr-yRtm7EvTrXNxkv5jfKKyDCwL3rmWpIBtA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RacingSansOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme racingSansOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.racingSansOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle radleyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/radley/v14/LYjDdGzinEIjCN19oAlEpVs3VQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/radley/v14/LYjBdGzinEIjCN1NogNAh14nVcfe.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Radley',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme radleyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.radleyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.radleyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.radleyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.radleyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.radleyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.radleyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.radleyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.radleyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.radleyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.radleyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.radleyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.radleyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.radleyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rajdhaniTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/rajdhani/v9/LDI2apCSOBg7S-QT7pasEcOsc-bGkqIw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rajdhani/v9/LDIxapCSOBg7S-QT7q4AOeekWPrP.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/rajdhani/v9/LDI2apCSOBg7S-QT7pb0EMOsc-bGkqIw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/rajdhani/v9/LDI2apCSOBg7S-QT7pbYF8Osc-bGkqIw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rajdhani/v9/LDI2apCSOBg7S-QT7pa8FsOsc-bGkqIw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rajdhani',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rajdhaniTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rajdhaniTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rakkasTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rakkas/v7/Qw3cZQlNHiblL3j_lttPOeMcCw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rakkas',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rakkasTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rakkasTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ralewayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptsg8zYS_SKggPNwE4ISotrDfGGxA.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptqg8zYS_SKggPNyCgwLoFvL_SWxEMT.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwOIpaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgwgqBPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwIYqaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgw5qNPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptug8zYS_SKggPN-CoCTqluHfE.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptsg8zYS_SKggPNyCgISotrDfGGxA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwN4raqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgwvqJPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwPIsaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgwkqVPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwJYtaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgw9qRPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwIouaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgw6qdPBdqazVoK4A.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqFFAfif3Vo.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/raleway/v14/1Ptpg8zYS_SKggPNyCgwzqZPBdqazVoK4A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Raleway',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ralewayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ralewayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ralewayDotsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ralewaydots/v7/6NUR8FifJg6AfQvzpshgwJ8kyf9Fdty2ew.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RalewayDots',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ralewayDotsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ralewayDotsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ramabhadraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ramabhadra/v9/EYq2maBOwqRW9P1SQ83LehNGX5uWw3o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ramabhadra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ramabhadraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ramabhadraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ramarajaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ramaraja/v4/SlGTmQearpYAYG1CABIkqnB6aSQU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ramaraja',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ramarajaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ramarajaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ramblaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rambla/v7/snfrs0ip98hx6mr0I7IONthkwQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/rambla/v7/snfps0ip98hx6mrEIbgKFN10wYKa.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rambla/v7/snfos0ip98hx6mrMn50qPvN4yJuDYQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/rambla/v7/snfus0ip98hx6mrEIYC2O_l86p6TYS-Y.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rambla',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ramblaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ramblaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rammettoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rammettoone/v8/LhWiMV3HOfMbMetJG3lQDpp9Mvuciu-_SQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RammettoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rammettoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rammettoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ranchersTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ranchers/v7/zrfm0H3Lx-P2Xvs2AoDYDC79XTHv.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ranchers',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ranchersTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ranchersTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ranchoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rancho/v10/46kulbzmXjLaqZRlbWXgd0RY1g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rancho',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ranchoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ranchoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rangaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ranga/v5/C8ct4cYisGb28p6CLDwZwmGE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ranga/v5/C8cg4cYisGb28qY-AxgR6X2NZAn2.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ranga',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rangaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rangaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rangaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rangaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rangaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rangaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rangaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rangaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rangaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rangaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rangaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rangaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rangaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rangaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rasaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/rasa/v5/xn7gYHIn1mWmdg52sgC7S9XdZN8.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rasa/v5/xn7vYHIn1mWmTqJelgiQV9w.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/rasa/v5/xn7gYHIn1mWmdlZ3sgC7S9XdZN8.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/rasa/v5/xn7gYHIn1mWmdnpwsgC7S9XdZN8.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rasa/v5/xn7gYHIn1mWmdh5xsgC7S9XdZN8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rasa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rasaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rasaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rasaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rasaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rasaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rasaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rasaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rasaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rasaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rasaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rasaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rasaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rasaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rasaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rationaleTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rationale/v11/9XUnlJ92n0_JFxHIfHcsdlFMzLC2Zw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rationale',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rationaleTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rationaleTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle raviPrakashTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/raviprakash/v6/gokpH6fsDkVrF9Bv9X8SOAKHmNZEq6TTFw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RaviPrakash',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme raviPrakashTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.raviPrakashTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle redHatDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIQ7wUr0m80wwYf0QCXZzYzUoTQ-jSgZYvdCQ.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIS7wUr0m80wwYf0QCXZzYzUoTg-D6kR47NCV5Z.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIV7wUr0m80wwYf0QCXZzYzUoToDh2EbaDBAEdAbw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIX7wUr0m80wwYf0QCXZzYzUoTg-AZQbqrFIkJQb7zU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIV7wUr0m80wwYf0QCXZzYzUoToRhuEbaDBAEdAbw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIX7wUr0m80wwYf0QCXZzYzUoTg-AYYaKrFIkJQb7zU.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIV7wUr0m80wwYf0QCXZzYzUoTofhmEbaDBAEdAbw.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/redhatdisplay/v3/8vIX7wUr0m80wwYf0QCXZzYzUoTg-AYgaqrFIkJQb7zU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RedHatDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme redHatDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.redHatDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle redHatTextTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQXbohi_ic6B3yVSzGBrMxgb60sE8yZPA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQJbohi_ic6B3yVSzGBrMxQbacoMcmJPECN.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQIbohi_ic6B3yVSzGBrMxYm4QIG-eFNVmULg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQKbohi_ic6B3yVSzGBrMxQbZ_cGO2BF1yELmgy.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQIbohi_ic6B3yVSzGBrMxY04IIG-eFNVmULg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/redhattext/v2/RrQKbohi_ic6B3yVSzGBrMxQbZ-UHu2BF1yELmgy.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RedHatText',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme redHatTextTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.redHatTextTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle redressedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/redressed/v10/x3dickHUbrmJ7wMy9MsBfPACvy_1BA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Redressed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme redressedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.redressedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.redressedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.redressedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.redressedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.redressedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.redressedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.redressedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.redressedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.redressedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.redressedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.redressedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.redressedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.redressedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle reemKufiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/reemkufi/v7/2sDcZGJLip7W2J7v7wQDb2-4C7wFZQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ReemKufi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme reemKufiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.reemKufiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle reenieBeanieTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/reeniebeanie/v10/z7NSdR76eDkaJKZJFkkjuvWxbP2_qoOgf_w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ReenieBeanie',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme reenieBeanieTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.reenieBeanieTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle revaliaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/revalia/v7/WwkexPimBE2-4ZPEeVruNIgJSNM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Revalia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme revaliaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.revaliaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rhodiumLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rhodiumlibre/v4/1q2AY5adA0tn_ukeHcQHqpx6pETLeo2gm2U.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RhodiumLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rhodiumLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rhodiumLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ribeyeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ribeye/v8/L0x8DFMxk1MP9R3RvPCmRSlUig.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ribeye',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ribeyeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ribeyeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ribeyeMarrowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ribeyemarrow/v9/GFDsWApshnqMRO2JdtRZ2d0vEAwTVWgKdtw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RibeyeMarrow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ribeyeMarrowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ribeyeMarrowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle righteousTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/righteous/v8/1cXxaUPXBpj2rGoU7C9mj3uEicG01A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Righteous',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme righteousTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.righteousTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.righteousTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.righteousTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.righteousTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.righteousTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.righteousTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.righteousTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.righteousTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.righteousTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.righteousTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.righteousTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.righteousTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.righteousTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle risqueTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/risque/v7/VdGfAZUfHosahXxoCUYVBJ-T5g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Risque',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme risqueTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.risqueTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.risqueTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.risqueTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.risqueTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.risqueTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.risqueTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.risqueTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.risqueTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.risqueTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.risqueTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.risqueTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.risqueTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.risqueTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle robotoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/roboto/v20/KFOkCnqEu92Fr1MmgWxPKTM1K9nz.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOiCnqEu92Fr1Mu51QrIzcXLsnzjYk.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmSU5vAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOjCnqEu92Fr1Mu51TjARc9AMX6lJBP.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOkCnqEu92Fr1Mu52xPKTM1K9nz.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmEU9vAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOjCnqEu92Fr1Mu51S7ABc9AMX6lJBP.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmWUlvAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOjCnqEu92Fr1Mu51TzBhc9AMX6lJBP.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/roboto/v20/KFOlCnqEu92Fr1MmYUtvAx05IsDqlA.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/roboto/v20/KFOjCnqEu92Fr1Mu51TLBBc9AMX6lJBP.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Roboto',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme robotoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.robotoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.robotoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.robotoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.robotoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.robotoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.robotoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.robotoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.robotoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.robotoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.robotoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.robotoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.robotoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.robotoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle robotoCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVi2ZhZI2eCN5jzbjEETS9weq8-33mZKCMSbvtdYyQ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVg2ZhZI2eCN5jzbjEETS9weq8-19eDpCEYatlYcyRi4A.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVl2ZhZI2eCN5jzbjEETS9weq8-59WxDCs5cvI.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVj2ZhZI2eCN5jzbjEETS9weq8-19e7CAk8YvJEeg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVi2ZhZI2eCN5jzbjEETS9weq8-32meKCMSbvtdYyQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/robotocondensed/v18/ieVg2ZhZI2eCN5jzbjEETS9weq8-19eDtCYYatlYcyRi4A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RobotoCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme robotoCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.robotoCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle robotoMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/robotomono/v7/L0x7DF4xlVMF-BfR8bXMIjAoq3qcW7KCG1w.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xlDF4xlVMF-BfR8bXMIjhOkx6WX5CHC1wnFw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDgiVq2db6LAkU-.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xmDF4xlVMF-BfR8bXMIjhOk9a0f7qpB1U-Drg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/robotomono/v7/L0x5DF4xlVMF-BfR8bXMIghMoX6-XqKC.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/robotomono/v7/L0x7DF4xlVMF-BfR8bXMIjhOq3qcW7KCG1w.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjC4iFq2db6LAkU-.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xmDF4xlVMF-BfR8bXMIjhOk461f7qpB1U-Drg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xkDF4xlVMF-BfR8bXMIjDwjlq2db6LAkU-.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/robotomono/v7/L0xmDF4xlVMF-BfR8bXMIjhOk8azf7qpB1U-Drg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RobotoMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme robotoMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.robotoMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle robotoSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/robotoslab/v9/BngOUXZYTXPIvIBgJJSb6u-u5qCr5RCDY_k.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/robotoslab/v9/BngRUXZYTXPIvIBgJJSb6u9mxICByxyKeuDp.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/robotoslab/v9/BngMUXZYTXPIvIBgJJSb6tfK7KSJ4ACD.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/robotoslab/v9/BngRUXZYTXPIvIBgJJSb6u92w4CByxyKeuDp.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RobotoSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme robotoSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.robotoSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rochesterTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rochester/v10/6ae-4KCqVa4Zy6Fif-Uy31vWNTMwoQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rochester',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rochesterTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rochesterTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rockSaltTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rocksalt/v10/MwQ0bhv11fWD6QsAVOZbsEk7hbBWrA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RockSalt',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rockSaltTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rockSaltTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rokkittTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdG35qfgYFjGy5hmCWCc_TOyh4Qig.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmImjU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmO2gU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdE35qfgYFjGy5hoEGId9bL2h4.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmLWhU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmJmmU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmP2nU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmOGkU97gxhcJk1s.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/rokkitt/v14/qFdB35qfgYFjGy5hmMWlU97gxhcJk1s.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rokkitt',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rokkittTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rokkittTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle romanescoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/romanesco/v8/w8gYH2ozQOY7_r_J7mSn3HwLqOqSBg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Romanesco',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme romanescoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.romanescoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ropaSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ropasans/v9/EYqxmaNOzLlWtsZSScyKWjloU5KP2g.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ropasans/v9/EYq3maNOzLlWtsZSScy6WDNscZef2mNE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RopaSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ropaSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ropaSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rosarioTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/rosario/v16/xfuu0WDhWW_fOEoY8l_VPNZfB7jPM69GCWczd-YnOzUD.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rosario/v16/xfuu0WDhWW_fOEoY8l_VPNZfB7jPM68YCWczd-YnOzUD.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/rosario/v16/xfuu0WDhWW_fOEoY8l_VPNZfB7jPM68qCWczd-YnOzUD.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/rosario/v16/xfuu0WDhWW_fOEoY8l_VPNZfB7jPM6_GDmczd-YnOzUD.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rosario/v16/xfuu0WDhWW_fOEoY8l_VPNZfB7jPM6__Dmczd-YnOzUD.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/rosario/v16/xfug0WDhWW_fOEoY2Fbnww42bCJhNLrQStFwfeIFPiUDn08.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/rosario/v16/xfug0WDhWW_fOEoY2Fbnww42bCJhNLrQSo9wfeIFPiUDn08.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/rosario/v16/xfug0WDhWW_fOEoY2Fbnww42bCJhNLrQSr1wfeIFPiUDn08.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/rosario/v16/xfug0WDhWW_fOEoY2Fbnww42bCJhNLrQSlF3feIFPiUDn08.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/rosario/v16/xfug0WDhWW_fOEoY2Fbnww42bCJhNLrQSmh3feIFPiUDn08.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rosario',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rosarioTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rosarioTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rosarivoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rosarivo/v7/PlI-Fl2lO6N9f8HaNAeC2nhMnNy5.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/rosarivo/v7/PlI4Fl2lO6N9f8HaNDeA0Hxumcy5ZX8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rosarivo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rosarivoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rosarivoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rougeScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rougescript/v8/LYjFdGbiklMoCIQOw1Ep3S4PVPXbUJWq9g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RougeScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rougeScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rougeScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rozhaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rozhaone/v7/AlZy_zVFtYP12Zncg2khdXf4XB0Tow.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RozhaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rozhaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rozhaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rubikTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/rubik/v9/iJWHBXyIfDnIV7Fqj1ma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/rubik/v9/iJWBBXyIfDnIV7nEldWY8WX06IB_18o.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rubik/v9/iJWKBXyIfDnIV4nGp32S0H3f.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/rubik/v9/iJWEBXyIfDnIV7nErXmw1W3f9Ik.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/rubik/v9/iJWHBXyIfDnIV7Eyjlma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/rubik/v9/iJWBBXyIfDnIV7nElY2Z8WX06IB_18o.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rubik/v9/iJWHBXyIfDnIV7F6iFma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/rubik/v9/iJWBBXyIfDnIV7nElcWf8WX06IB_18o.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/rubik/v9/iJWHBXyIfDnIV7FCilma-2HW7ZB_.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/rubik/v9/iJWBBXyIfDnIV7nElf2d8WX06IB_18o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rubik',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rubikTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rubikTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rubikTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rubikTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rubikTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rubikTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rubikTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rubikTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rubikTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rubikTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rubikTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rubikTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rubikTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rubikTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rubikMonoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rubikmonoone/v8/UqyJK8kPP3hjw6ANTdfRk9YSN-8wRqQrc_j9.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RubikMonoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rubikMonoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rubikMonoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rudaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ruda/v11/k3kfo8YQJOpFmn8XadbJM0A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ruda/v11/k3kQo8YQJOpFosM4Td7iL0nAMaM.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/ruda/v11/k3kQo8YQJOpFovs6Td7iL0nAMaM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ruda',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rudaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rudaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rudaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rudaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rudaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rudaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rudaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rudaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rudaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rudaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rudaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rudaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rudaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rudaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rufinaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rufina/v7/Yq6V-LyURyLy-aKyoxRktOdClg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/rufina/v7/Yq6W-LyURyLy-aKKHztAvMxenxE0SA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rufina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rufinaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rufinaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rugeBoogieTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rugeboogie/v10/JIA3UVFwbHRF_GIWSMhKNROiPzUveSxy.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RugeBoogie',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rugeBoogieTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rugeBoogieTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rulukoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ruluko/v7/xMQVuFNZVaODtm0pC6WzKX_QmA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ruluko',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rulukoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rulukoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle rumRaisinTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rumraisin/v7/nwpRtKu3Ih8D5avB4h2uJ3-IywA7eMM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RumRaisin',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme rumRaisinTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.rumRaisinTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ruslanDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ruslandisplay/v10/Gw6jwczl81XcIZuckK_e3UpfdzxrldyFvm1n.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RuslanDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ruslanDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ruslanDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle russoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/russoone/v8/Z9XUDmZRWg6M1LvRYsH-yMOInrib9Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'RussoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme russoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.russoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ruthieTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ruthie/v10/gokvH63sGkdqXuU9lD53Q2u_mQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ruthie',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ruthieTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ruthieTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ryeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/rye/v7/r05XGLJT86YDFpTsXOqx4w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Rye',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ryeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ryeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ryeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ryeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ryeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ryeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ryeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ryeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ryeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ryeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ryeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ryeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ryeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ryeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sacramentoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sacramento/v7/buEzpo6gcdjy0EiZMBUG0CoV_NxLeiw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sacramento',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sacramentoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sacramentoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sahityaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sahitya/v4/6qLAKZkOuhnuqlJAaScFPywEDnI.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sahitya/v4/6qLFKZkOuhnuqlJAUZsqGyQvEnvSexI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sahitya',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sahityaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sahityaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sailTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sail/v10/DPEjYwiBxwYJFBTDADYAbvw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sail',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sailTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sailTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sailTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sailTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sailTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sailTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sailTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sailTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sailTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sailTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sailTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sailTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sailTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sailTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sairaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/saira/v4/mem-Ya2wxmKQyNFETZY_VrUfTck.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNHobLYVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNGMb7YVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/saira/v4/memwYa2wxmKQyOkgR5IdU6Uf.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNHUbrYVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNH4abYVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNGcaLYVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNGAa7YVeLkWVNBt.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/saira/v4/mem9Ya2wxmKQyNGkarYVeLkWVNBt.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Saira',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sairaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sairaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sairaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sairaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sairaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sairaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sairaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sairaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sairaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sairaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sairaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sairaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sairaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sairaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sairaCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRMQgErUN8XuHNEtX81i9TmEkrnwetA2omSrzS8.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnbcpg8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnCclg8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJROQgErUN8XuHNEtX81i9TmEkrfpeFE-IyCrw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnUchg8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnfc9g8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnGc5g8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnBc1g8Keepi2lHw.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sairacondensed/v5/EJRLQgErUN8XuHNEtX81i9TmEkrnIcxg8Keepi2lHw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SairaCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sairaCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sairaCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sairaExtraCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFsOHYr-vcC7h8MklGBkrvmUG9rbpkisrTri0jx9i5ss3a3.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrJ2nR3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrQ2rR3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFiOHYr-vcC7h8MklGBkrvmUG9rbpkisrTT70L11Ct8sw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrG2vR3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrN2zR3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrU23R3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTrT27R3ABgum-uoQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sairaextracondensed/v5/-nFvOHYr-vcC7h8MklGBkrvmUG9rbpkisrTra2_R3ABgum-uoQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SairaExtraCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sairaExtraCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sairaExtraCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sairaSemiCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MN6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXdvaOM8rXT-8V8.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXfDScMWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXenSsMWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MD6c-2-nnJkHxyCjRcnMHcWVWV1cWRRU8LYuceqGT-.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXf_S8MWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXfTTMMWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXe3TcMWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXerTsMWg3j36Ebz.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sairasemicondensed/v5/U9MM6c-2-nnJkHxyCjRcnMHcWVWV1cWRRXePT8MWg3j36Ebz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SairaSemiCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sairaSemiCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sairaSemiCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sairaStencilOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sairastencilone/v1/SLXSc03I6HkvZGJ1GvvipLoYSTEL9AsMawif2YQ2.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SairaStencilOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sairaStencilOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sairaStencilOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle salsaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/salsa/v9/gNMKW3FiRpKj-imY8ncKEZez.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Salsa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme salsaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.salsaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.salsaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.salsaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.salsaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.salsaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.salsaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.salsaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.salsaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.salsaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.salsaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.salsaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.salsaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.salsaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sanchezTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sanchez/v7/Ycm2sZJORluHnXbITm5b_BwE1l0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sanchez/v7/Ycm0sZJORluHnXbIfmxR-D4Bxl3gkw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sanchez',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sanchezTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sanchezTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sancreekTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sancreek/v10/pxiHypAnsdxUm159X7D-XV9NEe-K.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sancreek',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sancreekTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sancreekTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sansitaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sansita/v4/QldONTRRphEb_-V7HBm7TXFf3qw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sansita/v4/QldMNTRRphEb_-V7LBuxSVNazqx2xg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sansita/v4/QldLNTRRphEb_-V7JKWUaXl0wqVv3_g.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/sansita/v4/QldJNTRRphEb_-V7LBuJ9Xx-xodqz_joDQ.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sansita/v4/QldLNTRRphEb_-V7JLmXaXl0wqVv3_g.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/sansita/v4/QldJNTRRphEb_-V7LBuJ6X9-xodqz_joDQ.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sansita/v4/QldLNTRRphEb_-V7JJ2WaXl0wqVv3_g.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/sansita/v4/QldJNTRRphEb_-V7LBuJzX5-xodqz_joDQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sansita',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sansitaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sansitaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sarabunTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVhJx26TKEr37c9YHZJmnYI5gnOpg.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVnJx26TKEr37c9aBBx_nwMxAzephhN.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YNpoulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxUl0s7iLSrwFUlw.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YL5rulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxNl4s7iLSrwFUlw.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVjJx26TKEr37c9WBJDnlQN9gk.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVhJx26TKEr37c9aBBJmnYI5gnOpg.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YOZqulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxbl8s7iLSrwFUlw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YMptulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxQlgs7iLSrwFUlw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YK5sulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxJlks7iLSrwFUlw.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVmJx26TKEr37c9YLJvulwm6gDXvwE.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/sarabun/v7/DtVkJx26TKEr37c9aBBxOlos7iLSrwFUlw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sarabun',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sarabunTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sarabunTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle saralaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sarala/v4/uK_y4riEZv4o1w9RCh0TMv6EXw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sarala/v4/uK_x4riEZv4o1w9ptjI3OtWYVkMpXA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sarala',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme saralaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.saralaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.saralaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.saralaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.saralaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.saralaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.saralaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.saralaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.saralaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.saralaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.saralaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.saralaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.saralaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.saralaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sarinaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sarina/v8/-F6wfjF3ITQwasLhLkDUriBQxw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sarina',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sarinaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sarinaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sarpanchTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sarpanch/v5/hESy6Xt4NCpRuk6Pzh2ARIrX_20n.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sarpanch/v5/hES16Xt4NCpRuk6PziV0ba7f1HEuRHkM.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sarpanch/v5/hES16Xt4NCpRuk6PziVYaq7f1HEuRHkM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sarpanch/v5/hES16Xt4NCpRuk6PziU8a67f1HEuRHkM.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sarpanch/v5/hES16Xt4NCpRuk6PziUgaK7f1HEuRHkM.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sarpanch/v5/hES16Xt4NCpRuk6PziUEaa7f1HEuRHkM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sarpanch',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sarpanchTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sarpanchTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle satisfyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/satisfy/v10/rP2Hp2yn6lkG50LoOZSCHBeHFl0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Satisfy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme satisfyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.satisfyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sawarabiGothicTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sawarabigothic/v8/x3d4ckfVaqqa-BEj-I9mE65u3k3NBSk3E2YljQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SawarabiGothic',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sawarabiGothicTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sawarabiGothicTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sawarabiMinchoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sawarabimincho/v10/8QIRdiDaitzr7brc8ahpxt6GcIJTLahP46UDUw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SawarabiMincho',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sawarabiMinchoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sawarabiMinchoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle scadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/scada/v8/RLpxK5Pv5qumeWJoxzUobkvv.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/scada/v8/RLp_K5Pv5qumeVJqzTEKa1vvffg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/scada/v8/RLp8K5Pv5qumeVrU6BEgRVfmZOE5.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/scada/v8/RLp6K5Pv5qumeVJq9Y0lT1PEYfE5p6g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Scada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme scadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.scadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.scadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.scadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.scadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.scadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.scadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.scadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.scadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.scadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.scadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.scadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.scadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.scadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle scheherazadeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/scheherazade/v17/YA9Ur0yF4ETZN60keViq1kQgt5OohvbJ9A.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/scheherazade/v17/YA9Lr0yF4ETZN60keViq1kQYC7yMjt3V_dB0Yw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Scheherazade',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme scheherazadeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.scheherazadeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle schoolbellTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/schoolbell/v10/92zQtBZWOrcgoe-fgnJIVxIQ6mRqfiQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Schoolbell',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme schoolbellTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.schoolbellTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle scopeOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/scopeone/v6/WBLnrEXKYFlGHrOKmGD1W0_MJMGxiQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ScopeOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme scopeOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.scopeOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle seaweedScriptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/seaweedscript/v7/bx6cNx6Tne2pxOATYE8C_Rsoe0WJ-KcGVbLW.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SeaweedScript',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme seaweedScriptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.seaweedScriptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle secularOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/secularone/v4/8QINdiTajsj_87rMuMdKypDlMul7LJpK.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SecularOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme secularOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.secularOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sedgwickAveTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sedgwickave/v5/uK_04rKEYuguzAcSYRdWTJq8Xmg1Vcf5JA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SedgwickAve',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sedgwickAveTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sedgwickAveTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sedgwickAveDisplayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sedgwickavedisplay/v5/xfuu0XPgU3jZPUoUo3ScvmPi-NapQ8OxM2czd-YnOzUD.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SedgwickAveDisplay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sedgwickAveDisplayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sedgwickAveDisplayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sevillanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sevillana/v8/KFOlCnWFscmDt1Bfiy1vAx05IsDqlA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sevillana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sevillanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sevillanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle seymourOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/seymourone/v7/4iCp6Khla9xbjQpoWGGd0myIPYBvgpUI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SeymourOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme seymourOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.seymourOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shadowsIntoLightTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shadowsintolight/v9/UqyNK9UOIntux_czAvDQx_ZcHqZXBNQDcsr4xzSMYA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ShadowsIntoLight',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shadowsIntoLightTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shadowsIntoLightTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shadowsIntoLightTwoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shadowsintolighttwo/v7/4iC86LVlZsRSjQhpWGedwyOoW-0A6_kpsyNmlAvNGLNnIF0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ShadowsIntoLightTwo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shadowsIntoLightTwoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shadowsIntoLightTwoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shantiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shanti/v11/t5thIREMM4uSDgzgU0ezpKfwzA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Shanti',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shantiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shantiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shantiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shantiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shantiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shantiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shantiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shantiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shantiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shantiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shantiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shantiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shantiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shantiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shareTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/share/v10/i7dEIFliZjKNF5VNHLq2cV5d.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/share/v10/i7dKIFliZjKNF6VPFr6UdE5dWFM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/share/v10/i7dJIFliZjKNF63xM56-WkJUQUq7.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/share/v10/i7dPIFliZjKNF6VPLgK7UEZ2RFq7AwU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Share',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shareTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shareTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shareTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shareTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shareTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shareTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shareTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shareTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shareTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shareTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shareTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shareTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shareTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shareTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shareTechTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sharetech/v9/7cHtv4Uyi5K0OeZ7bohUwHoDmTcibrA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ShareTech',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shareTechTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shareTechTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shareTechMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sharetechmono/v9/J7aHnp1uDWRBEqV98dVQztYldFc7pAsEIc3Xew.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ShareTechMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shareTechMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shareTechMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shojumaruTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shojumaru/v7/rax_HiWfutkLLnaKCtlMBBJek0vA8A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Shojumaru',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shojumaruTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shojumaruTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shortStackTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shortstack/v9/bMrzmS2X6p0jZC6EcmPFX-SScX8D0nq6.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ShortStack',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shortStackTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shortStackTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle shrikhandTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/shrikhand/v5/a8IbNovtLWfR7T7bMJwbBIiQ0zhMtA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Shrikhand',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme shrikhandTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.shrikhandTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle siemreapTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/siemreap/v12/Gg82N5oFbgLvHAfNl2YbnA8DLXpe.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Siemreap',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme siemreapTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.siemreapTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sigmarOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sigmarone/v10/co3DmWZ8kjZuErj9Ta3dk6Pjp3Di8U0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SigmarOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sigmarOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sigmarOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle signikaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/signika/v10/vEFU2_JTCgwQ5ejvE_oEI3BDa0AdytM.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/signika/v10/vEFR2_JTCgwQ5ejvK1YsB3hod0k.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/signika/v10/vEFU2_JTCgwQ5ejvE44CI3BDa0AdytM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/signika/v10/vEFU2_JTCgwQ5ejvE-oDI3BDa0AdytM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Signika',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme signikaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.signikaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.signikaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.signikaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.signikaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.signikaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.signikaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.signikaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.signikaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.signikaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.signikaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.signikaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.signikaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.signikaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle signikaNegativeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/signikanegative/v10/E217_cfngu7HiRpPX3ZpNE4kY5zKal6DipHD6z_iXAs.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/signikanegative/v10/E218_cfngu7HiRpPX3ZpNE4kY5zKUvKrrpno9zY.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/signikanegative/v10/E217_cfngu7HiRpPX3ZpNE4kY5zKaiqFipHD6z_iXAs.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/signikanegative/v10/E217_cfngu7HiRpPX3ZpNE4kY5zKak6EipHD6z_iXAs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SignikaNegative',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme signikaNegativeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.signikaNegativeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle simonettaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/simonetta/v10/x3dickHVYrCU5BU15c4BfPACvy_1BA.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/simonetta/v10/x3dkckHVYrCU5BU15c4xfvoGnSrlBBsy.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/simonetta/v10/x3dnckHVYrCU5BU15c45-N0mtwTpDQIrGg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/simonetta/v10/x3d5ckHVYrCU5BU15c4xfsKCsA7tLwc7Gn88.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Simonetta',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme simonettaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.simonettaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle singleDayTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/singleday/v1/LYjHdGDjlEgoAcF95EI5jVoFUNfeQJU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SingleDay',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme singleDayTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.singleDayTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sintonyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sintony/v7/XoHm2YDqR7-98cVUITQnu98ojjs.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sintony/v7/XoHj2YDqR7-98cVUGYgIn9cDkjLp6C8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sintony',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sintonyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sintonyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sirinStencilTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sirinstencil/v8/mem4YaWwznmLx-lzGfN7MdRydchGBq6al6o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SirinStencil',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sirinStencilTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sirinStencilTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sixCapsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sixcaps/v10/6ae_4KGrU7VR7bNmabcS9XXaPCop.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SixCaps',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sixCapsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sixCapsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle skranjiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/skranji/v7/OZpDg_dtriVFNerMYzuuklTm3Ek.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/skranji/v7/OZpGg_dtriVFNerMW4eBtlzNwED-b4g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Skranji',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme skranjiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.skranjiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle slabo13pxTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/slabo13px/v7/11hEGp_azEvXZUdSBzzRcKer2wkYnvI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Slabo13px',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme slabo13pxTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.slabo13pxTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle slabo27pxTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/slabo27px/v6/mFT0WbgBwKPR_Z4hGN2qsxgJ1EJ7i90.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Slabo27px',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme slabo27pxTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.slabo27pxTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle slackeyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/slackey/v10/N0bV2SdQO-5yM0-dKlRaJdbWgdY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Slackey',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme slackeyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.slackeyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle smokumTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/smokum/v10/TK3iWkUbAhopmrdGHjUHte5fKg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Smokum',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme smokumTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.smokumTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.smokumTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.smokumTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.smokumTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.smokumTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.smokumTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.smokumTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.smokumTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.smokumTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.smokumTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.smokumTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.smokumTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.smokumTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle smytheTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/smythe/v10/MwQ3bhT01--coT1BOLh_uGInjA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Smythe',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme smytheTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.smytheTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.smytheTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.smytheTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.smytheTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.smytheTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.smytheTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.smytheTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.smytheTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.smytheTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.smytheTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.smytheTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.smytheTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.smytheTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle snigletTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sniglet/v11/cIf9MaFLtkE3UjaJxCmrYGkHgIs.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/sniglet/v11/cIf4MaFLtkE3UjaJ_ImHRGEsnIJkWL4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sniglet',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme snigletTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.snigletTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.snigletTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.snigletTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.snigletTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.snigletTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.snigletTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.snigletTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.snigletTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.snigletTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.snigletTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.snigletTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.snigletTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.snigletTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle snippetTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/snippet/v9/bWt47f7XfQH9Gupu2v_Afcp9QWc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Snippet',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme snippetTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.snippetTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.snippetTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.snippetTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.snippetTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.snippetTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.snippetTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.snippetTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.snippetTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.snippetTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.snippetTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.snippetTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.snippetTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.snippetTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle snowburstOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/snowburstone/v7/MQpS-WezKdujBsXY3B7I-UT7eZ-UPyacPbo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SnowburstOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme snowburstOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.snowburstOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sofadiOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sofadione/v8/JIA2UVBxdnVBuElZaMFGcDOIETkmYDU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SofadiOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sofadiOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sofadiOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sofiaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sofia/v8/8QIHdirahM3j_vu-sowsrqjk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sofia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sofiaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sofiaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle songMyungTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/songmyung/v8/1cX2aUDWAJH5-EIC7DIhr1GqhcitzeM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SongMyung',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme songMyungTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.songMyungTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sonsieOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sonsieone/v8/PbymFmP_EAnPqbKaoc18YVu80lbp8JM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SonsieOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sonsieOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sonsieOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sortsMillGoudyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sortsmillgoudy/v9/Qw3GZR9MED_6PSuS_50nEaVrfzgEXH0OjpM75PE.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sortsmillgoudy/v9/Qw3AZR9MED_6PSuS_50nEaVrfzgEbH8EirE-9PGLfQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SortsMillGoudy',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sortsMillGoudyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sortsMillGoudyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sourceCodeProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7Pqt8srztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONMbtecv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7PqtlsnztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONN_tucv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_SiYsKILxRpg3hIP6sJ7fM7PqVOuHXvMY3xw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_QiYsKILxRpg3hIP6sJ7fM7PqlOOvTnsMnx3C9.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7PqtzsjztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONMnt-cv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7Pqt4s_ztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONMLsOcv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7Pqths7ztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONNvsecv7Gy0DRzS.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_XiYsKILxRpg3hIP6sJ7fM7PqtvszztO0rzmmkDQ.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/sourcecodepro/v11/HI_ViYsKILxRpg3hIP6sJ7fM7PqlONNXs-cv7Gy0DRzS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SourceCodePro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sourceCodeProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sourceCodeProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sourceSansProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3i94_AkB1v_8CGxg.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKwdSBYKcSV-LCoeQqfX1RYOo3qPZYokRdr3cWWxg40.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3ik4zAkB1v_8CGxg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKwdSBYKcSV-LCoeQqfX1RYOo3qPZZMkhdr3cWWxg40.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xK3dSBYKcSV-LCoeQqfX1RYOo3aP6TkmDZz9g.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xK1dSBYKcSV-LCoeQqfX1RYOo3qPa7gujNj9tmf.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkB1v_8CGxg.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKwdSBYKcSV-LCoeQqfX1RYOo3qPZY4lBdr3cWWxg40.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3ig4vAkB1v_8CGxg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKwdSBYKcSV-LCoeQqfX1RYOo3qPZZclRdr3cWWxg40.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3iu4nAkB1v_8CGxg.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/sourcesanspro/v13/6xKwdSBYKcSV-LCoeQqfX1RYOo3qPZZklxdr3cWWxg40.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SourceSansPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sourceSansProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sourceSansProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sourceSerifProTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sourceserifpro/v7/neIQzD-0qpwxpaWvjeD0X88SAOeaiXM0oSOL2Yw.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/sourceserifpro/v7/neIXzD-0qpwxpaWvjeD0X88SAOeasasahSugxYUvZrI.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sourceserifpro/v7/neIXzD-0qpwxpaWvjeD0X88SAOeasc8bhSugxYUvZrI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SourceSerifPro',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sourceSerifProTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sourceSerifProTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spaceMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spacemono/v5/i7dPIFZifjKcF5UAWdDRUEZ2RFq7AwU.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/spacemono/v5/i7dNIFZifjKcF5UAWdDRYER8QHi-EwWMbg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/spacemono/v5/i7dMIFZifjKcF5UAWdDRaPpZYFKQHwyVd3U.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/spacemono/v5/i7dSIFZifjKcF5UAWdDRYERE_FeaGy6QZ3WfYg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SpaceMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spaceMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spaceMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle specialEliteTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/specialelite/v10/XLYgIZbkc4JPUL5CVArUVL0nhncESXFtUsM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SpecialElite',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme specialEliteTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.specialEliteTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spectralTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9v2s13GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qrXHafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9uSsF3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qtHEafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spectral/v6/rnCr-xNNww_2s0amA-M-mHnOSOuk.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCt-xNNww_2s0amA9M8kn3sTfukQHs.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9vKsV3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qonFafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9vmtl3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qqXCafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9uCt13GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qsHDafOPXHIJErY.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/spectral/v6/rnCs-xNNww_2s0amA9uetF3GY_etWWIJ.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/spectral/v6/rnCu-xNNww_2s0amA9M8qt3AafOPXHIJErY.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Spectral',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spectralTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spectralTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spectralTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spectralTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spectralTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spectralTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spectralTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spectralTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spectralTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spectralTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spectralTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spectralTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spectralTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spectralTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spectralSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs1qwkTXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg26zWN4O3WYZB_sU.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs0OwUTXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg28jVN4O3WYZB_sU.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spectralsc/v5/KtkpALCRZonmalTgyPmRfvWi6WDfFpuc.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/KtkrALCRZonmalTgyPmRfsWg42T9E4ucRY8.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs1WwETXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg25DUN4O3WYZB_sU.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs16x0TXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg27zTN4O3WYZB_sU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs0exkTXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg29jSN4O3WYZB_sU.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk0ALCRZonmalTgyPmRfs0CxUTXPYeVXJZB.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/spectralsc/v5/Ktk2ALCRZonmalTgyPmRfsWg28TRN4O3WYZB_sU.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SpectralSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spectralSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spectralSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spicyRiceTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spicyrice/v8/uK_24rSEd-Uqwk4jY1RyGv-2WkowRcc.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SpicyRice',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spicyRiceTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spicyRiceTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spinnakerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spinnaker/v11/w8gYH2oyX-I0_rvR6Hmn3HwLqOqSBg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Spinnaker',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spinnakerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spinnakerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle spiraxTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/spirax/v8/buE3poKgYNLy0F3cXktt-Csn-Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Spirax',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme spiraxTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.spiraxTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle squadaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/squadaone/v8/BCasqZ8XsOrx4mcOk6MtWaA8WDBkHgs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SquadaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme squadaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.squadaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sreeKrushnadevarayaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sreekrushnadevaraya/v7/R70FjzQeifmPepmyQQjQ9kvwMkWYPfTA_EWb2FhQuXir.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SreeKrushnadevaraya',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sreeKrushnadevarayaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sreeKrushnadevarayaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle srirachaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sriracha/v4/0nkrC9D4IuYBgWcI9ObYRQDioeb0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sriracha',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme srirachaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.srirachaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle srisakdiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/srisakdi/v3/yMJRMIlvdpDbkB0A-jq8fSx5i814.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/srisakdi/v3/yMJWMIlvdpDbkB0A-gIAUghxoNFxW0Hz.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Srisakdi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme srisakdiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.srisakdiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle staatlichesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/staatliches/v3/HI_OiY8KO6hCsQSoAPmtMbectJG9O9PS.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Staatliches',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme staatlichesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.staatlichesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stalemateTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stalemate/v7/taiIGmZ_EJq97-UfkZRpuqSs8ZQpaQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Stalemate',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stalemateTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stalemateTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stalinistOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stalinistone/v23/MQpS-WezM9W4Dd7D3B7I-UT7eZ-UPyacPbo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'StalinistOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stalinistOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stalinistOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stardosStencilTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stardosstencil/v10/X7n94bcuGPC8hrvEOHXOgaKCc2TR71R3tiSx0g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/stardosstencil/v10/X7n44bcuGPC8hrvEOHXOgaKCc2TpU3tTvg-t29HSHw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'StardosStencil',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stardosStencilTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stardosStencilTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stintUltraCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stintultracondensed/v8/-W_gXIrsVjjeyEnPC45qD2NoFPtBE0xCh2A-qhUO2cNvdg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'StintUltraCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stintUltraCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stintUltraCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stintUltraExpandedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stintultraexpanded/v7/CSRg4yNNh-GbW3o3JkwoDcdvMKMf0oBAd0qoATQkWwam.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'StintUltraExpanded',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stintUltraExpandedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stintUltraExpandedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stokeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/stoke/v9/z7NXdRb7aTMfKNvFVgxC_pjcTeWU.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stoke/v9/z7NadRb7aTMfKONpfihK1YTV.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Stoke',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stokeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stokeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stokeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stokeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stokeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stokeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stokeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stokeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stokeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stokeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stokeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stokeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stokeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stokeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle straitTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/strait/v7/DtViJxy6WaEr1LZzeDhtkl0U7w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Strait',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme straitTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.straitTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.straitTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.straitTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.straitTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.straitTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.straitTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.straitTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.straitTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.straitTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.straitTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.straitTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.straitTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.straitTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle stylishTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/stylish/v8/m8JSjfhPYriQkk7-fo35dLxEdmo.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Stylish',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme stylishTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.stylishTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.stylishTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.stylishTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.stylishTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.stylishTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.stylishTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.stylishTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.stylishTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.stylishTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.stylishTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.stylishTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.stylishTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.stylishTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sueEllenFranciscoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sueellenfrancisco/v10/wXK3E20CsoJ9j1DDkjHcQ5ZL8xRaxru9ropF2lqk9H4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SueEllenFrancisco',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sueEllenFranciscoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sueEllenFranciscoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle suezOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/suezone/v4/taiJGmd_EZ6rqscQgNFJkIqg-I0w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SuezOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme suezOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.suezOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sumanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sumana/v4/4UaDrE5TqRBjGj-G8Bji76zR4w.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sumana/v4/4UaArE5TqRBjGj--TDfG54fN6ppsKg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sumana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sumanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sumanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sunflowerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/sunflower/v9/RWmPoKeF8fUjqIj7Vc-06MfiqYsGBGBzCw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/sunflower/v9/RWmPoKeF8fUjqIj7Vc-0sMbiqYsGBGBzCw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sunflower/v9/RWmPoKeF8fUjqIj7Vc-0-MDiqYsGBGBzCw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sunflower',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sunflowerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sunflowerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle sunshineyTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sunshiney/v10/LDIwapGTLBwsS-wT4vcgE8moUePWkg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sunshiney',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme sunshineyTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.sunshineyTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle supermercadoOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/supermercadoone/v9/OpNXnpQWg8jc_xps_Gi14kVVEXOn60b3MClBRTs.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SupermercadoOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme supermercadoOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.supermercadoOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle suraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/sura/v4/SZc23FL5PbyzFf5UWzXtjUM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/sura/v4/SZc53FL5PbyzLUJ7fz3GkUrS8DI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Sura',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme suraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.suraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.suraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.suraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.suraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.suraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.suraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.suraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.suraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.suraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.suraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.suraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.suraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.suraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle surannaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/suranna/v7/gokuH6ztGkFjWe58tBRZT2KmgP0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Suranna',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme surannaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.surannaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.surannaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.surannaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.surannaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.surannaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.surannaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.surannaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.surannaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.surannaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.surannaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.surannaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.surannaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.surannaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle suravaramTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/suravaram/v6/_gP61R_usiY7SCym4xIAi261Qv9roQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Suravaram',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme suravaramTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.suravaramTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle suwannaphumTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/suwannaphum/v13/jAnCgHV7GtDvc8jbe8hXXIWl_8C0Wg2V.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Suwannaphum',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme suwannaphumTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.suwannaphumTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle swankyandMooMooTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/swankyandmoomoo/v9/flUlRrKz24IuWVI_WJYTYcqbEsMUZ3kUtbPkR64SYQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'SwankyandMooMoo',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme swankyandMooMooTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.swankyandMooMooTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle syncopateTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/syncopate/v11/pe0sMIuPIYBCpEV5eFdyAv2-C99ycg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/syncopate/v11/pe0pMIuPIYBCpEV5eFdKvtKaA_Rue1UwVg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Syncopate',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme syncopateTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.syncopateTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tajawalTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l_6gLrZjiLlJ-G0.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l5qjLrZjiLlJ-G0.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tajawal/v3/Iura6YBj_oCad4k1rzaLCr5IlLA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l8KiLrZjiLlJ-G0.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l4qkLrZjiLlJ-G0.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l5anLrZjiLlJ-G0.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/tajawal/v3/Iurf6YBj_oCad4k1l7KmLrZjiLlJ-G0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tajawal',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tajawalTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tajawalTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tangerineTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tangerine/v11/IurY6Y5j_oScZZow4VOBDpxNhLBQ4Q.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/tangerine/v11/Iurd6Y5j_oScZZow4VO5srNpjJtM6G0t9w.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tangerine',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tangerineTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tangerineTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tapromTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/taprom/v11/UcCn3F82JHycULbFQyk3-0kvHg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Taprom',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tapromTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tapromTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tapromTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tapromTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tapromTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tapromTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tapromTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tapromTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tapromTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tapromTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tapromTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tapromTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tapromTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tapromTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tauriTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tauri/v8/TwMA-IISS0AM3IpVWHU_TBqO.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tauri',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tauriTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tauriTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tauriTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tauriTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tauriTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tauriTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tauriTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tauriTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tauriTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tauriTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tauriTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tauriTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tauriTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tauriTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tavirajTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcbv8Cj3ylylTXzRIorV8N1jU2gog.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcdv8Cj3ylylTXzTOwTM8lxr0iwolLl.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRCYKd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwTn-hRhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzREIJd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwT--tRhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcZv8Cj3ylylTXzfO4hU-FwnU0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcbv8Cj3ylylTXzTOwrV8N1jU2gog.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRBoId-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwTo-pRhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRDYPd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwTj-1RhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRFIOd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwT6-xRhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRE4Nd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwT9-9RhWa8q0v8ag.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/taviraj/v5/ahccv8Cj3ylylTXzRGoMd-lbgUS5u0s.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/taviraj/v5/ahcev8Cj3ylylTXzTOwT0-5RhWa8q0v8ag.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Taviraj',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tavirajTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tavirajTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tekoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/teko/v9/LYjCdG7kmE0gdQhfgCNqqVIuTN4.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/teko/v9/LYjNdG7kmE0gTaR3pCtBtVs.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/teko/v9/LYjCdG7kmE0gdVBegCNqqVIuTN4.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/teko/v9/LYjCdG7kmE0gdXxZgCNqqVIuTN4.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/teko/v9/LYjCdG7kmE0gdRhYgCNqqVIuTN4.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Teko',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tekoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tekoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tekoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tekoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tekoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tekoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tekoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tekoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tekoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tekoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tekoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tekoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tekoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tekoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle telexTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/telex/v8/ieVw2Y1fKWmIO9fTB1piKFIf.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Telex',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme telexTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.telexTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.telexTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.telexTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.telexTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.telexTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.telexTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.telexTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.telexTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.telexTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.telexTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.telexTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.telexTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.telexTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tenaliRamakrishnaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tenaliramakrishna/v6/raxgHj6Yt9gAN3LLKs0BZVMo8jmwn1-8KJXqUFFvtA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TenaliRamakrishna',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tenaliRamakrishnaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tenaliRamakrishnaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tenorSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tenorsans/v11/bx6ANxqUneKx06UkIXISr3JyC22IyqI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TenorSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tenorSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tenorSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle textMeOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/textmeone/v7/i7dOIFdlayuLUvgoFvHQFWZcalayGhyV.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TextMeOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme textMeOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.textMeOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle thasadithTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/thasadith/v3/mtG44_1TIqPYrd_f5R1YsEkU0CWuFw.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/thasadith/v3/mtG-4_1TIqPYrd_f5R1oskMQ8iC-F1ZE.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/thasadith/v3/mtG94_1TIqPYrd_f5R1gDGYw2A6yHk9d8w.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/thasadith/v3/mtGj4_1TIqPYrd_f5R1osnus3QS2PEpN8zxA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Thasadith',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme thasadithTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.thasadithTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle theGirlNextDoorTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/thegirlnextdoor/v10/pe0zMJCIMIsBjFxqYBIcZ6_OI5oFHCYIV7t7w6bE2A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TheGirlNextDoor',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme theGirlNextDoorTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.theGirlNextDoorTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tienneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tienne/v12/AYCKpX7pe9YCRP0LkEPHSFNyxw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/tienne/v12/AYCJpX7pe9YCRP0zLGzjQHhuzvef5Q.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/tienne/v12/AYCJpX7pe9YCRP0zFG7jQHhuzvef5Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tienne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tienneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tienneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tienneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tienneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tienneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tienneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tienneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tienneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tienneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tienneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tienneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tienneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tienneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tienneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tillanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tillana/v5/VuJxdNvf35P4qJ1OeKbXOIFneRo.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/tillana/v5/VuJ0dNvf35P4qJ1OQFL-HIlMZRNcp0o.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/tillana/v5/VuJ0dNvf35P4qJ1OQH75HIlMZRNcp0o.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/tillana/v5/VuJ0dNvf35P4qJ1OQBr4HIlMZRNcp0o.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/tillana/v5/VuJ0dNvf35P4qJ1OQAb7HIlMZRNcp0o.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tillana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tillanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tillanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle timmanaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/timmana/v4/6xKvdShfL9yK-rvpCmvbKHwJUOM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Timmana',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme timmanaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.timmanaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tinosTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tinos/v13/buE4poGnedXvwgX8dGVh8TI-.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/tinos/v13/buE2poGnedXvwjX-fmFD9CI-4NU.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/tinos/v13/buE1poGnedXvwj1AW0Fp2i43-cxL.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/tinos/v13/buEzpoGnedXvwjX-Rt1s0CoV_NxLeiw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Tinos',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tinosTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tinosTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tinosTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tinosTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tinosTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tinosTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tinosTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tinosTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tinosTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tinosTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tinosTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tinosTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tinosTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tinosTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle titanOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/titanone/v7/mFTzWbsGxbbS_J5cQcjykzIn2Etikg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TitanOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme titanOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.titanOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle titilliumWebTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPDcZTIAOhVxoMyOr9n_E7ffAzHKIx5YrSYqWM.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPFcZTIAOhVxoMyOr9n_E7fdMbewI1zZpaduWMmxA.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPDcZTIAOhVxoMyOr9n_E7ffGjEKIx5YrSYqWM.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPFcZTIAOhVxoMyOr9n_E7fdMbepI5zZpaduWMmxA.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPecZTIAOhVxoMyOr9n_E7fRMTsDIRSfr0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPAcZTIAOhVxoMyOr9n_E7fdMbmCKZXbr2BsA.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPDcZTIAOhVxoMyOr9n_E7ffBzCKIx5YrSYqWM.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPFcZTIAOhVxoMyOr9n_E7fdMbe0IhzZpaduWMmxA.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPDcZTIAOhVxoMyOr9n_E7ffHjDKIx5YrSYqWM.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPFcZTIAOhVxoMyOr9n_E7fdMbetIlzZpaduWMmxA.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/titilliumweb/v8/NaPDcZTIAOhVxoMyOr9n_E7ffEDBKIx5YrSYqWM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TitilliumWeb',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme titilliumWebTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.titilliumWebTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tradeWindsTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tradewinds/v8/AYCPpXPpYNIIT7h8-QenM3Jq7PKP5Z_G.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TradeWinds',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tradeWindsTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tradeWindsTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle trirongTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/trirong/v5/7r3EqXNgp8wxdOdOl-go3YRl6ujngw.ttf',
      GoogleFontsVariant.fromString('100italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3CqXNgp8wxdOdOn44QuY5hyO33g8IY.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOl0QJ_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('200italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QFa9B4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOlyAK_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QcaxB4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/trirong/v5/7r3GqXNgp8wxdOdOr4wi2aZg-ug.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3EqXNgp8wxdOdOn44o3YRl6ujngw.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOl3gL_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QKa1B4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOl1QM_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QBapB4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOlzAN_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QYatB4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOlywO_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('800italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QfahB4sP7itsB5g.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/trirong/v5/7r3DqXNgp8wxdOdOlwgP_a5L5uH-mts.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/trirong/v5/7r3BqXNgp8wxdOdOn44QWalB4sP7itsB5g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Trirong',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme trirongTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.trirongTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.trirongTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.trirongTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.trirongTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.trirongTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.trirongTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.trirongTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.trirongTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.trirongTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.trirongTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.trirongTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.trirongTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.trirongTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle trocchiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/trocchi/v8/qWcqB6WkuIDxDZLcDrtUvMeTYD0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Trocchi',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme trocchiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.trocchiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle trochutTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/trochut/v7/CHyjV-fDDlP9bDIw5nSIfVIPLns.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/trochut/v7/CHyhV-fDDlP9bDIw1naCeXAKPns8jw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/trochut/v7/CHymV-fDDlP9bDIw3sinWVokMnIllmA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Trochut',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme trochutTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.trochutTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.trochutTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.trochutTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.trochutTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.trochutTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.trochutTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.trochutTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.trochutTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.trochutTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.trochutTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.trochutTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.trochutTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.trochutTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle trykkerTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/trykker/v8/KtktALyWZJXudUPzhNnoOd2j22U.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Trykker',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme trykkerTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.trykkerTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle tulpenOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/tulpenone/v9/dFa6ZfeC474skLgesc0CWj0w_HyIRlE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TulpenOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme tulpenOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.tulpenOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle turretRoadTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/turretroad/v1/pxidypMgpcBFjE84Zv-fE0ONEdeLYk1Mq3ap.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/turretroad/v1/pxidypMgpcBFjE84Zv-fE0PpEteLYk1Mq3ap.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/turretroad/v1/pxiAypMgpcBFjE84Zv-fE3tFOvODSVFF.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/turretroad/v1/pxidypMgpcBFjE84Zv-fE0OxE9eLYk1Mq3ap.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/turretroad/v1/pxidypMgpcBFjE84Zv-fE0P5FdeLYk1Mq3ap.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/turretroad/v1/pxidypMgpcBFjE84Zv-fE0PlFteLYk1Mq3ap.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'TurretRoad',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme turretRoadTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.turretRoadTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ubuntuTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCv6KVjbNBYlgoC1CzTt2aMH4V_gg.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCp6KVjbNBYlgoKejZftWyIPYBvgpUI.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCs6KVjbNBYlgo6eAT3v02QFg.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCu6KVjbNBYlgoKeg7znUiAFpxm.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCv6KVjbNBYlgoCjC3Tt2aMH4V_gg.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCp6KVjbNBYlgoKejYHtGyIPYBvgpUI.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCv6KVjbNBYlgoCxCvTt2aMH4V_gg.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ubuntu/v14/4iCp6KVjbNBYlgoKejZPsmyIPYBvgpUI.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ubuntu',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ubuntuTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ubuntuTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ubuntuCondensedTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ubuntucondensed/v10/u-4k0rCzjgs5J7oXnJcM_0kACGMtf-fVqvHoJXw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UbuntuCondensed',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ubuntuCondensedTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ubuntuCondensedTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ubuntuMonoTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ubuntumono/v9/KFOjCneDtsqEr0keqCMhbBc9AMX6lJBP.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/ubuntumono/v9/KFOhCneDtsqEr0keqCMhbCc_CsHYkYBPY3o.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/ubuntumono/v9/KFO-CneDtsqEr0keqCMhbC-BL-Hyv4xGemO1.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/ubuntumono/v9/KFO8CneDtsqEr0keqCMhbCc_Mn33tYhkf3O1GVg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UbuntuMono',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ubuntuMonoTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ubuntuMonoTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle ultraTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/ultra/v12/zOLy4prXmrtY-tT6yLOD6NxF.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Ultra',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme ultraTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.ultraTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.ultraTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.ultraTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.ultraTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.ultraTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.ultraTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.ultraTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.ultraTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.ultraTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.ultraTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.ultraTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.ultraTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.ultraTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle uncialAntiquaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/uncialantiqua/v7/N0bM2S5WOex4OUbESzoESK-i-PfRS5VBBSSF.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UncialAntiqua',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme uncialAntiquaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.uncialAntiquaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle underdogTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/underdog/v8/CHygV-jCElj7diMroVSiU14GN2Il.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Underdog',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme underdogTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.underdogTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.underdogTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.underdogTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.underdogTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.underdogTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.underdogTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.underdogTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.underdogTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.underdogTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.underdogTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.underdogTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.underdogTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.underdogTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unicaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/unicaone/v7/DPEuYwWHyAYGVTSmalshdtffuEY7FA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UnicaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unicaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unicaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unifrakturCookTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/unifrakturcook/v11/IurA6Yli8YOdcoky-0PTTdkm56n05Uw13ILXs-h6.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UnifrakturCook',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unifrakturCookTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unifrakturCookTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unifrakturMaguntiaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/unifrakturmaguntia/v10/WWXPlieVYwiGNomYU-ciRLRvEmK7oaVun2xNNgNa1A.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'UnifrakturMaguntia',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unifrakturMaguntiaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unifrakturMaguntiaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unkemptTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/unkempt/v11/2EbnL-Z2DFZue0DSSYYf8z2Yt_c.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/unkempt/v11/2EbiL-Z2DFZue0DScTow1zWzq_5uT84.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Unkempt',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unkemptTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unkemptTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unlockTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/unlock/v9/7Au-p_8ykD-cDl7GKAjSwkUVOQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Unlock',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unlockTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unlockTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unlockTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unlockTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unlockTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unlockTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unlockTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unlockTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unlockTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unlockTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unlockTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unlockTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unlockTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unlockTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle unnaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/unna/v13/AYCEpXzofN0NCpgBlGHCWFM.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/unna/v13/AYCKpXzofN0NOpoLkEPHSFNyxw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/unna/v13/AYCLpXzofN0NMiQusGnpRFpr3vc.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/unna/v13/AYCJpXzofN0NOpozLGzjQHhuzvef5Q.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Unna',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme unnaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.unnaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.unnaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.unnaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.unnaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.unnaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.unnaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.unnaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.unnaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.unnaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.unnaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.unnaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.unnaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.unnaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vT323TextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vt323/v11/pxiKyp0ihIEF2hsYHpT2dkNE.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VT323',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vT323TextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vT323TextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vT323TextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vT323TextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vT323TextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vT323TextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vT323TextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vT323TextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vT323TextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vT323TextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vT323TextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vT323TextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vT323TextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vT323TextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vampiroOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vampiroone/v10/gokqH6DoDl5yXvJytFsdLkqnsvhIor3K.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VampiroOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vampiroOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vampiroOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle varelaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/varela/v10/DPEtYwqExx0AWHXJBBQFfvzDsQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Varela',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme varelaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.varelaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.varelaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.varelaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.varelaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.varelaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.varelaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.varelaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.varelaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.varelaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.varelaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.varelaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.varelaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.varelaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle varelaRoundTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/varelaround/v12/w8gdH283Tvk__Lua32TysjIvoMGOD9gxZw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VarelaRound',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme varelaRoundTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.varelaRoundTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vastShadowTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vastshadow/v9/pe0qMImKOZ1V62ZwbVY9dfe6Kdpickwp.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VastShadow',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vastShadowTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vastShadowTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vesperLibreTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vesperlibre/v11/bx6CNxyWnf-uxPdXDHUD_Rd4D0-N2qIWVQ.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/vesperlibre/v11/bx6dNxyWnf-uxPdXDHUD_RdA-2ap0okKXKvPlw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/vesperlibre/v11/bx6dNxyWnf-uxPdXDHUD_RdAs2Cp0okKXKvPlw.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/vesperlibre/v11/bx6dNxyWnf-uxPdXDHUD_RdAi2Kp0okKXKvPlw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VesperLibre',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vesperLibreTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vesperLibreTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vibesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vibes/v1/QdVYSTsmIB6tmbd3HpbsuBlh.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Vibes',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vibesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vibesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vibesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vibesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vibesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vibesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vibesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vibesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vibesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vibesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vibesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vibesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vibesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vibesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle viburTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vibur/v10/DPEiYwmEzw0QRjTpLjoJd-Xa.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Vibur',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme viburTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.viburTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.viburTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.viburTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.viburTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.viburTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.viburTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.viburTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.viburTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.viburTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.viburTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.viburTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.viburTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.viburTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vidalokaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vidaloka/v12/7cHrv4c3ipenMKlEass8yn4hnCci.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Vidaloka',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vidalokaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vidalokaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vigaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/viga/v8/xMQbuFFdSaiX_QIjD4e2OX8.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Viga',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vigaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vigaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vigaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vigaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vigaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vigaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vigaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vigaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vigaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vigaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vigaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vigaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vigaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vigaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vocesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/voces/v9/-F6_fjJyLyU8d4PBBG7YpzlJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Voces',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vocesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vocesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vocesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vocesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vocesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vocesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vocesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vocesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vocesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vocesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vocesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vocesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vocesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vocesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle volkhovTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/volkhov/v11/SlGQmQieoJcKemNeQTIOhHxzcD0.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/volkhov/v11/SlGSmQieoJcKemNecTAEgF52YD0NYw.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/volkhov/v11/SlGVmQieoJcKemNeeY4hoHRYbDQUego.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/volkhov/v11/SlGXmQieoJcKemNecTA8PHFSaBYRagrQrA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Volkhov',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme volkhovTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.volkhovTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vollkornTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb9GDoxxrvAnPhYGykuYkw2rQg1.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb7GDoxxrvAnPhYGxksaEgUqBg15TY.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb6GDoxxrvAnPhYGxH2TGg-hhQ8_C_3.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb4GDoxxrvAnPhYGxksUJA6jBAe-T_34DM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb6GDoxxrvAnPhYGxGSTWg-hhQ8_C_3.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb4GDoxxrvAnPhYGxksUPQ7jBAe-T_34DM.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb6GDoxxrvAnPhYGxGqT2g-hhQ8_C_3.ttf',
      GoogleFontsVariant.fromString('900italic'): 'http://fonts.gstatic.com/s/vollkorn/v10/0yb4GDoxxrvAnPhYGxksUMw5jBAe-T_34DM.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Vollkorn',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vollkornTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vollkornTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle vollkornSCTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/vollkornsc/v3/j8_v6-zQ3rXpceZj9cqnVhF5NH-iSq_E.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/vollkornsc/v3/j8_y6-zQ3rXpceZj9cqnVimhGluqYbPN5Yjn.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/vollkornsc/v3/j8_y6-zQ3rXpceZj9cqnVinFG1uqYbPN5Yjn.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/vollkornsc/v3/j8_y6-zQ3rXpceZj9cqnVin9GVuqYbPN5Yjn.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'VollkornSC',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme vollkornSCTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.vollkornSCTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle voltaireTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/voltaire/v9/1Pttg8PcRfSblAvGvQooYKVnBOif.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Voltaire',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme voltaireTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.voltaireTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle waitingfortheSunriseTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/waitingforthesunrise/v10/WBL1rFvOYl9CEv2i1mO6KUW8RKWJ2zoXoz5JsYZQ9h_ZYk5J.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'WaitingfortheSunrise',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme waitingfortheSunriseTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.waitingfortheSunriseTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle wallpoetTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/wallpoet/v11/f0X10em2_8RnXVVdUNbu7cXP8L8G.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Wallpoet',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme wallpoetTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.wallpoetTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle walterTurncoatTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/walterturncoat/v10/snfys0Gs98ln43n0d-14ULoToe67YB2dQ5ZPqQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'WalterTurncoat',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme walterTurncoatTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.walterTurncoatTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle warnesTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/warnes/v9/pONn1hc0GsW6sW5OpiC2o6Lkqg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Warnes',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme warnesTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.warnesTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.warnesTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.warnesTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.warnesTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.warnesTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.warnesTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.warnesTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.warnesTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.warnesTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.warnesTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.warnesTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.warnesTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.warnesTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle wellfleetTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/wellfleet/v7/nuF7D_LfQJb3VYgX6eyT42aLDhO2HA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Wellfleet',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme wellfleetTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.wellfleetTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle wendyOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/wendyone/v8/2sDcZGJOipXfgfXV5wgDb2-4C7wFZQ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'WendyOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme wendyOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.wendyOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle wireOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/wireone/v10/qFdH35Wah5htUhV75WGiWdrCwwcJ.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'WireOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme wireOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.wireOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle workSansTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/worksans/v5/QGYqz_wNahGAdqQ43Rh3H6DstfxA4OD3.ttf',
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh3s4HMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh314LMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/worksans/v5/QGYsz_wNahGAdqQ43RhPe6rol_lQ4A.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh3j4PMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh3o4TMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh3x4XMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('800'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh324bMn9JM6fnuKg.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/worksans/v5/QGYpz_wNahGAdqQ43Rh3_4fMn9JM6fnuKg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'WorkSans',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme workSansTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.workSansTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.workSansTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.workSansTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.workSansTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.workSansTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.workSansTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.workSansTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.workSansTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.workSansTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.workSansTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.workSansTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.workSansTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.workSansTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yanoneKaffeesatzTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('200'): 'http://fonts.gstatic.com/s/yanonekaffeesatz/v11/3y9-6aknfjLm_3lMKjiMgmUUYBs04YfUPs-tNtKENeNp.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/yanonekaffeesatz/v11/3y9-6aknfjLm_3lMKjiMgmUUYBs04YewPc-tNtKENeNp.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yanonekaffeesatz/v11/3y976aknfjLm_3lMKjiMgmUUYBs04b8cFeulHc6N.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/yanonekaffeesatz/v11/3y9-6aknfjLm_3lMKjiMgmUUYBs04YegOs-tNtKENeNp.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'YanoneKaffeesatz',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yanoneKaffeesatzTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yanoneKaffeesatzTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yantramanavTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('100'): 'http://fonts.gstatic.com/s/yantramanav/v5/flU-Rqu5zY00QEpyWJYWN5-QXeNzDB41rZg.ttf',
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/yantramanav/v5/flUhRqu5zY00QEpyWJYWN59Yf8NZIhI8tIHh.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yantramanav/v5/flU8Rqu5zY00QEpyWJYWN6f0V-dRCQ41.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/yantramanav/v5/flUhRqu5zY00QEpyWJYWN58AfsNZIhI8tIHh.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/yantramanav/v5/flUhRqu5zY00QEpyWJYWN59IeMNZIhI8tIHh.ttf',
      GoogleFontsVariant.fromString('900'): 'http://fonts.gstatic.com/s/yantramanav/v5/flUhRqu5zY00QEpyWJYWN59wesNZIhI8tIHh.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Yantramanav',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yantramanavTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yantramanavTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yatraOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yatraone/v6/C8ch4copsHzj8p7NaF0xw1OBbRDvXw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'YatraOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yatraOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yatraOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yellowtailTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yellowtail/v10/OZpGg_pnoDtINPfRIlLotlzNwED-b4g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Yellowtail',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yellowtailTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yellowtailTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yeonSungTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yeonsung/v8/QldMNTpbohAGtsJvUn6xSVNazqx2xg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'YeonSung',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yeonSungTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yeonSungTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yesevaOneTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yesevaone/v14/OpNJno4ck8vc-xYpwWWxpipfWhXD00c.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'YesevaOne',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yesevaOneTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yesevaOneTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yesteryearTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yesteryear/v8/dg4g_p78rroaKl8kRKo1r7wHTwonmyw.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Yesteryear',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yesteryearTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yesteryearTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle yrsaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/yrsa/v5/wlpxgwnQFlxs3af93IQ73W5OcCk.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/yrsa/v5/wlp-gwnQFlxs5QvV-IwQwWc.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/yrsa/v5/wlpxgwnQFlxs3f_83IQ73W5OcCk.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/yrsa/v5/wlpxgwnQFlxs3dP73IQ73W5OcCk.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/yrsa/v5/wlpxgwnQFlxs3bf63IQ73W5OcCk.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Yrsa',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme yrsaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.yrsaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zCOOLKuaiLeTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zcoolkuaile/v5/tssqApdaRQokwFjFJjvM6h2WpozzoXhC2g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZCOOLKuaiLe',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zCOOLKuaiLeTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zCOOLKuaiLeTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zCOOLQingKeHuangYouTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zcoolqingkehuangyou/v5/2Eb5L_R5IXJEWhD3AOhSvFC554MOOahI4mRIi_28c8bHWA.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZCOOLQingKeHuangYou',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zCOOLQingKeHuangYouTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zCOOLQingKeHuangYouTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zCOOLXiaoWeiTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zcoolxiaowei/v5/i7dMIFFrTRywPpUVX9_RJyM1YFKQHwyVd3U.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZCOOLXiaoWei',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zCOOLXiaoWeiTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zCOOLXiaoWeiTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zeyadaTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zeyada/v9/11hAGpPTxVPUbgZDNGatWKaZ3g.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'Zeyada',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zeyadaTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zeyadaTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zhiMangXingTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zhimangxing/v5/f0Xw0ey79sErYFtWQ9a2rq-g0actfektIJ0.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZhiMangXing',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zhiMangXingTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zhiMangXingTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zillaSlabTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('300'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa5ZfeM_74wlPZtksIFYpEY2HSjWlhzbaw.ttf',
      GoogleFontsVariant.fromString('300italic'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFanZfeM_74wlPZtksIFaj8CVHapXnp2fazkfg.ttf',
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa6ZfeM_74wlPZtksIFWj0w_HyIRlE.ttf',
      GoogleFontsVariant.fromString('italic'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa4ZfeM_74wlPZtksIFaj86-F6NVlFqdA.ttf',
      GoogleFontsVariant.fromString('500'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa5ZfeM_74wlPZtksIFYskZ2HSjWlhzbaw.ttf',
      GoogleFontsVariant.fromString('500italic'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFanZfeM_74wlPZtksIFaj8CDHepXnp2fazkfg.ttf',
      GoogleFontsVariant.fromString('600'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa5ZfeM_74wlPZtksIFYuUe2HSjWlhzbaw.ttf',
      GoogleFontsVariant.fromString('600italic'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFanZfeM_74wlPZtksIFaj8CIHCpXnp2fazkfg.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFa5ZfeM_74wlPZtksIFYoEf2HSjWlhzbaw.ttf',
      GoogleFontsVariant.fromString('700italic'): 'http://fonts.gstatic.com/s/zillaslab/v5/dFanZfeM_74wlPZtksIFaj8CRHGpXnp2fazkfg.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZillaSlab',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zillaSlabTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zillaSlabTextStyle(textStyle: textTheme?.overline),
    );
  }

  static TextStyle zillaSlabHighlightTextStyle({
    TextStyle textStyle,
    double fontSize,
    FontWeight fontWeight,
    FontStyle fontStyle,
  }) {
    final fonts = <GoogleFontsVariant, String>{
      GoogleFontsVariant.fromString('regular'): 'http://fonts.gstatic.com/s/zillaslabhighlight/v7/gNMbW2BrTpK8-inLtBJgMMfbm6uNVDvRxhtIY2DwSXlM.ttf',
      GoogleFontsVariant.fromString('700'): 'http://fonts.gstatic.com/s/zillaslabhighlight/v7/gNMUW2BrTpK8-inLtBJgMMfbm6uNVDvRxiP0TET4YmVF0Mb6.ttf',
    };

    return googleFontsTextStyle(
      fontFamily: 'ZillaSlabHighlight',
      fontSize: fontSize,
      fontWeight: fontWeight,
      textStyle: textStyle,
      fontStyle: fontStyle,
      fonts: fonts,
    );
  }

  static TextTheme zillaSlabHighlightTextTheme([TextTheme textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      display4: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.display4),
      display3: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.display3),
      display2: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.display2),
      display1: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.display1),
      headline: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.headline),
      title: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.title),
      subhead: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.subhead),
      body2: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.body2),
      body1: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.body1),
      caption: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.caption),
      button: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.button),
      subtitle: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.subtitle),
      overline: GoogleFonts.zillaSlabHighlightTextStyle(textStyle: textTheme?.overline),
    );
  }

}